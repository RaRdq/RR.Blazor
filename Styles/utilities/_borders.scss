@use '../abstracts' as *;
@use 'sass:map';

$border-widths: (
  '': var(--border-1),
  0: 0,
  2: var(--border-2),
  3: calc(var(--border-2) + var(--border-1)),
  4: var(--space-1)
);

$border-colors: (
  "transparent": transparent,
  current: currentColor,
  '': var(--color-border),
  light: var(--color-border-light),
  dark: var(--color-border-dark),
  medium: var(--color-border),
  strong: var(--color-border),
  primary: var(--color-primary),
  secondary: var(--color-primary),
  success: var(--color-success),
  warning: var(--color-warning),
  error: var(--color-error),
  info: var(--color-info),
  surface: var(--color-surface-elevated),
  outline: var(--color-border),
);

@each $width-name, $width-value in $border-widths {
  @if $width-name == '' {
    .border {
      border: #{$width-value} solid var(--color-border);
    }
  } @else if $width-name == 0 {
    .border-0, .border-none {
      border: none;
    }
  } @else {
    .border-#{$width-name} {
      border-width: #{$width-value};
    }
  }
}

@each $color-name, $color-value in $border-colors {
  @if $color-name == '' {
  } @else {
    .border-#{$color-name} {
      border-color: #{$color-value};
    }
  }
}

$border-sides: (
  t: top,
  r: right,
  b: bottom,
  l: left
);

@each $short, $side in $border-sides {
  .border-#{$short} {
    border-#{$side}: var(--border-1) solid var(--color-border);
  }

  @each $width-name, $width-value in $border-widths {
    @if $width-name != '' {
      .border-#{$short}-#{$width-name} {
        border-#{$side}-width: #{$width-value};
      }
    }
  }

  @each $color-name, $color-value in $border-colors {
    @if $color-name != '' {
      .border-#{$short}-#{$color-name} {
        border-#{$side}-color: #{$color-value};
      }
    }
  }
}

.border-x-0 {
  border-left-width: 0;
  border-right-width: 0;
}
.border-y-0 {
  border-top-width: 0;
  border-bottom-width: 0;
}

$button-border-colors: (
  primary: var(--color-primary),
  secondary: var(--color-border),
  ghost: transparent,
  danger: var(--color-error),
  success: var(--color-success),
  warning: var(--color-warning),
  outline: var(--color-border),
  glass: var(--glass-border-light)
);

@each $variant, $color in $button-border-colors {
  .border-button-#{$variant} { border-color: #{$color}; }
}

.hover\:border-button-secondary-hover:hover {
  border-color: color-mix(in srgb, var(--color-border) 60%, var(--color-text-muted));
}

$border-styles: (
  solid: solid,
  dashed: dashed,
  dotted: dotted,
  none: none
);

@each $style-name, $style-value in $border-styles {
  .border-#{$style-name} { border-style: #{$style-value}; }
}

$border-radius: (
  none: 0,
  sm: var(--radius-sm),
  '': var(--radius-md),
  md: var(--radius-md),
  lg: var(--radius-lg),
  xl: var(--radius-xl),
  2xl: var(--radius-2xl),
  full: var(--radius-full)
);

@each $size-name, $size-value in $border-radius {
  @if $size-name == '' {
    .rounded { border-radius: #{$size-value}; }
  } @else {
    .rounded-#{$size-name} { border-radius: #{$size-value}; }
  }
}

$radius-directions: (
  t: (top-left, top-right),
  b: (bottom-left, bottom-right),
  l: (top-left, bottom-left),
  r: (top-right, bottom-right),
  tl: (top-left),
  tr: (top-right),
  bl: (bottom-left),
  br: (bottom-right)
);

$radius-sizes: (
  none: 0,
  sm: var(--radius-sm),
  '': var(--radius-md),
  md: var(--radius-md),
  lg: var(--radius-lg)
);

@each $direction, $corners in $radius-directions {
  @each $size-name, $size-value in $radius-sizes {
    @if $size-name == '' {
      .rounded-#{$direction} {
        @each $corner in $corners {
          border-#{$corner}-radius: #{$size-value};
        }
      }
    } @else {
      .rounded-#{$direction}-#{$size-name} {
        @each $corner in $corners {
          border-#{$corner}-radius: #{$size-value};
        }
      }
    }
  }
}

.border-collapse { border-collapse: collapse; }
.border-separate { border-collapse: separate; }

$hover-border-colors: (
  primary: var(--color-primary),
  medium: var(--color-border),
  strong: var(--color-border)
);

@each $color-name, $color-value in $hover-border-colors {
  .hover\:border-#{$color-name}:hover {
    border-color: #{$color-value};
  }
}
