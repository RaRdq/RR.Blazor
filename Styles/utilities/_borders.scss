@use '../abstracts' as *;

// Border utility classes with consolidated structure
.border { 
  border: var(--border-1) solid var(--color-border-light); 
  
  // Border width variants
  &-2 { border-width: var(--border-2); }
  &-3 { border-width: calc(var(--border-2) + var(--border-1)); }
  &-4 { border-width: var(--space-1); }
  
  // Border reset variants
  &-none { border: none; }
  &-0 { border-width: 0; }
  
  // Border color variants
  &-transparent { border-color: transparent; }
  &-current { border-color: currentColor; }
  
  &-light { border-color: var(--color-border-light); }
  &-medium { border-color: var(--color-border-medium); }
  &-strong { border-color: var(--color-border-strong); }
  
  &-primary { border-color: var(--color-interactive-primary); }
  &-secondary { border-color: var(--color-interactive-secondary); }
  &-success { border-color: var(--color-success); }
  &-warning { border-color: var(--color-warning); }
  &-error { border-color: var(--color-error); }
  &-info { border-color: var(--color-info); }
}

// Side-specific border utilities
.border-t { border-top: var(--border-1) solid var(--color-border-light); }
.border-r { border-right: var(--border-1) solid var(--color-border-light); }
.border-b { border-bottom: var(--border-1) solid var(--color-border-light); }
.border-l { border-left: var(--border-1) solid var(--color-border-light); }

$border-sides: (
  t: top,
  r: right,
  b: bottom,
  l: left
);

$border-widths: (
  0: 0,
  2: var(--border-2),
  3: calc(var(--border-2) + var(--border-1)),
  4: var(--space-1)
);

@each $short, $side in $border-sides {
  @each $num, $width in $border-widths {
    @if $num != 1 {
      .border-#{$short}-#{$num} { border-#{$side}-width: #{$width}; }
    }
  }
}

// Side-specific border resets
.border {
  @each $short, $side in $border-sides {
    &-#{$short}-0 { border-#{$side}-width: 0; }
  }
  
  &-x-0 { border-left-width: 0; border-right-width: 0; }
  &-y-0 { border-top-width: 0; border-bottom-width: 0; }
}


.border-button-primary { border-color: var(--button-primary-bg); }
.border-button-secondary { border-color: var(--button-secondary-border); }
.border-button-ghost { border-color: var(--button-ghost-border); }
.border-button-danger { border-color: var(--button-danger-border); }
.border-button-success { border-color: var(--button-success-border); }
.border-button-warning { border-color: var(--button-warning-border); }
.border-button-outline { border-color: var(--button-outline-border); }
.border-button-glass { border-color: var(--button-glass-border); }

.hover\:border-button-secondary-hover:hover { border-color: var(--button-secondary-border-hover); }

.border-solid { border-style: solid; }
.border-dashed { border-style: dashed; }
.border-dotted { border-style: dotted; }
.border-none { border-style: none; }

.rounded-none { border-radius: 0; }
.rounded-sm { border-radius: var(--radius-sm); }
.rounded { border-radius: var(--radius-md); }
.rounded-md { border-radius: var(--radius-md); }
.rounded-lg { border-radius: var(--radius-lg); }
.rounded-xl { border-radius: var(--radius-xl); }
.rounded-2xl { border-radius: var(--radius-2xl); }
.rounded-full { border-radius: var(--radius-full); }

.rounded-t-none { border-top-left-radius: 0; border-top-right-radius: 0; }
.rounded-t-sm { border-top-left-radius: var(--radius-sm); border-top-right-radius: var(--radius-sm); }
.rounded-t { border-top-left-radius: var(--radius-md); border-top-right-radius: var(--radius-md); }
.rounded-t-md { border-top-left-radius: var(--radius-md); border-top-right-radius: var(--radius-md); }
.rounded-t-lg { border-top-left-radius: var(--radius-lg); border-top-right-radius: var(--radius-lg); }

.rounded-b-none { border-bottom-left-radius: 0; border-bottom-right-radius: 0; }
.rounded-b-sm { border-bottom-left-radius: var(--radius-sm); border-bottom-right-radius: var(--radius-sm); }
.rounded-b { border-bottom-left-radius: var(--radius-md); border-bottom-right-radius: var(--radius-md); }
.rounded-b-md { border-bottom-left-radius: var(--radius-md); border-bottom-right-radius: var(--radius-md); }
.rounded-b-lg { border-bottom-left-radius: var(--radius-lg); border-bottom-right-radius: var(--radius-lg); }


.border-collapse { border-collapse: collapse; }
.border-separate { border-collapse: separate; }

.hover\:border-primary:hover { border-color: var(--color-interactive-primary); }
.hover\:border-medium:hover { border-color: var(--color-border-medium); }
.hover\:border-strong:hover { border-color: var(--color-border-strong); }