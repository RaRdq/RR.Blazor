
@use '../abstracts' as *;
@use 'sass:map';
@use 'sass:list';

$ring-sizes: (
  0: 0,
  1: 1px,
  2: 2px,
  3: 3px,
  4: 4px
);

$ring-colors: (
  default: var(--color-interactive-focus),
  primary: color-mix(in srgb, var(--color-interactive-primary) 40%, transparent),
  success: color-mix(in srgb, var(--color-success) 40%, transparent),
  warning: color-mix(in srgb, var(--color-warning) 40%, transparent),
  error: color-mix(in srgb, var(--color-error) 40%, transparent)
);

@each $name, $size in $ring-sizes {
  .ring-#{$name} { 
    box-shadow: if($size == 0, none, 0 0 0 #{$size} var(--color-interactive-focus)) !important; 
  }
}

@each $name, $color in $ring-colors {
  @if $name != default {
    .ring-#{$name} { box-shadow: 0 0 0 2px #{$color} !important; }
  }
}

$opacity-scales: (0, 5, 10, 20, 25, 30, 40, 50, 60, 70, 75, 80, 90, 95, 100);

@each $scale in $opacity-scales {
  .opacity-#{$scale} { opacity: var(--opacity-#{$scale}) !important; }
}

$backdrop-filters: (
  blur: (
    none: none,
    sm: blur(4px),
    '': blur(8px),
    md: blur(12px),
    lg: blur(16px),
    xl: blur(24px),
    2xl: blur(40px),
    3xl: blur(64px)
  ),
  brightness: (
    0: brightness(0),
    50: brightness(0.5),
    75: brightness(0.75),
    90: brightness(0.9),
    95: brightness(0.95),
    100: brightness(1),
    105: brightness(1.05),
    110: brightness(1.1),
    125: brightness(1.25),
    150: brightness(1.5),
    200: brightness(2)
  ),
  contrast: (
    0: contrast(0),
    50: contrast(0.5),
    75: contrast(0.75),
    100: contrast(1),
    125: contrast(1.25),
    150: contrast(1.5),
    200: contrast(2)
  ),
  grayscale: (
    0: grayscale(0),
    '': grayscale(1)
  ),
  hue-rotate: (
    0: hue-rotate(0deg),
    15: hue-rotate(15deg),
    30: hue-rotate(30deg),
    60: hue-rotate(60deg),
    90: hue-rotate(90deg),
    180: hue-rotate(180deg)
  ),
  invert: (
    0: invert(0),
    '': invert(1)
  ),
  saturate: (
    0: saturate(0),
    50: saturate(0.5),
    100: saturate(1),
    150: saturate(1.5),
    200: saturate(2)
  ),
  sepia: (
    0: sepia(0),
    '': sepia(1)
  )
);

@each $filter-name, $variants in $backdrop-filters {
  @each $variant, $value in $variants {
    $class-name: if($variant == '', '.backdrop-#{$filter-name}', '.backdrop-#{$filter-name}-#{$variant}');
    #{$class-name} { backdrop-filter: #{$value} !important; }
  }
}

.drop-shadow-sm { filter: drop-shadow(0 1px 1px color-mix(in srgb, var(--color-text-primary) var(--opacity-5), transparent)) !important; }
.drop-shadow-md { filter: drop-shadow(0 2px 4px color-mix(in srgb, var(--color-text-primary) var(--opacity-10), transparent)) !important; }
.drop-shadow-lg { filter: drop-shadow(0 4px 8px color-mix(in srgb, var(--color-text-primary) var(--opacity-20), transparent)) !important; }
.drop-shadow-xl { filter: drop-shadow(0 8px 16px color-mix(in srgb, var(--color-text-primary) var(--opacity-25), transparent)) !important; }
.drop-shadow-2xl { filter: drop-shadow(0 16px 32px color-mix(in srgb, var(--color-text-primary) var(--opacity-30), transparent)) !important; }
.drop-shadow-none { filter: drop-shadow(0 0 transparent) !important; }

$shadow-sizes: (
  none: none,
  sm: var(--shadow-sm),
  md: var(--shadow-md),
  lg: var(--shadow-lg),
  xl: var(--shadow-xl),
  2xl: var(--shadow-2xl),
  inner: inset 0 2px 4px 0 color-mix(in srgb, var(--color-text-primary) var(--opacity-5), transparent)
);

$shadow-colors: (
  primary: var(--color-interactive-primary),
  secondary: var(--color-interactive-secondary),
  success: var(--color-success),
  warning: var(--color-warning),
  error: var(--color-error),
  info: var(--color-info)
);

@each $name, $shadow in $shadow-sizes {
  .shadow-#{$name} { box-shadow: #{$shadow} !important; }
}

@each $name, $color in $shadow-colors {
  .shadow-#{$name} { 
    box-shadow: 0 4px 16px color-mix(in srgb, #{$color} 25%, transparent) !important; 
  }
}

$elevation-shadows: (
  0: none,
  1: var(--shadow-sm), 2: var(--shadow-sm),
  3: var(--shadow-md), 4: var(--shadow-md),
  5: var(--shadow-lg), 6: var(--shadow-lg), 7: var(--shadow-lg),
  8: var(--shadow-xl), 9: var(--shadow-xl), 10: var(--shadow-xl), 11: var(--shadow-xl)
);

@each $level, $shadow in $elevation-shadows {
  .elevation-#{$level} { box-shadow: #{$shadow} !important; }
}

@for $i from 12 through 24 {
  .elevation-#{$i} { box-shadow: var(--shadow-2xl) !important; }
}

$elevation-variants: (
  interactive: (transition: var(--transition-fast)),
  lift: (transition: var(--transition-fast)),
  lift-sm: (transition: var(--transition-fast)),
  lift-lg: (transition: var(--transition-fast))
);

$elevation-hovers: (
  lift: translateY(-2px),
  lift-sm: translateY(-1px),
  lift-lg: translateY(-4px)
);

@each $name, $props in $elevation-variants {
  .elevation-#{$name} {
    @each $prop, $value in $props {
      #{$prop}: #{$value} !important;
    }
  }
}

@each $name, $transform in $elevation-hovers {
  .elevation-#{$name}:hover { transform: #{$transform} !important; }
}

$glass-variants: (
  light: (
    background: var(--glass-bg-light),
    backdrop-filter: var(--glass-blur-sm) var(--glass-saturate),
    border: var(--border-1) solid var(--glass-border-light),
    box-shadow: var(--glass-shadow-light)
  ),
  medium: (
    background: var(--glass-bg-medium),
    backdrop-filter: var(--glass-blur-md) var(--glass-saturate),
    border: var(--border-1) solid var(--glass-border-medium),
    box-shadow: var(--glass-shadow-medium)
  ),
  heavy: (
    background: var(--glass-bg-heavy),
    backdrop-filter: var(--glass-blur-lg) var(--glass-saturate),
    border: var(--border-1) solid var(--glass-border-heavy),
    box-shadow: var(--glass-shadow-heavy)
  ),
  frost: (
    background: var(--glass-bg-frost),
    backdrop-filter: var(--glass-blur-xl) var(--glass-saturate),
    border: var(--border-1) solid var(--glass-border-light),
    box-shadow: var(--glass-shadow-frost)
  )
);

@each $name, $props in $glass-variants {
  .glass-#{$name} {
    @each $prop, $value in $props {
      #{$prop}: #{$value} !important;
    }
  }
}

.glass-interactive {
  @each $prop, $value in map.get($glass-variants, medium) {
    #{$prop}: #{$value} !important;
  }
  transition: var(--transition-fast) !important;
  
  &:hover {
    background: var(--glass-hover-bg) !important;
    backdrop-filter: var(--glass-hover-blur) var(--glass-saturate) !important;
  }
}

