@use '../abstracts' as *;
@use 'sass:map';

$spacing-scale: (
  0: var(--space-0),
  px: var(--space-px),
  '0-5': var(--space-0-5),
  1: var(--space-1),
  '1-5': var(--space-1-5),
  2: var(--space-2),
  '2-5': var(--space-2-5),
  3: var(--space-3),
  '3-5': var(--space-3-5),
  4: var(--space-4),
  5: var(--space-5),
  6: var(--space-6),
  7: var(--space-7),
  8: var(--space-8),
  9: var(--space-9),
  10: var(--space-10),
  11: var(--space-11),
  12: var(--space-12),
  14: var(--space-14),
  16: var(--space-16),
  20: var(--space-20),
  24: var(--space-24)
);

$common-spaces: (0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 16, 20, 24);
$space-between-sizes: (0, 1, 2, 3, 4, 6, 8, 12, 16);
$negative-margin-sizes: (1, 2, 3, 4, 6, 8, 12, 16);

$margin-directions: (
  t: margin-top,
  r: margin-right,
  b: margin-bottom,
  l: margin-left,
  a: margin,   // ma- prefix for all-direction margin
  '': margin   // m- shorthand for all-direction margin
);

$padding-directions: (
  t: padding-top,
  r: padding-right,
  b: padding-bottom,
  l: padding-left,
  a: padding,  // pa- prefix for all-direction padding
  '': padding  // p- shorthand for all-direction padding
);

$margin-auto-directions: (t, r, b, l);

@each $size in $space-between-sizes {
  .space-x-#{$size} > :not([hidden]) ~ :not([hidden]) { 
    margin-left: map.get($spacing-scale, $size); 
  }
}

@each $size in $space-between-sizes {
  .space-y-#{$size} > :not([hidden]) ~ :not([hidden]) { 
    margin-top: map.get($spacing-scale, $size); 
  }
}

@include responsive-max(md) {
  .gap-responsive { gap: var(--space-3); }
}

@include responsive-max(sm) {
  .gap-responsive { gap: var(--space-2); }
}

.section-spacing {
  margin-bottom: var(--space-6);
  
  @include responsive-max(md) {
    margin-bottom: var(--space-4);
  }
  
  @include responsive-max(sm) {
    margin-bottom: var(--space-3);
  }
}



@each $direction, $property in $padding-directions {
  @each $size in $common-spaces {
    .p#{$direction}-#{$size} { #{$property}: map.get($spacing-scale, $size); }
  }
}

@each $size in $common-spaces {
  .px-#{$size} { 
    padding-inline: map.get($spacing-scale, $size); 
  }
  .py-#{$size} { 
    padding-block: map.get($spacing-scale, $size); 
  }
}

@each $direction, $property in $margin-directions {
  @each $size in $common-spaces {
    .m#{$direction}-#{$size} { #{$property}: map.get($spacing-scale, $size); }
  }
}

@each $size in $common-spaces {
  .mx-#{$size} { 
    margin-inline: map.get($spacing-scale, $size); 
  }
  .my-#{$size} { 
    margin-block: map.get($spacing-scale, $size); 
  }
}


@each $direction in $margin-auto-directions {
  .m#{$direction}-auto { margin-#{$direction}: auto; }
}


@each $direction, $property in $margin-directions {
  @each $size in $negative-margin-sizes {
    .m#{$direction}-n#{$size} { 
      #{$property}: calc(-1 * #{map.get($spacing-scale, $size)}); 
    }
  }
}

@each $size in $negative-margin-sizes {
  .mx-n#{$size} { 
    margin-inline: calc(-1 * #{map.get($spacing-scale, $size)}); 
  }
  .my-n#{$size} { 
    margin-block: calc(-1 * #{map.get($spacing-scale, $size)}); 
  }
}

$responsive-sizes: (0, 1, 2, 3, 4, 6, 8, 12, 16); // Most commonly used responsive sizes

@each $breakpoint in (sm, md, lg, xl) {
  @include responsive-min($breakpoint) {
    
    @each $direction, $property in $padding-directions {
      @each $size in $responsive-sizes {
        .#{$breakpoint}\:p#{$direction}-#{$size} { 
          #{$property}: map.get($spacing-scale, $size); 
        }
      }
    }
    
  
    @each $direction, $property in $margin-directions {
      @each $size in $responsive-sizes {
        .#{$breakpoint}\:m#{$direction}-#{$size} { 
          #{$property}: map.get($spacing-scale, $size); 
        }
      }
    }
    
    @each $size in $responsive-sizes {
      .#{$breakpoint}\:px-#{$size} { padding-inline: map.get($spacing-scale, $size); }
      .#{$breakpoint}\:py-#{$size} { padding-block: map.get($spacing-scale, $size); }
      .#{$breakpoint}\:mx-#{$size} { margin-inline: map.get($spacing-scale, $size); }
      .#{$breakpoint}\:my-#{$size} { margin-block: map.get($spacing-scale, $size); }
    }
    
    @each $direction in $margin-auto-directions {
      .#{$breakpoint}\:m#{$direction}-auto { 
        margin-#{$direction}: auto; 
      }
    }
    
  }
}