@use '../abstracts' as *;

// State-based Utilities
// Interactive and loading states for UI elements

// Loading States
.is-loading {
  position: relative;
  color: transparent;
  pointer-events: none;
  user-select: none;
  
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: var(--space-5);
    height: var(--space-5);
    margin: calc(-1 * #{var(--space-2-5)}) 0 0 calc(-1 * #{var(--space-2-5)});
    border: var(--border-2) solid var(--color-border-light);
    border-top-color: var(--color-interactive-primary);
    border-radius: var(--radius-full);
    animation: spin 0.8s linear infinite;
  }
  
  &--inline::after {
    width: var(--space-4);
    height: var(--space-4);
    margin: calc(-1 * #{var(--space-2)}) 0 0 calc(-1 * #{var(--space-2)});
  }
  
  &--overlay {
    &::before {
      content: '';
      position: absolute;
      inset: 0;
      background: var(--overlay-white-90);
      backdrop-filter: blur(var(--blur-sm));
      z-index: 1;
    }
    
    &::after {
      z-index: 2;
    }
  }
}

.is-processing {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      var(--overlay-primary-20),
      transparent
    );
    animation: shimmer 1.5s infinite;
  }
}

.is-disabled {
  opacity: var(--disabled-opacity);
  cursor: var(--disabled-cursor);
  pointer-events: none;
  filter: grayscale(20%);
}

// Status States
.is-success {
  color: var(--color-success);
  
  &--bg {
    background-color: var(--color-success-subtle);
    border-color: var(--color-success);
  }
  
  &--border {
    border: var(--border-1) solid var(--color-success);
  }
  
  &--glow {
    box-shadow: 0 0 0 var(--space-1) var(--overlay-success-15);
  }
}

.is-error {
  color: var(--color-error);
  
  &--bg {
    background-color: var(--color-error-subtle);
    border-color: var(--color-error);
  }
  
  &--border {
    border: var(--border-1) solid var(--color-error);
  }
  
  &--glow {
    box-shadow: 0 0 0 var(--space-1) var(--overlay-error-15);
  }
}

.is-warning {
  color: var(--color-warning);
  
  &--bg {
    background-color: var(--color-warning-subtle);
    border-color: var(--color-warning);
  }
  
  &--border {
    border: var(--border-1) solid var(--color-warning);
  }
  
  &--glow {
    box-shadow: 0 0 0 var(--space-1) var(--overlay-warning-10);
  }
}

.is-info {
  color: var(--color-info);
  
  &--bg {
    background-color: var(--color-info-subtle);
    border-color: var(--color-info);
  }
  
  &--border {
    border: var(--border-1) solid var(--color-info);
  }
}

// Interaction States
.is-clickable {
  cursor: pointer;
  transition: var(--transition-all);
  
  &:hover {
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
  }
  
  &:active {
    transform: translateY(0);
    box-shadow: var(--shadow-sm);
  }
}

.is-draggable {
  cursor: move;
  cursor: grab;
  touch-action: none;
  
  &:active {
    cursor: grabbing;
  }
  
  &--dragging {
    opacity: 0.5;
    cursor: grabbing;
    z-index: var(--z-tooltip);
  }
}

.is-selected {
  background-color: var(--color-primary-subtle);
  border-color: var(--color-interactive-primary);
  position: relative;
  
  &::before {
    content: '';
    position: absolute;
    inset: -2px;
    border: var(--border-2) solid var(--color-interactive-primary);
    border-radius: inherit;
    pointer-events: none;
  }
  
  &--subtle {
    background-color: var(--overlay-primary-10);
    
    &::before {
      display: none;
    }
  }
}

// Active/Inactive States
.is-active {
  color: var(--color-interactive-primary);
  font-weight: var(--font-semibold);
  
  &--indicator::before {
    content: '';
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: var(--space-1);
    height: 70%;
    background: var(--color-interactive-primary);
    border-radius: 0 var(--radius-sm) var(--radius-sm) 0;
  }
}

.is-inactive {
  opacity: 0.6;
  filter: grayscale(30%);
}

// Visibility States
.is-hidden {
  display: none !important;
}

.is-visible {
  visibility: visible !important;
}

.is-invisible {
  visibility: hidden !important;
}

// Focus States
.is-focused {
  outline: none;
  box-shadow: 0 0 0 var(--space-1) var(--overlay-primary-20);
}

// Skeleton Loading States
.is-skeleton {
  background: linear-gradient(
    90deg,
    var(--color-background-secondary) 25%,
    var(--color-background-elevated) 50%,
    var(--color-background-secondary) 75%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
  color: transparent;
  cursor: default;
  user-select: none;
  
  * {
    visibility: hidden;
  }
  
  &--text {
    border-radius: var(--radius-sm);
    height: var(--space-5);
    margin: var(--space-2) 0;
  }
  
  &--circle {
    border-radius: var(--radius-full);
    width: var(--space-10);
    height: var(--space-10);
  }
  
  &--rect {
    border-radius: var(--radius-md);
  }
}

// Pulse States
.is-pulsing {
  animation: pulseSoft 2s infinite;
  
  &--fast {
    animation-duration: 1s;
  }
  
  &--slow {
    animation-duration: 3s;
  }
}

// New/Updated States
.is-new {
  position: relative;
  
  &::after {
    content: 'NEW';
    position: absolute;
    top: calc(-1 * #{var(--space-2)});
    right: calc(-1 * #{var(--space-2)});
    background: var(--color-success);
    color: var(--color-text-inverse);
    font-size: var(--text-xs);
    font-weight: var(--font-bold);
    padding: var(--space-px) var(--space-2);
    border-radius: var(--radius-full);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
}

.is-updated {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    top: var(--space-1);
    right: var(--space-1);
    width: var(--space-2);
    height: var(--space-2);
    background: var(--color-warning);
    border-radius: var(--radius-full);
    animation: pulseSoft 2s infinite;
  }
}

// Using generic animations from _animations.scss
// No component-specific animations needed