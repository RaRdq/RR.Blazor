@use '../abstracts' as *;

// General UI states (non-semantic) - Consolidated with &- pattern
.state {
  // === ACTIVITY STATES ===
  &-active {
    color: var(--color-interactive-primary);
    font-weight: var(--font-semibold);
    
    &-indicator::before {
      content: '';
      position: absolute;
      left: 0;
      top: 50%;
      transform: translateY(-50%);
      width: var(--space-1);
      height: 70%;
      background: var(--color-interactive-primary);
      border-radius: 0 var(--radius-sm) var(--radius-sm) 0;
    }
  }

  &-inactive {
    opacity: 0.6;
    filter: grayscale(30%);
  }

  &-disabled {
    opacity: var(--opacity-disabled);
    cursor: not-allowed;
    pointer-events: none;
    filter: grayscale(20%);
  }

  // === LOADING STATES ===
  &-loading {
    position: relative;
    color: transparent;
    pointer-events: none;
    user-select: none;
    
    &::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: var(--space-6);
      height: var(--space-6);
      margin: calc(-1 * #{var(--space-2-5)}) 0 0 calc(-1 * #{var(--space-2-5)});
      border: var(--border-2) solid var(--color-border-light);
      border-top-color: var(--color-interactive-primary);
      border-radius: var(--radius-full);
      animation: spin 0.8s linear infinite;
    }
    
    &-inline::after {
      width: var(--space-4);
      height: var(--space-4);
      margin: calc(-1 * #{var(--space-2)}) 0 0 calc(-1 * #{var(--space-2)});
    }
    
    &-overlay {
      &::before {
        content: '';
        position: absolute;
        inset: 0;
        background: var(--color-glass-light);
        backdrop-filter: blur(var(--blur-sm));
        z-index: 1;
      }
      
      &::after {
        z-index: 2;
      }
    }
  }

  &-processing {
    position: relative;
    overflow: hidden;
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        90deg,
        transparent,
        var(--color-focus-primary),
        transparent
      );
      animation: shimmer 1.5s infinite;
    }
  }

  &-skeleton {
    background: linear-gradient(
      90deg,
      var(--color-background-secondary) 25%,
      var(--color-background-elevated) 50%,
      var(--color-background-secondary) 75%
    );
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
    color: transparent;
    cursor: default;
    user-select: none;
    border-radius: var(--radius-sm);
    
    * {
      visibility: hidden;
    }
  }

  // === INTERACTION STATES ===
  &-clickable {
    cursor: pointer;
    transition: var(--transition-normal);
    
    &:hover {
      transform: translateY(-1px);
      box-shadow: var(--shadow-md);
    }
    
    &:active {
      transform: translateY(0);
      box-shadow: var(--shadow-sm);
    }
  }

  &-draggable {
    cursor: move;
    cursor: grab;
    touch-action: none;
    
    &:active {
      cursor: grabbing;
    }
    
    &-dragging {
      opacity: 0.5;
      cursor: grabbing;
      z-index: var(--z-tooltip);
    }
  }

  &-selected {
    background-color: var(--color-interactive-primary);
    border-color: var(--color-interactive-primary);
    color: var(--color-text-inverse);
    position: relative;
    
    &::before {
      content: '';
      position: absolute;
      inset: -2px;
      border: var(--border-2) solid var(--color-interactive-primary);
      border-radius: inherit;
      pointer-events: none;
    }
    
    &-light {
      background-color: var(--color-background-elevated);
      color: var(--color-interactive-primary);
      
      &::before {
        display: none;
      }
    }
  }

  &-focused {
    outline: none;
    box-shadow: 0 0 0 var(--space-1) var(--color-focus-primary);
  }

  // === VISIBILITY STATES ===
  &-hidden {
    display: none;
  }

  &-visible {
    visibility: visible;
  }

  &-invisible {
    visibility: hidden;
  }

  // === ANIMATION STATES ===
  &-pulsing {
    animation: pulseSoft 2s infinite;
    
    &-fast {
      animation-duration: 1s;
    }
    
    &-slow {
      animation-duration: 3s;
    }
  }
}
