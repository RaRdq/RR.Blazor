@use '../abstracts' as *;
@use 'sass:list';

$icon-sizes: (
  'xs': var(--icon-xs),
  'sm': var(--icon-sm),
  'base': var(--icon-base),
  'lg': var(--icon-lg),
  'xl': var(--icon-xl),
  '2xl': var(--icon-2xl),
  '3xl': var(--icon-3xl),
  '4xl': var(--icon-4xl),
  '5xl': var(--icon-5xl)
);

$icon-colors: (
  'primary': var(--color-primary),
  'secondary': var(--color-text-muted),
  'tertiary': var(--color-text-subtle),
  'success': var(--color-success),
  'warning': var(--color-warning),
  'error': var(--color-error),
  'danger': var(--color-error),
  'info': var(--color-info),
  'muted': var(--color-text-muted),
  'inverse': var(--color-text-inverse)
);

$icon-gaps: (
  'xs': var(--space-1),
  'sm': var(--space-1-5),
  'base': var(--space-2-5),
  'lg': var(--space-4),
  'xl': var(--space-6)
);

// ========================================
// Library-agnostic icon base class
// ========================================
.icon {
  @extend %icon-component-base;
  vertical-align: middle;
  
  // Size variants
  @each $name, $size in $icon-sizes {
    &-#{$name} {
      font-size: #{$size};
      width: #{$size};
      height: #{$size};
    }
  }

  // Color variants
  @each $name, $color in $icon-colors {
    &-#{$name} { color: #{$color}; }
  }

  &-interactive {
    @extend %icon-interactive;
    &:hover { transform: scale(calc(1 + var(--φ-inv) * 0.1)); }
    &:active { transform: scale(var(--φ-inv)); }
  }

  &-status {
    &-pending {
      color: var(--color-warning);
      animation: pulse 2s ease-in-out infinite;
    }
    &-active { color: var(--color-success); }
    &-inactive { color: var(--color-text-muted); }
  }

  &-circle {
    @extend %icon-container-base;
    border-radius: var(--radius-full);

    &-sm {
      @extend %icon-container-sm;
      padding: var(--space-1);
    }
    &-md {
      @extend %icon-container-md;
      padding: var(--space-2);
    }
    &-lg {
      @extend %icon-container-lg;
      padding: var(--space-3);
    }
  }

  &-muted { opacity: 0.7; }

  &-button {
    @extend %icon-button;

    &:disabled {
      opacity: var(--opacity-disabled);
      cursor: not-allowed;
      pointer-events: none;
    }

    &:focus-visible {
      outline: var(--state-focus-ring);
      outline-offset: 2px;
    }

    &-loading {
      pointer-events: none;
      .icon {
        @extend %icon-loading;
      }
    }
  }

  &-loading {
    animation: spin calc(var(--duration-normal) * var(--φ) * 6) linear infinite;
  }

  &-disabled {
    opacity: var(--opacity-disabled);
    pointer-events: none;
    cursor: not-allowed;
  }

  &-focus {
    outline: var(--state-focus-ring);
    outline-offset: 2px;
  }

  &-inherit { color: inherit; }
  &-current { color: currentColor; }

  &-container {
    @extend %icon-container-base;

    &-xl {
      width: var(--space-12);
      height: var(--space-12);
    }
  }

  &[aria-hidden="true"] {
    pointer-events: none;
  }

  &[aria-label],
  &[role="img"] {
    &:focus-visible {
      outline: 2px solid var(--color-primary);
      outline-offset: 2px;
      border-radius: var(--radius-sm);
    }
  }

  @media (prefers-reduced-motion: reduce) {
    &-loading,
    &-interactive {
      animation: none;
      transition: none;
      transform: none;

      &:hover, &:active {
        transform: none;
      }
    }
  }

  &-interactive,
  &-button {
    min-width: var(--touch-target-min);
    min-height: var(--touch-target-min);
  }
}

// ========================================
// Material Icons Implementation
// ========================================
.icon-material,
.material-symbols-rounded {
  @extend %icon-material-symbols;
  margin: 0;
  position: relative;
  z-index: var(--z-base);
  
  // Material Icons specific font variations
  &.thin    { font-variation-settings: 'FILL' 0, 'wght' 100, 'GRAD' 0, 'opsz' 24; }
  &.light   { font-variation-settings: 'FILL' 0, 'wght' 200, 'GRAD' 0, 'opsz' 24; }
  &.regular { font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 24; }
  &.medium  { font-variation-settings: 'FILL' 0, 'wght' 500, 'GRAD' 0, 'opsz' 24; }
  &.bold    { font-variation-settings: 'FILL' 0, 'wght' 700, 'GRAD' 0, 'opsz' 24; }
  
  &.outlined { font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 24; }
  &.filled   { font-variation-settings: 'FILL' 1, 'wght' 400, 'GRAD' 0, 'opsz' 24; }
  
  &.low-emphasis  { font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' -25, 'opsz' 24; }
  &.high-emphasis { font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 200, 'opsz' 24; }

  // Dark theme adjustments for Material Icons
  [data-theme="dark"] & {
    opacity: 0.95;
    font-variation-settings:
      'FILL' 0,
      'wght' 300,
      'GRAD' 25,
      'opsz' 24;
  }

  @media (prefers-contrast: high) {
    font-variation-settings:
      'FILL' 1,
      'wght' 700,
      'GRAD' 200,
      'opsz' 24;
  }
}

// ========================================
// Default Icon Implementation
// Currently set to Material Icons
// Change this single line to swap icon libraries
// ========================================
.icon {
  @extend %icon-material-symbols;
}

// ========================================
// Icon with text composition
// ========================================
.icon-text {
  display: inline-flex;
  align-items: center;
  gap: var(--space-2-5);
  position: relative;

  @each $name, $gap in $icon-gaps {
    &-#{$name} { gap: #{$gap}; }
  }

  .icon,
  i {
    flex-shrink: 0;
    position: relative;
    z-index: var(--z-base);
  }

  span, .text {
    position: relative;
    z-index: var(--z-base);
    line-height: 1.2;
  }
}