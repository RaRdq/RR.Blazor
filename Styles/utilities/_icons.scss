// Icon Utility System - Dense, generic, reusable
@use '../abstracts' as *;
@use 'sass:list';

// Generate consistent icon utilities with SCSS loops (DRY principle)
$icon-sizes: (
  'xs': var(--icon-xs),
  'sm': var(--icon-sm), 
  'base': var(--icon-base),
  'lg': var(--icon-lg),
  'xl': var(--icon-xl),
  '2xl': var(--icon-2xl),
  '3xl': var(--icon-3xl),
  '4xl': var(--icon-4xl),
  '5xl': var(--icon-5xl)
);

// Pure utility classes for direct font-size control
@each $name, $size in $icon-sizes {
  .icon-#{$name} { font-size: #{$size}; }
  .icon-#{$name}\! { font-size: #{$size}; }
}

// Structured icon component with full control
.icon {
  @extend %icon-base;
  
  // Size variants - complete coverage matching utility classes
  @each $name, $size in $icon-sizes {
    &-#{$name} {
      font-size: #{$size};
      width: #{$size};
      height: #{$size};
    }
  }

  // Color utilities - semantic and contextual
  $icon-colors: (
    'primary': var(--color-interactive-primary),
    'secondary': var(--color-text-secondary), 
    'tertiary': var(--color-text-tertiary),
    'success': var(--color-success),
    'warning': var(--color-warning),
    'error': var(--color-error),
    'info': var(--color-info),
    'inverse': var(--color-text-inverse)
  );

  @each $name, $color in $icon-colors {
    &-#{$name} { color: #{$color}; }
  }

  // Context-aware utilities
  $icon-contexts: (
    'on-dark': var(--color-text-inverse),
    'on-primary': var(--color-text-on-primary),
    'on-secondary': var(--color-text-on-secondary),
    'on-success': var(--color-text-on-success),
    'on-warning': var(--color-text-on-warning),
    'on-error': var(--color-text-on-error),
    'on-info': var(--color-text-on-info)
  );

  @each $name, $color in $icon-contexts {
    &-#{$name} { color: #{$color}; }
  }

  // Special states
  &-muted { color: var(--color-text-secondary); opacity: 0.7; }

  // Interactive states - using extend from abstracts
  &-interactive {
    @extend %icon-interactive;
  }

  // Special contextual variants
  &-clickable {
    @extend %icon-interactive;
    padding: var(--space-1);
    margin: calc(-1 * var(--space-1));
  }

  &-button {
    @extend %icon-interactive;
    padding: var(--space-2);
    margin: calc(-1 * var(--space-2));
    border-radius: var(--radius-md);
  }

  // Loading animation
  &-loading {
    animation: spin 1s linear infinite;
  }
}

// Inheritance utilities - using &- syntax
.icon {
  &-inherit { color: inherit; }
  &-current { color: currentColor; }
}

// Material Icons integration - styling only (font loaded by project)
.icon-material {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-feature-settings: 'liga';
  -webkit-font-smoothing: antialiased;
}

// Material Symbols Rounded integration - styling only (font loaded by project)
.material-symbols-rounded {
  font-family: 'Material Symbols Rounded';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  font-variation-settings:
    'FILL' 0,
    'wght' 500,
    'GRAD' 0,
    'opsz' 20;
  user-select: none;
  color: inherit;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  line-height: 1;
  vertical-align: middle;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  -webkit-font-feature-settings: 'liga';
  font-feature-settings: 'liga';
  transition: var(--transition-colors);
  
  [data-theme="dark"] & {
    opacity: 0.95;
  }
}

// Icon composition utilities - generic and reusable
$icon-gaps: (
  'sm': var(--space-1),
  'base': var(--space-2), 
  'lg': var(--space-3)
);

.icon {
  &-text {
    display: inline-flex;
    align-items: center;
    gap: var(--space-2);
    
    @each $name, $gap in $icon-gaps {
      &-#{$name} { gap: #{$gap}; }
    }
  }
}

// Icon containers - standardized sizing and theming
$icon-container-sizes: (
  'sm': var(--space-6),
  'md': var(--space-8),
  'lg': var(--space-10),
  'xl': var(--space-12)
);

$icon-container-colors: (
  'primary': (var(--color-interactive-primary), var(--color-text-inverse)),
  'success': (var(--color-success), var(--color-text-inverse)),
  'warning': (var(--color-warning), var(--color-text-primary)),
  'error': (var(--color-error), var(--color-text-inverse)),
  'info': (var(--color-info), var(--color-text-inverse)),
  'secondary': (var(--color-background-secondary), var(--color-text-primary))
);

.icon {
  &-container {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    
    @each $name, $size in $icon-container-sizes {
      &-#{$name} { 
        width: #{$size}; 
        height: #{$size}; 
      }
    }
    
    @each $name, $colors in $icon-container-colors {
      &-#{$name} { 
        background-color: #{list.nth($colors, 1)};
        color: #{list.nth($colors, 2)};
      }
    }
  }
}