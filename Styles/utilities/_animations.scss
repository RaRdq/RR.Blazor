@use '../abstracts' as *;

// ===== ANIMATION UTILITY CLASSES ONLY =====
// All @keyframes live in abstracts/_animations.scss

// Transition duration utilities
.duration-75 { transition-duration: var(--duration-ultra-fast) !important; }
.duration-100 { transition-duration: var(--duration-ultra-fast) !important; }
.duration-150 { transition-duration: var(--duration-fast) !important; }
.duration-200 { transition-duration: var(--duration-fast) !important; }
.duration-300 { transition-duration: var(--duration-normal) !important; }
.duration-500 { transition-duration: var(--duration-slow) !important; }
.duration-700 { transition-duration: var(--duration-slow) !important; }
.duration-1000 { transition-duration: var(--duration-very-slow) !important; }

// Transition timing function utilities
.ease-linear { transition-timing-function: linear !important; }
.ease-in { transition-timing-function: cubic-bezier(0.4, 0, 1, 1) !important; }
.ease-out { transition-timing-function: cubic-bezier(0, 0, 0.2, 1) !important; }
.ease-in-out { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important; }

// Base animation utilities
.animate-none { animation: none !important; }
.animate-spin { animation: spin 1s linear infinite !important; }
.animate-ping { animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite !important; }
.animate-pulse { animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite !important; }
.animate-bounce { animation: bounce 1s infinite !important; }

// Animation delay utilities
.delay-75 { transition-delay: var(--duration-ultra-fast) !important; }
.delay-100 { transition-delay: var(--duration-ultra-fast) !important; }
.delay-150 { transition-delay: var(--duration-fast) !important; }
.delay-200 { transition-delay: var(--duration-fast) !important; }
.delay-300 { transition-delay: var(--duration-normal) !important; }
.delay-500 { transition-delay: var(--duration-slow) !important; }
.delay-700 { transition-delay: var(--duration-slow) !important; }
.delay-1000 { transition-delay: var(--duration-very-slow) !important; }

// Animation fill mode utilities
.animation-fill-none { animation-fill-mode: none !important; }
.animation-fill-forwards { animation-fill-mode: forwards !important; }
.animation-fill-backwards { animation-fill-mode: backwards !important; }
.animation-fill-both { animation-fill-mode: both !important; }

// Animation direction utilities
.animation-direction-normal { animation-direction: normal !important; }
.animation-direction-reverse { animation-direction: reverse !important; }
.animation-direction-alternate { animation-direction: alternate !important; }
.animation-direction-alternate-reverse { animation-direction: alternate-reverse !important; }

// Animation play state utilities
.animation-play { animation-play-state: running !important; }
.animation-pause { animation-play-state: paused !important; }

// Animation iteration utilities
.animation-iteration-1 { animation-iteration-count: 1 !important; }
.animation-iteration-infinite { animation-iteration-count: infinite !important; }

// Custom animation utilities
.animate-fade-in { animation: fadeIn var(--duration-slow) var(--ease-out) !important; }
.animate-fade-out { animation: fadeOut var(--duration-slow) var(--ease-out) !important; }
.animate-scale-in { animation: scaleIn var(--duration-normal) var(--ease-out) !important; }
.animate-scale-out { animation: scaleOut var(--duration-normal) var(--ease-out) !important; }
.animate-slide-in-right { animation: slideRight var(--duration-slow) var(--ease-out) !important; }
.animate-slide-in-left { animation: slideLeft var(--duration-slow) var(--ease-out) !important; }
.animate-slide-in-top { animation: slideDown var(--duration-slow) var(--ease-out) !important; }
.animate-slide-in-bottom { animation: slideUp var(--duration-slow) var(--ease-out) !important; }
.animate-shake { animation: shake var(--duration-slow) var(--ease-in-out) !important; }

// Hover animation utilities
.hover\:animate-spin:hover { animation: spin 1s linear infinite !important; }
.hover\:animate-ping:hover { animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite !important; }
.hover\:animate-pulse:hover { animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite !important; }
.hover\:animate-bounce:hover { animation: bounce 1s infinite !important; }

// Group hover animations
.group:hover .group-hover\:animate-spin { animation: spin 1s linear infinite !important; }
.group:hover .group-hover\:animate-ping { animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite !important; }
.group:hover .group-hover\:animate-pulse { animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite !important; }
.group:hover .group-hover\:animate-bounce { animation: bounce 1s infinite !important; }

// Prefers reduced motion
@media (prefers-reduced-motion: reduce) {
  .motion-safe\:animate-spin { animation: none !important; }
  .motion-safe\:animate-ping { animation: none !important; }
  .motion-safe\:animate-pulse { animation: none !important; }
  .motion-safe\:animate-bounce { animation: none !important; }
  
  .motion-reduce\:transition-none {
    transition-property: none !important;
  }
  
  .motion-reduce\:transform-none {
    transform: none !important;
  }
}

// Loading states
.skeleton-loading {
  background: linear-gradient(
    90deg,
    var(--color-skeleton-base) 25%,
    var(--color-skeleton-wave) 50%,
    var(--color-skeleton-base) 75%
  );
  background-size: 200% 100%;
  animation: skeletonWave 1.5s ease-in-out infinite;
}

// Ripple effect
.ripple {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: var(--color-glass-light);
    transform: translate(-50%, -50%);
    transition: width var(--duration-slow), height var(--duration-slow);
  }
  
  &:active::before {
    width: var(--space-300);
    height: var(--space-300);
  }
}


// Touch action utilities
.touch-none { touch-action: none !important; }
.touch-auto { touch-action: auto !important; }
.touch-pan-x { touch-action: pan-x !important; }
.touch-pan-y { touch-action: pan-y !important; }
.touch-pan-left { touch-action: pan-left !important; }
.touch-pan-right { touch-action: pan-right !important; }
.touch-pan-up { touch-action: pan-up !important; }
.touch-pan-down { touch-action: pan-down !important; }
.touch-pinch-zoom { touch-action: pinch-zoom !important; }
.touch-manipulation { touch-action: manipulation !important; }