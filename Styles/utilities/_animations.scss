@use '../abstracts' as *;

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}

@keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fade-out {
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes slide-in-from-right {
  from { transform: translateX(100%); }
  to { transform: translateX(0); }
}

@keyframes slide-in-from-left {
  from { transform: translateX(-100%); }
  to { transform: translateX(0); }
}

@keyframes slide-in-from-top {
  from { transform: translateY(-100%); }
  to { transform: translateY(0); }
}

@keyframes slide-in-from-bottom {
  from { transform: translateY(100%); }
  to { transform: translateY(0); }
}

@keyframes scale-in {
  from { transform: scale(0.9); opacity: 0; }
  to { transform: scale(1); opacity: 1; }
}

@keyframes scale-out {
  from { transform: scale(1); opacity: 1; }
  to { transform: scale(0.9); opacity: 0; }
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-10px); }
  20%, 40%, 60%, 80% { transform: translateX(10px); }
}

// Transition duration utilities
.duration-75 { transition-duration: 75ms !important; }
.duration-100 { transition-duration: 100ms !important; }
.duration-150 { transition-duration: 150ms !important; }
.duration-200 { transition-duration: 200ms !important; }
.duration-300 { transition-duration: 300ms !important; }
.duration-500 { transition-duration: 500ms !important; }
.duration-700 { transition-duration: 700ms !important; }
.duration-1000 { transition-duration: 1000ms !important; }

// Transition timing function utilities
.ease-linear { transition-timing-function: linear !important; }
.ease-in { transition-timing-function: cubic-bezier(0.4, 0, 1, 1) !important; }
.ease-out { transition-timing-function: cubic-bezier(0, 0, 0.2, 1) !important; }
.ease-in-out { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important; }

// Animation delay utilities
.delay-75 { transition-delay: 75ms !important; }
.delay-100 { transition-delay: 100ms !important; }
.delay-150 { transition-delay: 150ms !important; }
.delay-200 { transition-delay: 200ms !important; }
.delay-300 { transition-delay: 300ms !important; }
.delay-500 { transition-delay: 500ms !important; }
.delay-700 { transition-delay: 700ms !important; }
.delay-1000 { transition-delay: 1000ms !important; }

// Animation fill mode utilities
.animation-fill-none { animation-fill-mode: none !important; }
.animation-fill-forwards { animation-fill-mode: forwards !important; }
.animation-fill-backwards { animation-fill-mode: backwards !important; }
.animation-fill-both { animation-fill-mode: both !important; }

// Animation direction utilities
.animation-direction-normal { animation-direction: normal !important; }
.animation-direction-reverse { animation-direction: reverse !important; }
.animation-direction-alternate { animation-direction: alternate !important; }
.animation-direction-alternate-reverse { animation-direction: alternate-reverse !important; }

// Animation play state utilities
.animation-play { animation-play-state: running !important; }
.animation-pause { animation-play-state: paused !important; }

// Animation iteration utilities
.animation-iteration-1 { animation-iteration-count: 1 !important; }
.animation-iteration-infinite { animation-iteration-count: infinite !important; }

// Custom animation utilities
.animate-fade-in { animation: fade-in var(--duration-slow) var(--ease-out) !important; }
.animate-fade-out { animation: fade-out var(--duration-slow) var(--ease-out) !important; }
.animate-scale-in { animation: scale-in var(--duration-normal) var(--ease-out) !important; }
.animate-scale-out { animation: scale-out var(--duration-normal) var(--ease-out) !important; }
.animate-slide-in-right { animation: slide-in-from-right var(--duration-slow) var(--ease-out) !important; }
.animate-slide-in-left { animation: slide-in-from-left var(--duration-slow) var(--ease-out) !important; }
.animate-slide-in-top { animation: slide-in-from-top var(--duration-slow) var(--ease-out) !important; }
.animate-slide-in-bottom { animation: slide-in-from-bottom var(--duration-slow) var(--ease-out) !important; }
.animate-shake { animation: shake 500ms var(--ease-in-out) !important; }

// Hover animation utilities
.hover\:animate-spin:hover { animation: spin 1s linear infinite !important; }
.hover\:animate-ping:hover { animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite !important; }
.hover\:animate-pulse:hover { animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite !important; }
.hover\:animate-bounce:hover { animation: bounce 1s infinite !important; }

// Group hover animations
.group:hover .group-hover\:animate-spin { animation: spin 1s linear infinite !important; }
.group:hover .group-hover\:animate-ping { animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite !important; }
.group:hover .group-hover\:animate-pulse { animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite !important; }
.group:hover .group-hover\:animate-bounce { animation: bounce 1s infinite !important; }

// Prefers reduced motion
@media (prefers-reduced-motion: reduce) {
  .motion-safe\:animate-spin { animation: none !important; }
  .motion-safe\:animate-ping { animation: none !important; }
  .motion-safe\:animate-pulse { animation: none !important; }
  .motion-safe\:animate-bounce { animation: none !important; }
  
  .motion-reduce\:transition-none {
    transition-property: none !important;
  }
  
  .motion-reduce\:transform-none {
    transform: none !important;
  }
}

// Loading states
.skeleton-loading {
  background: linear-gradient(
    90deg,
    var(--color-skeleton-base) 25%,
    var(--color-skeleton-wave) 50%,
    var(--color-skeleton-base) 75%
  );
  background-size: 200% 100%;
  animation: skeleton-wave 1.5s ease-in-out infinite;
}

@keyframes skeleton-wave {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

// Ripple effect
.ripple {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.5);
    transform: translate(-50%, -50%);
    transition: width 500ms, height 500ms;
  }
  
  &:active::before {
    width: 300px;
    height: 300px;
  }
}


// Touch action utilities
.touch-none { touch-action: none !important; }
.touch-auto { touch-action: auto !important; }
.touch-pan-x { touch-action: pan-x !important; }
.touch-pan-y { touch-action: pan-y !important; }
.touch-pan-left { touch-action: pan-left !important; }
.touch-pan-right { touch-action: pan-right !important; }
.touch-pan-up { touch-action: pan-up !important; }
.touch-pan-down { touch-action: pan-down !important; }
.touch-pinch-zoom { touch-action: pinch-zoom !important; }
.touch-manipulation { touch-action: manipulation !important; }