@use '../abstracts' as *;

// ===== ANIMATION UTILITY CLASSES ONLY =====
// All @keyframes live in abstracts/_animations.scss

// ===== TRANSITION UTILITIES =====

// Transition duration utilities using semantic variables
$duration-scales: (
  100: ultra-fast,
  200: fast,
  300: normal,
  500: slow,
  1000: very-slow
);

@each $scale, $semantic in $duration-scales {
  .duration-#{$scale} { transition-duration: var(--duration-#{$semantic}); }
}

// Transition timing function utilities using semantic variables
$ease-types: (linear, in, out, in-out);

@each $type in $ease-types {
  .ease-#{$type} { transition-timing-function: var(--ease-#{$type}); }
}

// ===== SYSTEMATIC ANIMATION GENERATION =====

// Base animation utilities using systematic generation
$base-animations: (
  none: none,
  spin: spin var(--duration-very-slow) linear infinite,
  ping: ping var(--duration-very-slow) cubic-bezier(0, 0, 0.2, 1) infinite,
  pulse: pulse calc(var(--duration-very-slow) * 2) cubic-bezier(0.4, 0, 0.6, 1) infinite,
  bounce: bounce var(--duration-very-slow) infinite,
  shake: shake calc(var(--duration-slow) + var(--duration-fast)) ease-in-out,
  fade-in: fadeIn var(--duration-slow) ease-out,
  fade-out: fadeOut var(--duration-slow) ease-out,
  scale-in: scaleIn var(--duration-normal) ease-out,
  scale-out: scaleOut var(--duration-normal) ease-out,
  slide-in-down: slideInDown var(--duration-slow) ease-out,
  slide-in-top: slideInTop var(--duration-slow) ease-out,
  slide-in-bottom: slideInBottom var(--duration-slow) ease-out,
  slide-in-left: slideInLeft var(--duration-slow) ease-out,
  slide-in-right: slideInRight var(--duration-slow) ease-out,
  slide-up: slideUp var(--duration-slow) ease-out,
  breathe: breathe calc(var(--duration-very-slow) * 3) ease-in-out infinite,
  error-pulse: errorPulse calc(var(--duration-slow) * 2) ease-out,
  success-fade-in: successFadeIn calc(var(--duration-fast) + var(--duration-slow)) ease-out
);

@each $name, $animation in $base-animations {
  .animate-#{$name} { animation: #{$animation}; }
}

// Animation delay utilities using semantic variables
$delay-scales: (
  100: ultra-fast,
  200: fast,
  300: normal,
  500: slow,
  1000: very-slow
);

@each $scale, $semantic in $delay-scales {
  .delay-#{$scale} { transition-delay: var(--duration-#{$semantic}); }
}

// ===== ANIMATION PROPERTIES =====

// Animation fill mode utilities using systematic generation
$fill-modes: (
  none: none,
  forwards: forwards,
  backwards: backwards,
  both: both
);

@each $name, $mode in $fill-modes {
  .animation-fill-#{$name} { animation-fill-mode: #{$mode}; }
}

// Animation direction utilities using systematic generation
$animation-directions: (
  normal: normal,
  reverse: reverse,
  alternate: alternate,
  alternate-reverse: alternate-reverse
);

@each $name, $direction in $animation-directions {
  .animation-direction-#{$name} { animation-direction: #{$direction}; }
}

// Animation play state utilities using systematic generation
$play-states: (
  play: running,
  pause: paused
);

@each $name, $state in $play-states {
  .animation-#{$name} { animation-play-state: #{$state}; }
}

// Animation iteration utilities using systematic generation
$iterations: (
  1: 1,
  infinite: infinite
);

@each $name, $count in $iterations {
  .animation-iteration-#{$name} { animation-iteration-count: #{$count}; }
}

// Enhanced animation utilities using systematic generation
$enhanced-animations: (
  fade-in: fadeIn var(--duration-normal) var(--ease-out),
  fade-out: fadeOut var(--duration-normal) var(--ease-out),
  scale-in: scaleIn var(--duration-normal) var(--ease-out),
  scale-out: scaleOut var(--duration-normal) var(--ease-out),
  slide-in-top: slideDown var(--duration-normal) var(--ease-out),
  slide-in-bottom: slideUp var(--duration-normal) var(--ease-out),
  slide-in-left: slideLeft var(--duration-normal) var(--ease-out),
  slide-in-right: slideRight var(--duration-normal) var(--ease-out),
  shake: shake var(--duration-normal) var(--ease-in-out)
);

@each $name, $animation in $enhanced-animations {
  .animate-#{$name} { animation: #{$animation}; }
}

// Hover animation utilities using systematic generation
$hover-animations: (
  spin: spin var(--duration-very-slow) linear infinite,
  ping: ping var(--duration-very-slow) cubic-bezier(0, 0, 0.2, 1) infinite,
  pulse: pulse calc(var(--duration-very-slow) * 2) cubic-bezier(0.4, 0, 0.6, 1) infinite,
  bounce: bounce 1s infinite
);

@each $name, $animation in $hover-animations {
  .hover\:animate-#{$name}:hover { animation: #{$animation}; }
}

// Group hover animations using systematic generation
$group-hover-animations: (
  spin: spin var(--duration-very-slow) linear infinite,
  ping: ping var(--duration-very-slow) cubic-bezier(0, 0, 0.2, 1) infinite,
  pulse: pulse calc(var(--duration-very-slow) * 2) cubic-bezier(0.4, 0, 0.6, 1) infinite,
  bounce: bounce 1s infinite
);

@each $name, $animation in $group-hover-animations {
  .group:hover .group-hover\:animate-#{$name} { animation: #{$animation}; }
}

// Reduced motion utilities moved to utilities/_accessibility.scss

// Loading states
.skeleton-loading {
  background: linear-gradient(
    90deg,
    var(--color-skeleton-base) 25%,
    var(--color-skeleton-wave) 50%,
    var(--color-skeleton-base) 75%
  );
  background-size: 200% 100%;
  animation: skeletonWave calc(var(--duration-very-slow) * 1.5) ease-in-out infinite;
}

// Ripple effect
.ripple {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: var(--color-glass-light);
    transform: translate(-50%, -50%);
    transition: width var(--duration-slow), height var(--duration-slow);
  }
  
  &:active::before {
    width: var(--space-300);
    height: var(--space-300);
  }
}


// Touch action utilities moved to utilities/_accessibility.scss

// ===== FORM INPUT SPECIFIC ANIMATIONS =====

// Input focus animations
.input-focus-animate {
  &:focus {
    animation: scaleIn var(--duration-normal) ease-out;
  }
}

// Input error state animations
.input-error-animate {
  animation: shake calc(var(--duration-slow) + var(--duration-fast)) ease-in-out, errorPulse calc(var(--duration-slow) * 2) ease-out;
}

// Input success state animations
.input-success-animate {
  animation: successFadeIn calc(var(--duration-fast) + var(--duration-slow)) ease-out;
}

// Floating label animations
.label-float-animate {
  transition: all var(--duration-normal) var(--ease-out);
  
  &.is-floating {
    animation: fadeInUp var(--duration-slow) ease-out;
  }
}

// Glass effect animations
.glass-animate {
  transition: all var(--duration-normal) var(--ease-out);
  
  &:hover {
    animation: none;
    transition: all var(--duration-fast) var(--ease-out);
  }
  
  &:focus {
    animation: scaleIn var(--duration-normal) ease-out;
  }
}

// Interactive hover animations
.hover-lift {
  transition: transform var(--duration-fast) var(--ease-out);
  
  &:hover {
    transform: translateY(-1px);
  }
}

.hover-lift-lg {
  transition: transform var(--duration-fast) var(--ease-out);
  
  &:hover {
    transform: translateY(-2px);
  }
}

.hover-scale {
  transition: transform var(--duration-fast) var(--ease-out);
  
  &:hover {
    transform: scale(1.02);
  }
}

// Focus ring animations
.focus-ring-animate {
  &:focus {
    animation: pulseRing calc(var(--duration-slow) * 2) ease-out;
  }
}