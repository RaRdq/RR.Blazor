@use '../abstracts' as *;

// Column Utilities
// Based on Tailwind CSS column utilities

// Column count utilities
.columns-1 { columns: 1 !important; }
.columns-2 { columns: 2 !important; }
.columns-3 { columns: 3 !important; }
.columns-4 { columns: 4 !important; }
.columns-5 { columns: 5 !important; }
.columns-6 { columns: 6 !important; }
.columns-7 { columns: 7 !important; }
.columns-8 { columns: 8 !important; }
.columns-9 { columns: 9 !important; }
.columns-10 { columns: 10 !important; }
.columns-11 { columns: 11 !important; }
.columns-12 { columns: 12 !important; }
.columns-auto { columns: auto !important; }

// Column width utilities
.columns-3xs { columns: 16rem !important; }
.columns-2xs { columns: 18rem !important; }
.columns-xs { columns: 20rem !important; }
.columns-sm { columns: 24rem !important; }
.columns-md { columns: 28rem !important; }
.columns-lg { columns: 32rem !important; }
.columns-xl { columns: 36rem !important; }
.columns-2xl { columns: 42rem !important; }
.columns-3xl { columns: 48rem !important; }
.columns-4xl { columns: 56rem !important; }
.columns-5xl { columns: 64rem !important; }
.columns-6xl { columns: 72rem !important; }
.columns-7xl { columns: 80rem !important; }

// Column gap utilities
.column-gap-0 { column-gap: 0 !important; }
.column-gap-1 { column-gap: var(--space-1) !important; }
.column-gap-2 { column-gap: var(--space-2) !important; }
.column-gap-3 { column-gap: var(--space-3) !important; }
.column-gap-4 { column-gap: var(--space-4) !important; }
.column-gap-5 { column-gap: var(--space-5) !important; }
.column-gap-6 { column-gap: var(--space-6) !important; }
.column-gap-8 { column-gap: var(--space-8) !important; }
.column-gap-10 { column-gap: var(--space-10) !important; }
.column-gap-12 { column-gap: var(--space-12) !important; }
.column-gap-16 { column-gap: var(--space-16) !important; }
.column-gap-20 { column-gap: var(--space-20) !important; }
.column-gap-24 { column-gap: var(--space-24) !important; }
.column-gap-normal { column-gap: normal !important; }

// Column rule width utilities
.column-rule-0 { column-rule-width: 0px !important; }
.column-rule-1 { column-rule-width: 1px !important; }
.column-rule-2 { column-rule-width: 2px !important; }
.column-rule-4 { column-rule-width: 4px !important; }
.column-rule-8 { column-rule-width: 8px !important; }

// Column rule style utilities
.column-rule-none { column-rule-style: none !important; }
.column-rule-solid { column-rule-style: solid !important; }
.column-rule-dashed { column-rule-style: dashed !important; }
.column-rule-dotted { column-rule-style: dotted !important; }
.column-rule-double { column-rule-style: double !important; }

// Column rule color utilities
.column-rule-inherit { column-rule-color: inherit !important; }
.column-rule-current { column-rule-color: currentColor !important; }
.column-rule-transparent { column-rule-color: transparent !important; }
.column-rule-black { column-rule-color: #000000 !important; }
.column-rule-white { column-rule-color: #ffffff !important; }
.column-rule-primary { column-rule-color: var(--color-interactive-primary) !important; }
.column-rule-secondary { column-rule-color: var(--color-interactive-secondary) !important; }
.column-rule-success { column-rule-color: var(--color-success) !important; }
.column-rule-warning { column-rule-color: var(--color-warning) !important; }
.column-rule-error { column-rule-color: var(--color-error) !important; }
.column-rule-info { column-rule-color: var(--color-info) !important; }
.column-rule-light { column-rule-color: var(--color-border-light) !important; }
.column-rule-default { column-rule-color: var(--color-border-default) !important; }

// Column span utilities
.column-span-all { column-span: all !important; }
.column-span-none { column-span: none !important; }

// Column fill utilities
.column-fill-auto { column-fill: auto !important; }
.column-fill-balance { column-fill: balance !important; }
.column-fill-balance-all { column-fill: balance-all !important; }

// Break before utilities
.break-before-auto { break-before: auto !important; }
.break-before-avoid { break-before: avoid !important; }
.break-before-all { break-before: all !important; }
.break-before-avoid-page { break-before: avoid-page !important; }
.break-before-page { break-before: page !important; }
.break-before-left { break-before: left !important; }
.break-before-right { break-before: right !important; }
.break-before-column { break-before: column !important; }

// Break inside utilities
.break-inside-auto { break-inside: auto !important; }
.break-inside-avoid { break-inside: avoid !important; }
.break-inside-avoid-page { break-inside: avoid-page !important; }
.break-inside-avoid-column { break-inside: avoid-column !important; }

// Break after utilities
.break-after-auto { break-after: auto !important; }
.break-after-avoid { break-after: avoid !important; }
.break-after-all { break-after: all !important; }
.break-after-avoid-page { break-after: avoid-page !important; }
.break-after-page { break-after: page !important; }
.break-after-left { break-after: left !important; }
.break-after-right { break-after: right !important; }
.break-after-column { break-after: column !important; }

// Responsive column utilities
@include responsive-max(sm) {
  .sm\:columns-1 { columns: 1 !important; }
  .sm\:columns-2 { columns: 2 !important; }
  .sm\:columns-3 { columns: 3 !important; }
  .sm\:columns-4 { columns: 4 !important; }
  .sm\:columns-auto { columns: auto !important; }
  .sm\:columns-none { columns: initial !important; }
}

@include responsive-max(md) {
  .md\:columns-1 { columns: 1 !important; }
  .md\:columns-2 { columns: 2 !important; }
  .md\:columns-3 { columns: 3 !important; }
  .md\:columns-4 { columns: 4 !important; }
  .md\:columns-5 { columns: 5 !important; }
  .md\:columns-6 { columns: 6 !important; }
  .md\:columns-auto { columns: auto !important; }
  .md\:columns-none { columns: initial !important; }
}

@include responsive-min(lg) {
  .lg\:columns-1 { columns: 1 !important; }
  .lg\:columns-2 { columns: 2 !important; }
  .lg\:columns-3 { columns: 3 !important; }
  .lg\:columns-4 { columns: 4 !important; }
  .lg\:columns-5 { columns: 5 !important; }
  .lg\:columns-6 { columns: 6 !important; }
  .lg\:columns-7 { columns: 7 !important; }
  .lg\:columns-8 { columns: 8 !important; }
  .lg\:columns-auto { columns: auto !important; }
  .lg\:columns-none { columns: initial !important; }
}

// Common column patterns
.masonry {
  column-count: 3;
  column-gap: var(--space-4);
  
  @include responsive-max(md) {
    column-count: 2;
  }
  
  @include responsive-max(sm) {
    column-count: 1;
  }
  
  > * {
    break-inside: avoid;
    margin-bottom: var(--space-4);
  }
}

.newspaper {
  columns: 3;
  column-gap: var(--space-6);
  column-rule: 1px solid var(--color-border-light);
  text-align: justify;
  
  @include responsive-max(md) {
    columns: 2;
    column-gap: var(--space-4);
  }
  
  @include responsive-max(sm) {
    columns: 1;
  }
  
  p:first-child::first-letter {
    font-size: 3em;
    font-weight: bold;
    float: left;
    line-height: 1;
    margin-right: var(--space-2);
  }
}

.card-columns {
  column-count: 3;
  column-gap: var(--space-4);
  orphans: 1;
  widows: 1;
  
  @include responsive-max(lg) {
    column-count: 2;
  }
  
  @include responsive-max(sm) {
    column-count: 1;
  }
  
  > .card {
    display: inline-block;
    width: 100%;
    margin-bottom: var(--space-4);
  }
}