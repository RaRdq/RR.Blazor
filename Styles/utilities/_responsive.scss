// RR.Blazor Mobile-First Responsive Utilities
// Complete responsive system with breakpoint-specific classes

@use '../abstracts' as *;
@use 'sass:map';

// ===== BREAKPOINT SYSTEM =====
// Mobile-first approach: Base styles for mobile, then adapt up
// Note: Using global breakpoints map from variables.scss

// ===== RESPONSIVE MIXINS =====
// All responsive mixins are defined in abstracts/_mixins.scss

// ===== RESPONSIVE SPACING UTILITIES =====
// All responsive spacing utilities are generated in _spacing.scss
// This maintains single-source consistency and reduces duplication

// ===== RESPONSIVE DISPLAY UTILITIES =====
// Basic display utilities only (flex/grid moved to dedicated files)
@each $breakpoint, $value in $breakpoints {
  @media (min-width: $value) {
    .#{$breakpoint}\:block { display: block; }
    .#{$breakpoint}\:inline { display: inline; }
    .#{$breakpoint}\:inline-block { display: inline-block; }
    .#{$breakpoint}\:hidden { display: none; }
    
    // NOTE: Flexbox and grid responsive utilities are now consolidated
    // in _flexbox.scss and _grid.scss to eliminate duplication
    
    // Width utilities
    .#{$breakpoint}\:w-auto { width: auto; }
    .#{$breakpoint}\:w-full { width: 100%; }
    .#{$breakpoint}\:w-1\/2 { width: 50%; }
    .#{$breakpoint}\:w-1\/3 { width: 33.333333%; }
    .#{$breakpoint}\:w-2\/3 { width: 66.666667%; }
    .#{$breakpoint}\:w-1\/4 { width: 25%; }
    .#{$breakpoint}\:w-3\/4 { width: 75%; }
    
    // Height utilities
    .#{$breakpoint}\:h-auto { height: auto; }
    .#{$breakpoint}\:h-full { height: 100%; }
    .#{$breakpoint}\:h-screen { height: 100vh; }
    
    // Text alignment
    .#{$breakpoint}\:text-left { text-align: left; }
    .#{$breakpoint}\:text-center { text-align: center; }
    .#{$breakpoint}\:text-right { text-align: right; }
    .#{$breakpoint}\:text-justify { text-align: justify; }
  }
}

// ===== MOBILE-FIRST ADAPTIVE LAYOUT PATTERNS =====
// Common responsive patterns that work automatically

// Adaptive flex layout - column on mobile, row on desktop
.flex-mobile-col {
  display: flex;
  flex-direction: column;
  gap: var(--space-3);
  
  @include responsive-min(md) {
    flex-direction: row;
    gap: var(--space-4);
  }
}

// Adaptive grid layout - single column on mobile, multi-column on desktop
.grid-mobile-stack {
  display: grid;
  grid-template-columns: 1fr;
  gap: var(--space-3);
  
  @include responsive-min(md) {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--space-4);
  }
}

// Responsive gap - tighter on mobile, comfortable on desktop
.gap-responsive {
  gap: var(--space-2);
  
  @include responsive-min(md) {
    gap: var(--space-4);
  }
}

// Responsive padding - tighter on mobile, comfortable on desktop
.pa-responsive {
  padding: var(--space-3);
  
  @include responsive-min(md) {
    padding: var(--space-6);
  }
}

// ===== TOUCH-FRIENDLY UTILITIES =====
// Touch target utilities moved to utilities/_accessibility.scss

// ===== RESPONSIVE VISIBILITY UTILITIES =====
// Control element visibility across breakpoints

// Show only on mobile
.mobile-only {
  display: block;
  
  @include responsive-min(md) {
    display: none;
  }
}

// Hide on mobile
.mobile-hidden {
  display: none;
  
  @include responsive-min(md) {
    display: block;
  }
}

// Show only on tablet and up
.tablet-up {
  display: none;
  
  @include responsive-min(md) {
    display: block;
  }
}

// Show only on desktop and up
.desktop-up {
  display: none;
  
  @include responsive-min(lg) {
    display: block;
  }
}

// ===== RESPONSIVE TYPOGRAPHY SCALING =====
// Fluid typography that scales with screen size

.text-responsive {
  font-size: clamp(0.875rem, 2vw, 1rem);
  line-height: 1.5;
}

.text-responsive-lg {
  font-size: clamp(1.125rem, 3vw, 1.5rem);
  line-height: 1.4;
}

.text-responsive-xl {
  font-size: clamp(1.5rem, 4vw, 2.25rem);
  line-height: 1.3;
}

// ===== MOBILE-FIRST CONTAINER UTILITIES =====
// Responsive container patterns

.container-responsive {
  width: 100%;
  margin: 0 auto;
  padding: 0 var(--space-4);
  
  // Mobile-first responsive container
  @include responsive-min(md) {
    max-width: 768px;
    padding: 0 var(--space-6);
  }
  
  @include responsive-min(lg) {
    max-width: 1024px;
    padding: 0 var(--space-8);
  }
  
  @include responsive-min(xl) {
    max-width: 1280px;
  }
}

// ===== MOBILE GESTURE UTILITIES =====
// Enable smooth scrolling and touch behaviors
// NOTE: Basic scroll behaviors moved to _scroll.scss for consolidation

.swipe-enabled {
  -webkit-overflow-scrolling: touch;
  overflow-x: auto;
  scroll-snap-type: x mandatory;
  
  > * {
    scroll-snap-align: start;
  }
}

// ===== MOBILE PERFORMANCE UTILITIES =====
// Optimize rendering for mobile devices
// NOTE: Scroll-specific utilities moved to _scroll.scss

.mobile-optimized {
  // Reduce repaints
  transform: translateZ(0);
  will-change: transform;
  
  // Optimize touch interactions
  touch-action: manipulation;
}

// ===== PRINT UTILITIES =====
@media print {
  .no-print {
    display: none;
  }
  
  .page-content {
    padding: 0;
  }
}