@use '../abstracts' as *;

// ===== DISPLAY UTILITIES =====
// Clean, focused display utilities with SCSS loops
// No legacy bloat, fallbacks, or redundant patterns

// ===== DISPLAY VALUES =====
$display-values: (
  'block': block,
  'inline-block': inline-block,
  'inline': inline,
  'flex': flex,
  'inline-flex': inline-flex,
  'grid': grid,
  'inline-grid': inline-grid,
  'table': table,
  'inline-table': inline-table,
  'table-caption': table-caption,
  'table-cell': table-cell,
  'table-column': table-column,
  'table-column-group': table-column-group,
  'table-footer-group': table-footer-group,
  'table-header-group': table-header-group,
  'table-row-group': table-row-group,
  'table-row': table-row,
  'flow-root': flow-root,
  'contents': contents,
  'list-item': list-item,
  'hidden': none
);

// ===== COMMON OVERFLOW VALUES =====
$overflow-values: (
  'auto': auto,
  'hidden': hidden,
  'visible': visible,
  'scroll': scroll,
  'clip': clip
);

// ===== COMMON OBJECT FIT VALUES =====
$object-fit-values: (
  'contain': contain,
  'cover': cover,
  'fill': fill,
  'none': none,
  'scale-down': scale-down
);

// ===== COMMON OBJECT POSITION VALUES =====
$object-position-values: (
  'bottom': bottom,
  'center': center,
  'left': left,
  'left-bottom': left bottom,
  'left-top': left top,
  'right': right,
  'right-bottom': right bottom,
  'right-top': right top,
  'top': top
);

// ===== GENERATE DISPLAY UTILITIES =====
@each $name, $value in $display-values {
  @if $name == 'hidden' {
    .#{$name} {
      display: #{$value} !important;
    }
  } @else {
    .d-#{$name} {
      display: #{$value} !important;
    }
  }
}

// ===== GENERATE OVERFLOW UTILITIES =====
@each $name, $value in $overflow-values {
  .overflow-#{$name} {
    overflow: #{$value} !important;
  }
  
  .overflow-x-#{$name} {
    overflow-x: #{$value} !important;
  }
  
  .overflow-y-#{$name} {
    overflow-y: #{$value} !important;
  }
}

// ===== GENERATE OBJECT FIT UTILITIES =====
@each $name, $value in $object-fit-values {
  .object-#{$name} {
    object-fit: #{$value} !important;
  }
}

// ===== GENERATE OBJECT POSITION UTILITIES =====
@each $name, $value in $object-position-values {
  .object-#{$name} {
    object-position: #{$value} !important;
  }
}

// ===== VISIBILITY UTILITIES =====
.visible {
  visibility: visible !important;
}

.invisible {
  visibility: hidden !important;
}

// ===== CURSOR UTILITIES =====
$cursor-values: (
  'auto': auto,
  'default': default,
  'pointer': pointer,
  'wait': wait,
  'text': text,
  'move': move,
  'help': help,
  'not-allowed': not-allowed,
  'none': none,
  'context-menu': context-menu,
  'progress': progress,
  'cell': cell,
  'crosshair': crosshair,
  'vertical-text': vertical-text,
  'alias': alias,
  'copy': copy,
  'no-drop': no-drop,
  'grab': grab,
  'grabbing': grabbing,
  'all-scroll': all-scroll,
  'col-resize': col-resize,
  'row-resize': row-resize,
  'n-resize': n-resize,
  'e-resize': e-resize,
  's-resize': s-resize,
  'w-resize': w-resize,
  'ne-resize': ne-resize,
  'nw-resize': nw-resize,
  'se-resize': se-resize,
  'sw-resize': sw-resize,
  'ew-resize': ew-resize,
  'ns-resize': ns-resize,
  'nesw-resize': nesw-resize,
  'nwse-resize': nwse-resize,
  'zoom-in': zoom-in,
  'zoom-out': zoom-out
);

@each $name, $value in $cursor-values {
  .cursor-#{$name} {
    cursor: #{$value} !important;
  }
}

// ===== SCREEN READER UTILITIES =====
.sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

.not-sr-only {
  position: static !important;
  width: auto !important;
  height: auto !important;
  padding: 0 !important;
  margin: 0 !important;
  overflow: visible !important;
  clip: auto !important;
  white-space: normal !important;
}

// ===== TABLE LAYOUT UTILITIES =====
.table-auto { table-layout: auto !important; }
.table-fixed { table-layout: fixed !important; }

// ===== ESSENTIAL DISPLAY =====
.hidden { display: none !important; }
.block { display: block !important; }
.inline-block { display: inline-block !important; }

// ===== COMMON INTERACTION UTILITIES =====
.select-none { user-select: none !important; }
.select-text { user-select: text !important; }
.select-all { user-select: all !important; }
.select-auto { user-select: auto !important; }

.appearance-none { appearance: none !important; }
.outline-none { outline: 2px solid transparent !important; outline-offset: 2px !important; }

// ===== RESPONSIVE DISPLAY UTILITIES =====
@each $breakpoint-name, $breakpoint-value in $breakpoints {
  @each $name, $value in $display-values {
    @if $name == 'hidden' {
      .#{$breakpoint-name}\:#{$name} {
        @include responsive-min($breakpoint-name) {
          display: #{$value} !important;
        }
      }
    } @else {
      .#{$breakpoint-name}\:d-#{$name} {
        @include responsive-min($breakpoint-name) {
          display: #{$value} !important;
        }
      }
    }
  }
}