@use '../abstracts' as *;

// ===================================================================
// LAYOUT UTILITIES - CONSOLIDATED
// Comprehensive layout utilities for modern web applications
// Merged from: aspect-ratio, columns, container, grid
// ===================================================================

// ===== ASPECT RATIO UTILITIES =====
// Based on Tailwind CSS aspect ratio utilities

.aspect-auto {
  aspect-ratio: auto !important;
}

.aspect-square {
  aspect-ratio: 1 / 1 !important;
}

.aspect-video {
  aspect-ratio: 16 / 9 !important;
}

// Common aspect ratios
.aspect-1 {
  aspect-ratio: 1 / 1 !important;
}

.aspect-2 {
  aspect-ratio: 2 / 1 !important;
}

.aspect-3 {
  aspect-ratio: 3 / 1 !important;
}

.aspect-4 {
  aspect-ratio: 4 / 1 !important;
}

.aspect-5 {
  aspect-ratio: 5 / 1 !important;
}

.aspect-6 {
  aspect-ratio: 6 / 1 !important;
}

.aspect-7 {
  aspect-ratio: 7 / 1 !important;
}

.aspect-8 {
  aspect-ratio: 8 / 1 !important;
}

.aspect-9 {
  aspect-ratio: 9 / 1 !important;
}

.aspect-10 {
  aspect-ratio: 10 / 1 !important;
}

.aspect-11 {
  aspect-ratio: 11 / 1 !important;
}

.aspect-12 {
  aspect-ratio: 12 / 1 !important;
}

.aspect-13 {
  aspect-ratio: 13 / 1 !important;
}

.aspect-14 {
  aspect-ratio: 14 / 1 !important;
}

.aspect-15 {
  aspect-ratio: 15 / 1 !important;
}

.aspect-16 {
  aspect-ratio: 16 / 1 !important;
}

// Portrait ratios
.aspect-1\/2 {
  aspect-ratio: 1 / 2 !important;
}

.aspect-1\/3 {
  aspect-ratio: 1 / 3 !important;
}

.aspect-1\/4 {
  aspect-ratio: 1 / 4 !important;
}

.aspect-1\/5 {
  aspect-ratio: 1 / 5 !important;
}

.aspect-1\/6 {
  aspect-ratio: 1 / 6 !important;
}

// Common screen ratios
.aspect-4\/3 {
  aspect-ratio: 4 / 3 !important;
}

.aspect-4\/5 {
  aspect-ratio: 4 / 5 !important;
}

.aspect-5\/3 {
  aspect-ratio: 5 / 3 !important;
}

.aspect-5\/4 {
  aspect-ratio: 5 / 4 !important;
}

.aspect-16\/9 {
  aspect-ratio: 16 / 9 !important;
}

.aspect-16\/10 {
  aspect-ratio: 16 / 10 !important;
}

.aspect-21\/9 {
  aspect-ratio: 21 / 9 !important;
}

// Common photo ratios
.aspect-2\/3 {
  aspect-ratio: 2 / 3 !important;
}

.aspect-3\/2 {
  aspect-ratio: 3 / 2 !important;
}

.aspect-3\/4 {
  aspect-ratio: 3 / 4 !important;
}

.aspect-3\/5 {
  aspect-ratio: 3 / 5 !important;
}

.aspect-9\/16 {
  aspect-ratio: 9 / 16 !important;
}

.aspect-9\/21 {
  aspect-ratio: 9 / 21 !important;
}

// Social media ratios
.aspect-instagram {
  aspect-ratio: 1 / 1 !important;
}

.aspect-instagram-story {
  aspect-ratio: 9 / 16 !important;
}

.aspect-facebook {
  aspect-ratio: 16 / 9 !important;
}

.aspect-twitter {
  aspect-ratio: 16 / 9 !important;
}

.aspect-youtube {
  aspect-ratio: 16 / 9 !important;
}

.aspect-linkedin {
  aspect-ratio: 1.91 / 1 !important;
}

// Common device ratios
.aspect-iphone {
  aspect-ratio: 9 / 19.5 !important;
}

.aspect-ipad {
  aspect-ratio: 3 / 4 !important;
}

.aspect-macbook {
  aspect-ratio: 16 / 10 !important;
}

.aspect-imac {
  aspect-ratio: 16 / 9 !important;
}

// Golden ratio
.aspect-golden {
  aspect-ratio: 1.618 / 1 !important;
}

.aspect-golden-vertical {
  aspect-ratio: 1 / 1.618 !important;
}

// Responsive aspect ratios
@include responsive-max(sm) {
  .sm\:aspect-auto { aspect-ratio: auto !important; }
  .sm\:aspect-square { aspect-ratio: 1 / 1 !important; }
  .sm\:aspect-video { aspect-ratio: 16 / 9 !important; }
  .sm\:aspect-4\/3 { aspect-ratio: 4 / 3 !important; }
  .sm\:aspect-16\/9 { aspect-ratio: 16 / 9 !important; }
  .sm\:aspect-16\/10 { aspect-ratio: 16 / 10 !important; }
  .sm\:aspect-21\/9 { aspect-ratio: 21 / 9 !important; }
}

@include responsive-max(md) {
  .md\:aspect-auto { aspect-ratio: auto !important; }
  .md\:aspect-square { aspect-ratio: 1 / 1 !important; }
  .md\:aspect-video { aspect-ratio: 16 / 9 !important; }
  .md\:aspect-4\/3 { aspect-ratio: 4 / 3 !important; }
  .md\:aspect-16\/9 { aspect-ratio: 16 / 9 !important; }
  .md\:aspect-16\/10 { aspect-ratio: 16 / 10 !important; }
  .md\:aspect-21\/9 { aspect-ratio: 21 / 9 !important; }
}

@include responsive-min(lg) {
  .lg\:aspect-auto { aspect-ratio: auto !important; }
  .lg\:aspect-square { aspect-ratio: 1 / 1 !important; }
  .lg\:aspect-video { aspect-ratio: 16 / 9 !important; }
  .lg\:aspect-4\/3 { aspect-ratio: 4 / 3 !important; }
  .lg\:aspect-16\/9 { aspect-ratio: 16 / 9 !important; }
  .lg\:aspect-16\/10 { aspect-ratio: 16 / 10 !important; }
  .lg\:aspect-21\/9 { aspect-ratio: 21 / 9 !important; }
}

// Aspect ratio container pattern (for older browser support)
.aspect-container {
  position: relative;
  width: 100%;
  
  &::before {
    content: "";
    display: block;
    padding-bottom: 56.25%; // 16:9 by default
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  
  &.aspect-container-square::before {
    padding-bottom: 100%;
  }
  
  &.aspect-container-4\/3::before {
    padding-bottom: 75%;
  }
  
  &.aspect-container-3\/2::before {
    padding-bottom: 66.666%;
  }
  
  &.aspect-container-16\/10::before {
    padding-bottom: 62.5%;
  }
  
  &.aspect-container-21\/9::before {
    padding-bottom: 42.857%;
  }
}

// ===== COLUMN UTILITIES =====
// Based on Tailwind CSS column utilities

// Column count utilities
.columns-1 { columns: 1 !important; }
.columns-2 { columns: 2 !important; }
.columns-3 { columns: 3 !important; }
.columns-4 { columns: 4 !important; }
.columns-5 { columns: 5 !important; }
.columns-6 { columns: 6 !important; }
.columns-7 { columns: 7 !important; }
.columns-8 { columns: 8 !important; }
.columns-9 { columns: 9 !important; }
.columns-10 { columns: 10 !important; }
.columns-11 { columns: 11 !important; }
.columns-12 { columns: 12 !important; }
.columns-auto { columns: auto !important; }

// Column width utilities
.columns-3xs { columns: var(--space-64) !important; }
.columns-2xs { columns: var(--space-72) !important; }
.columns-xs { columns: var(--space-80) !important; }
.columns-sm { columns: var(--space-96) !important; }
.columns-md { columns: var(--space-112) !important; }
.columns-lg { columns: var(--space-128) !important; }
.columns-xl { columns: var(--space-144) !important; }
.columns-2xl { columns: var(--space-168) !important; }
.columns-3xl { columns: var(--space-192) !important; }
.columns-4xl { columns: var(--space-224) !important; }
.columns-5xl { columns: var(--space-256) !important; }
.columns-6xl { columns: var(--space-288) !important; }
.columns-7xl { columns: var(--space-320) !important; }

// Column gap utilities
.column-gap-0 { column-gap: 0 !important; }
.column-gap-1 { column-gap: var(--space-1) !important; }
.column-gap-2 { column-gap: var(--space-2) !important; }
.column-gap-3 { column-gap: var(--space-3) !important; }
.column-gap-4 { column-gap: var(--space-4) !important; }
.column-gap-5 { column-gap: var(--space-5) !important; }
.column-gap-6 { column-gap: var(--space-6) !important; }
.column-gap-8 { column-gap: var(--space-8) !important; }
.column-gap-10 { column-gap: var(--space-10) !important; }
.column-gap-12 { column-gap: var(--space-12) !important; }
.column-gap-16 { column-gap: var(--space-16) !important; }
.column-gap-20 { column-gap: var(--space-20) !important; }
.column-gap-24 { column-gap: var(--space-24) !important; }
.column-gap-normal { column-gap: normal !important; }

// Column rule width utilities
.column-rule-0 { column-rule-width: 0px !important; }
.column-rule-1 { column-rule-width: 1px !important; }
.column-rule-2 { column-rule-width: 2px !important; }
.column-rule-4 { column-rule-width: 4px !important; }
.column-rule-8 { column-rule-width: 8px !important; }

// Column rule style utilities
.column-rule-none { column-rule-style: none !important; }
.column-rule-solid { column-rule-style: solid !important; }
.column-rule-dashed { column-rule-style: dashed !important; }
.column-rule-dotted { column-rule-style: dotted !important; }
.column-rule-double { column-rule-style: double !important; }

// Column rule color utilities
.column-rule-inherit { column-rule-color: inherit !important; }
.column-rule-current { column-rule-color: currentColor !important; }
.column-rule-transparent { column-rule-color: transparent !important; }
.column-rule-black { column-rule-color: var(--color-neutral-black) !important; }
.column-rule-white { column-rule-color: var(--color-neutral-white) !important; }
.column-rule-primary { column-rule-color: var(--color-interactive-primary) !important; }
.column-rule-secondary { column-rule-color: var(--color-interactive-secondary) !important; }
.column-rule-success { column-rule-color: var(--color-success) !important; }
.column-rule-warning { column-rule-color: var(--color-warning) !important; }
.column-rule-error { column-rule-color: var(--color-error) !important; }
.column-rule-info { column-rule-color: var(--color-info) !important; }
.column-rule-light { column-rule-color: var(--color-border-light) !important; }
.column-rule-default { column-rule-color: var(--color-border-default) !important; }

// Column span utilities
.column-span-all { column-span: all !important; }
.column-span-none { column-span: none !important; }

// Column fill utilities
.column-fill-auto { column-fill: auto !important; }
.column-fill-balance { column-fill: balance !important; }
.column-fill-balance-all { column-fill: balance-all !important; }

// Break before utilities
.break-before-auto { break-before: auto !important; }
.break-before-avoid { break-before: avoid !important; }
.break-before-all { break-before: all !important; }
.break-before-avoid-page { break-before: avoid-page !important; }
.break-before-page { break-before: page !important; }
.break-before-left { break-before: left !important; }
.break-before-right { break-before: right !important; }
.break-before-column { break-before: column !important; }

// Break inside utilities
.break-inside-auto { break-inside: auto !important; }
.break-inside-avoid { break-inside: avoid !important; }
.break-inside-avoid-page { break-inside: avoid-page !important; }
.break-inside-avoid-column { break-inside: avoid-column !important; }

// Break after utilities
.break-after-auto { break-after: auto !important; }
.break-after-avoid { break-after: avoid !important; }
.break-after-all { break-after: all !important; }
.break-after-avoid-page { break-after: avoid-page !important; }
.break-after-page { break-after: page !important; }
.break-after-left { break-after: left !important; }
.break-after-right { break-after: right !important; }
.break-after-column { break-after: column !important; }

// Responsive column utilities
@include responsive-max(sm) {
  .sm\:columns-1 { columns: 1 !important; }
  .sm\:columns-2 { columns: 2 !important; }
  .sm\:columns-3 { columns: 3 !important; }
  .sm\:columns-4 { columns: 4 !important; }
  .sm\:columns-auto { columns: auto !important; }
  .sm\:columns-none { columns: initial !important; }
}

@include responsive-max(md) {
  .md\:columns-1 { columns: 1 !important; }
  .md\:columns-2 { columns: 2 !important; }
  .md\:columns-3 { columns: 3 !important; }
  .md\:columns-4 { columns: 4 !important; }
  .md\:columns-5 { columns: 5 !important; }
  .md\:columns-6 { columns: 6 !important; }
  .md\:columns-auto { columns: auto !important; }
  .md\:columns-none { columns: initial !important; }
}

@include responsive-min(lg) {
  .lg\:columns-1 { columns: 1 !important; }
  .lg\:columns-2 { columns: 2 !important; }
  .lg\:columns-3 { columns: 3 !important; }
  .lg\:columns-4 { columns: 4 !important; }
  .lg\:columns-5 { columns: 5 !important; }
  .lg\:columns-6 { columns: 6 !important; }
  .lg\:columns-7 { columns: 7 !important; }
  .lg\:columns-8 { columns: 8 !important; }
  .lg\:columns-auto { columns: auto !important; }
  .lg\:columns-none { columns: initial !important; }
}

// Common column patterns
.masonry {
  column-count: 3;
  column-gap: var(--space-4);
  
  @include responsive-max(md) {
    column-count: 2;
  }
  
  @include responsive-max(sm) {
    column-count: 1;
  }
  
  > * {
    break-inside: avoid;
    margin-bottom: var(--space-4);
  }
}

.newspaper {
  columns: 3;
  column-gap: var(--space-6);
  column-rule: 1px solid var(--color-border-light);
  text-align: justify;
  
  @include responsive-max(md) {
    columns: 2;
    column-gap: var(--space-4);
  }
  
  @include responsive-max(sm) {
    columns: 1;
  }
  
  p:first-child::first-letter {
    font-size: var(--text-3xl);
    font-weight: 700;
    float: left;
    line-height: 1;
    margin-right: var(--space-2);
  }
}

.card-columns {
  column-count: 3;
  column-gap: var(--space-4);
  orphans: 1;
  widows: 1;
  
  @include responsive-max(lg) {
    column-count: 2;
  }
  
  @include responsive-max(sm) {
    column-count: 1;
  }
  
  > .card {
    display: inline-block;
    width: 100%;
    margin-bottom: var(--space-4);
  }
}

// ===== CONTAINER UTILITIES =====
// Based on Tailwind CSS container system

// Container mixin to avoid @extend across media queries
@mixin container-base {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: var(--container-padding, var(--space-4));
  padding-left: var(--container-padding, var(--space-4));
}

// Container responsive mixin
@mixin container-responsive {
  @include responsive-min(sm) {
    max-width: var(--breakpoint-sm);
  }
  
  @include responsive-min(md) {
    max-width: var(--breakpoint-md);
  }
  
  @include responsive-min(lg) {
    max-width: var(--breakpoint-lg);
  }
  
  @include responsive-min(xl) {
    max-width: var(--breakpoint-xl);
  }
  
  @include responsive-min(2xl) {
    max-width: var(--breakpoint-2xl);
  }
}

// Base container
.container {
  @include container-base;
  @include container-responsive;
}

// Container variants
.container-sm {
  max-width: var(--breakpoint-sm) !important;
}

.container-md {
  max-width: var(--breakpoint-md) !important;
}

.container-lg {
  max-width: var(--breakpoint-lg) !important;
}

.container-xl {
  max-width: var(--breakpoint-xl) !important;
}

.container-2xl {
  max-width: var(--breakpoint-2xl) !important;
}

.container-full {
  max-width: 100% !important;
}

.container-prose {
  max-width: 65ch !important;
}

// Container without default padding
.container-no-padding {
  padding-left: 0 !important;
  padding-right: 0 !important;
}

// Container with custom padding
.container-px-0 {
  padding-left: 0 !important;
  padding-right: 0 !important;
}

.container-px-2 {
  padding-left: var(--space-2) !important;
  padding-right: var(--space-2) !important;
}

.container-px-4 {
  padding-left: var(--space-4) !important;
  padding-right: var(--space-4) !important;
}

.container-px-6 {
  padding-left: var(--space-6) !important;
  padding-right: var(--space-6) !important;
}

.container-px-8 {
  padding-left: var(--space-8) !important;
  padding-right: var(--space-8) !important;
}

.container-px-10 {
  padding-left: var(--space-10) !important;
  padding-right: var(--space-10) !important;
}

.container-px-12 {
  padding-left: var(--space-12) !important;
  padding-right: var(--space-12) !important;
}

// Fluid container mixin
@mixin container-fluid-base {
  width: 100%;
  padding-right: var(--container-padding, var(--space-4));
  padding-left: var(--container-padding, var(--space-4));
  margin-right: auto;
  margin-left: auto;
}

// Fluid container (no max-width constraints)
.container-fluid {
  @include container-fluid-base;
}

// Section containers
.section-container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding: var(--space-16) var(--space-4);
  
  @include responsive-min(md) {
    padding: var(--space-20) var(--space-6);
  }
  
  @include responsive-min(lg) {
    padding: var(--space-24) var(--space-8);
  }
}

// Content containers
.content-container {
  width: 100%;
  max-width: var(--container-max-width);
  margin-right: auto;
  margin-left: auto;
  padding-right: var(--space-4);
  padding-left: var(--space-4);
  
  @include responsive-min(md) {
    padding-right: var(--space-6);
    padding-left: var(--space-6);
  }
  
  @include responsive-min(lg) {
    padding-right: var(--space-8);
    padding-left: var(--space-8);
  }
}

// Article container (for readable content)
.article-container {
  width: 100%;
  max-width: 65ch;
  margin-right: auto;
  margin-left: auto;
  padding-right: var(--space-4);
  padding-left: var(--space-4);
  line-height: var(--line-height-relaxed);
  
  @include responsive-min(md) {
    padding-right: var(--space-6);
    padding-left: var(--space-6);
  }
}

// App shell container
.app-container {
  width: 100%;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

// Main content container (with sidebar)
.main-container {
  flex: 1;
  width: 100%;
  max-width: 100%;
  padding: var(--space-4);
  
  @include responsive-min(md) {
    padding: var(--space-6);
  }
  
  @include responsive-min(lg) {
    padding: var(--space-8);
  }
  
  &.with-sidebar {
    @include responsive-min(lg) {
      margin-left: var(--sidebar-width);
    }
  }
}

// Modal container
.modal-container {
  width: 100%;
  max-width: var(--modal-width-md);
  margin: var(--space-4);
  
  &.modal-sm {
    max-width: var(--modal-width-sm);
  }
  
  &.modal-lg {
    max-width: var(--modal-width-lg);
  }
  
  &.modal-xl {
    max-width: var(--modal-width-xl);
  }
  
  &.modal-full {
    max-width: calc(100vw - var(--space-8));
    max-height: calc(100vh - var(--space-8));
  }
}

// Card container grid
.card-container {
  display: grid;
  gap: var(--space-4);
  width: 100%;
  
  @include responsive-min(md) {
    grid-template-columns: repeat(2, 1fr);
    gap: var(--space-6);
  }
  
  @include responsive-min(lg) {
    grid-template-columns: repeat(3, 1fr);
  }
  
  @include responsive-min(xl) {
    grid-template-columns: repeat(4, 1fr);
  }
}

// Responsive container utilities
@include responsive-max(sm) {
  .sm\:container {
    @include container-base;
    @include container-responsive;
  }
  .sm\:container-fluid {
    @include container-fluid-base;
  }
}

@include responsive-max(md) {
  .md\:container {
    @include container-base;
    @include container-responsive;
  }
  .md\:container-fluid {
    @include container-fluid-base;
  }
}

@include responsive-min(lg) {
  .lg\:container {
    @include container-base;
    @include container-responsive;
  }
  .lg\:container-fluid {
    @include container-fluid-base;
  }
}

// Container with bleed (negative margins)
.container-bleed {
  margin-left: calc(var(--space-4) * -1);
  margin-right: calc(var(--space-4) * -1);
  padding-left: var(--space-4);
  padding-right: var(--space-4);
  
  @include responsive-min(md) {
    margin-left: calc(var(--space-6) * -1);
    margin-right: calc(var(--space-6) * -1);
    padding-left: var(--space-6);
    padding-right: var(--space-6);
  }
}

// Constrained width utilities
.max-w-screen-sm {
  max-width: var(--breakpoint-sm) !important;
}

.max-w-screen-md {
  max-width: var(--breakpoint-md) !important;
}

.max-w-screen-lg {
  max-width: var(--breakpoint-lg) !important;
}

.max-w-screen-xl {
  max-width: var(--breakpoint-xl) !important;
}

.max-w-screen-2xl {
  max-width: var(--breakpoint-2xl) !important;
}

// ===== CSS GRID UTILITIES =====
// Based on Tailwind's grid system

// Grid template columns
.grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)) !important; }
.grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)) !important; }
.grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)) !important; }
.grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)) !important; }
.grid-cols-5 { grid-template-columns: repeat(5, minmax(0, 1fr)) !important; }
.grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)) !important; }
.grid-cols-7 { grid-template-columns: repeat(7, minmax(0, 1fr)) !important; }
.grid-cols-8 { grid-template-columns: repeat(8, minmax(0, 1fr)) !important; }
.grid-cols-9 { grid-template-columns: repeat(9, minmax(0, 1fr)) !important; }
.grid-cols-10 { grid-template-columns: repeat(10, minmax(0, 1fr)) !important; }
.grid-cols-11 { grid-template-columns: repeat(11, minmax(0, 1fr)) !important; }
.grid-cols-12 { grid-template-columns: repeat(12, minmax(0, 1fr)) !important; }
.grid-cols-none { grid-template-columns: none !important; }

// Auto-fit grid columns
.grid-cols-auto-fit-200 { grid-template-columns: repeat(auto-fit, minmax(var(--space-200), 1fr)) !important; }
.grid-cols-auto-fit-250 { grid-template-columns: repeat(auto-fit, minmax(var(--space-250), 1fr)) !important; }
.grid-cols-auto-fit-300 { grid-template-columns: repeat(auto-fit, minmax(var(--space-300), 1fr)) !important; }

// Grid template rows
.grid-rows-1 { grid-template-rows: repeat(1, minmax(0, 1fr)) !important; }
.grid-rows-2 { grid-template-rows: repeat(2, minmax(0, 1fr)) !important; }
.grid-rows-3 { grid-template-rows: repeat(3, minmax(0, 1fr)) !important; }
.grid-rows-4 { grid-template-rows: repeat(4, minmax(0, 1fr)) !important; }
.grid-rows-5 { grid-template-rows: repeat(5, minmax(0, 1fr)) !important; }
.grid-rows-6 { grid-template-rows: repeat(6, minmax(0, 1fr)) !important; }
.grid-rows-none { grid-template-rows: none !important; }

// Grid column span
.col-auto { grid-column: auto !important; }
.col-span-1 { grid-column: span 1 / span 1 !important; }
.col-span-2 { grid-column: span 2 / span 2 !important; }
.col-span-3 { grid-column: span 3 / span 3 !important; }
.col-span-4 { grid-column: span 4 / span 4 !important; }
.col-span-5 { grid-column: span 5 / span 5 !important; }
.col-span-6 { grid-column: span 6 / span 6 !important; }
.col-span-7 { grid-column: span 7 / span 7 !important; }
.col-span-8 { grid-column: span 8 / span 8 !important; }
.col-span-9 { grid-column: span 9 / span 9 !important; }
.col-span-10 { grid-column: span 10 / span 10 !important; }
.col-span-11 { grid-column: span 11 / span 11 !important; }
.col-span-12 { grid-column: span 12 / span 12 !important; }
.col-span-full { grid-column: 1 / -1 !important; }

// Grid column start/end
.col-start-1 { grid-column-start: 1 !important; }
.col-start-2 { grid-column-start: 2 !important; }
.col-start-3 { grid-column-start: 3 !important; }
.col-start-4 { grid-column-start: 4 !important; }
.col-start-5 { grid-column-start: 5 !important; }
.col-start-6 { grid-column-start: 6 !important; }
.col-start-7 { grid-column-start: 7 !important; }
.col-start-8 { grid-column-start: 8 !important; }
.col-start-9 { grid-column-start: 9 !important; }
.col-start-10 { grid-column-start: 10 !important; }
.col-start-11 { grid-column-start: 11 !important; }
.col-start-12 { grid-column-start: 12 !important; }
.col-start-13 { grid-column-start: 13 !important; }
.col-start-auto { grid-column-start: auto !important; }

.col-end-1 { grid-column-end: 1 !important; }
.col-end-2 { grid-column-end: 2 !important; }
.col-end-3 { grid-column-end: 3 !important; }
.col-end-4 { grid-column-end: 4 !important; }
.col-end-5 { grid-column-end: 5 !important; }
.col-end-6 { grid-column-end: 6 !important; }
.col-end-7 { grid-column-end: 7 !important; }
.col-end-8 { grid-column-end: 8 !important; }
.col-end-9 { grid-column-end: 9 !important; }
.col-end-10 { grid-column-end: 10 !important; }
.col-end-11 { grid-column-end: 11 !important; }
.col-end-12 { grid-column-end: 12 !important; }
.col-end-13 { grid-column-end: 13 !important; }
.col-end-auto { grid-column-end: auto !important; }

// Grid row span
.row-auto { grid-row: auto !important; }
.row-span-1 { grid-row: span 1 / span 1 !important; }
.row-span-2 { grid-row: span 2 / span 2 !important; }
.row-span-3 { grid-row: span 3 / span 3 !important; }
.row-span-4 { grid-row: span 4 / span 4 !important; }
.row-span-5 { grid-row: span 5 / span 5 !important; }
.row-span-6 { grid-row: span 6 / span 6 !important; }
.row-span-full { grid-row: 1 / -1 !important; }

// Grid row start/end
.row-start-1 { grid-row-start: 1 !important; }
.row-start-2 { grid-row-start: 2 !important; }
.row-start-3 { grid-row-start: 3 !important; }
.row-start-4 { grid-row-start: 4 !important; }
.row-start-5 { grid-row-start: 5 !important; }
.row-start-6 { grid-row-start: 6 !important; }
.row-start-7 { grid-row-start: 7 !important; }
.row-start-auto { grid-row-start: auto !important; }

.row-end-1 { grid-row-end: 1 !important; }
.row-end-2 { grid-row-end: 2 !important; }
.row-end-3 { grid-row-end: 3 !important; }
.row-end-4 { grid-row-end: 4 !important; }
.row-end-5 { grid-row-end: 5 !important; }
.row-end-6 { grid-row-end: 6 !important; }
.row-end-7 { grid-row-end: 7 !important; }
.row-end-auto { grid-row-end: auto !important; }

// Grid auto flow
.grid-flow-row { grid-auto-flow: row !important; }
.grid-flow-col { grid-auto-flow: column !important; }
.grid-flow-dense { grid-auto-flow: dense !important; }
.grid-flow-row-dense { grid-auto-flow: row dense !important; }
.grid-flow-col-dense { grid-auto-flow: column dense !important; }

// Grid auto columns
.auto-cols-auto { grid-auto-columns: auto !important; }
.auto-cols-min { grid-auto-columns: min-content !important; }
.auto-cols-max { grid-auto-columns: max-content !important; }
.auto-cols-fr { grid-auto-columns: minmax(0, 1fr) !important; }

// Grid auto rows
.auto-rows-auto { grid-auto-rows: auto !important; }
.auto-rows-min { grid-auto-rows: min-content !important; }
.auto-rows-max { grid-auto-rows: max-content !important; }
.auto-rows-fr { grid-auto-rows: minmax(0, 1fr) !important; }

// Justify items
.justify-items-start { justify-items: start !important; }
.justify-items-end { justify-items: end !important; }
.justify-items-center { justify-items: center !important; }
.justify-items-stretch { justify-items: stretch !important; }

// Justify self
.justify-self-auto { justify-self: auto !important; }
.justify-self-start { justify-self: start !important; }
.justify-self-end { justify-self: end !important; }
.justify-self-center { justify-self: center !important; }
.justify-self-stretch { justify-self: stretch !important; }

// Align items
.items-start { align-items: flex-start !important; }
.items-end { align-items: flex-end !important; }
.items-center { align-items: center !important; }
.items-baseline { align-items: baseline !important; }
.items-stretch { align-items: stretch !important; }

// Responsive grid utilities
@include responsive-max(sm) {
  .sm\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)) !important; }
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)) !important; }
  .sm\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)) !important; }
  .sm\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)) !important; }
  .sm\:grid-cols-5 { grid-template-columns: repeat(5, minmax(0, 1fr)) !important; }
  .sm\:grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)) !important; }
  .sm\:grid-cols-none { grid-template-columns: none !important; }
}

@include responsive-max(md) {
  .md\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)) !important; }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)) !important; }
  .md\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)) !important; }
  .md\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)) !important; }
  .md\:grid-cols-5 { grid-template-columns: repeat(5, minmax(0, 1fr)) !important; }
  .md\:grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)) !important; }
  .md\:grid-cols-none { grid-template-columns: none !important; }
}

@include responsive-max(lg) {
  .lg\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)) !important; }
  .lg\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)) !important; }
  .lg\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)) !important; }
  .lg\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)) !important; }
  .lg\:grid-cols-5 { grid-template-columns: repeat(5, minmax(0, 1fr)) !important; }
  .lg\:grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)) !important; }
  .lg\:grid-cols-7 { grid-template-columns: repeat(7, minmax(0, 1fr)) !important; }
  .lg\:grid-cols-8 { grid-template-columns: repeat(8, minmax(0, 1fr)) !important; }
  .lg\:grid-cols-9 { grid-template-columns: repeat(9, minmax(0, 1fr)) !important; }
  .lg\:grid-cols-10 { grid-template-columns: repeat(10, minmax(0, 1fr)) !important; }
  .lg\:grid-cols-11 { grid-template-columns: repeat(11, minmax(0, 1fr)) !important; }
  .lg\:grid-cols-12 { grid-template-columns: repeat(12, minmax(0, 1fr)) !important; }
  .lg\:grid-cols-none { grid-template-columns: none !important; }
}