@use '../abstracts' as *;
@use 'sass:map';

// Executive Background System - Fortune 500 Professional Backgrounds
// Sophisticated gradients and surfaces for executive platforms

// ===== SEMANTIC BACKGROUNDS - BEM NOTATION =====
// Background Colors - Executive Theme Aware
.bg {
  &-transparent { background-color: transparent; }
  &-current { background-color: currentColor; }
  
  // Executive Surface Hierarchy
  &-surface { background-color: var(--color-background-primary); }
  &-surface-elevated { background-color: var(--color-background-elevated); }
  &-surface-secondary { background-color: var(--color-background-secondary); }
  &-elevated { background-color: var(--color-background-elevated); }
  
  // Primary interactive backgrounds
  &-primary { background-color: var(--color-interactive-primary); }
  &-primary-light { background-color: var(--color-interactive-light); }
  &-secondary { background-color: var(--color-interactive-secondary); }
  
  // Light/Dark utility backgrounds
  &-light { background-color: var(--color-background-elevated); }
  &-dark { background-color: var(--color-text-primary); }
  
  // Executive Status Backgrounds - Loop-based generation
  $status-backgrounds: (
    success: (main: var(--color-success), light: var(--color-success-bg)),
    warning: (main: var(--color-warning), light: var(--color-warning-bg)),
    error: (main: var(--color-error), light: var(--color-error-bg)),
    info: (main: var(--color-info), light: var(--color-info-bg))
  );
  
  @each $name, $colors in $status-backgrounds {
    &-#{$name} { background-color: map.get($colors, main); }
    &-#{$name}-light { background-color: map.get($colors, light); }
  }
  
  // Legacy alias
  &-danger-light { background-color: var(--color-error-bg); }
}

// ===== THEME-AWARE GRADIENT SYSTEM =====
// All gradients use theme variables for full customization

// Primary gradient - dramatic 2025 enterprise gradient with depth
.bg-gradient-primary {
  background: linear-gradient(135deg, 
    var(--theme-bg-primary) 0%, 
    var(--theme-bg-secondary) 35%, 
    color-mix(in srgb, var(--theme-bg-secondary) 85%, var(--color-interactive-primary) 15%) 70%,
    var(--theme-bg-primary) 100%);
  position: relative;
  
  // Add mesh gradient overlay for modern depth
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(circle at 20% 80%, 
      color-mix(in srgb, var(--color-interactive-primary) 10%, transparent) 0%, 
      transparent 50%),
      radial-gradient(circle at 80% 20%, 
      color-mix(in srgb, var(--color-accent-purple) 8%, transparent) 0%, 
      transparent 50%),
      radial-gradient(circle at 40% 40%, 
      color-mix(in srgb, var(--color-accent-cyan) 5%, transparent) 0%, 
      transparent 50%);
    pointer-events: none;
  }
}

// Subtle gradient - minimal contrast - theme-aware
.bg-gradient-subtle {
  background: var(--color-background-primary);
  // Fallback to simple background for better theme inheritance
}

// Card gradient - elevated surface effect
.bg-gradient-card {
  background: linear-gradient(
    145deg,
    var(--color-background-elevated) 0%,
    var(--color-background-secondary) 100%
  );
}

// Surface gradient - very subtle
.bg-gradient-surface {
  background: linear-gradient(
    180deg,
    var(--color-background-elevated) 0%,
    var(--color-background-primary) 100%
  );
}

// Status gradients - theme-aware
.bg-gradient-success {
  background: linear-gradient(
    135deg,
    var(--color-success-bg) 0%,
    var(--color-background-elevated) 100%
  );
}

.bg-gradient-warning {
  background: linear-gradient(
    135deg,
    var(--color-warning-bg) 0%,
    var(--color-background-elevated) 100%
  );
}

.bg-gradient-error {
  background: linear-gradient(
    135deg,
    var(--color-error-bg) 0%,
    var(--color-background-elevated) 100%
  );
}

.bg-gradient-info {
  background: linear-gradient(
    135deg,
    var(--color-info-bg) 0%,
    var(--color-background-elevated) 100%
  );
}

// ===== INTERACTIVE BACKGROUNDS =====
// Professional hover and state backgrounds

// Hover States
.hover\\:bg-surface:hover { background-color: var(--color-background-secondary); }
.hover\\:bg-gradient-card:hover {
  background: linear-gradient(
    135deg,
    var(--color-background-elevated) 0%,
    var(--color-background-primary) 100%
  );
}

// Focus States
.focus\\:bg-surface:focus { background-color: var(--color-background-secondary); }

// ===== SPECIAL EXECUTIVE BACKGROUNDS =====
// Modal and overlay backgrounds
.bg {
  &-modal { background-color: var(--color-background-elevated); }
  &-overlay { background-color: var(--color-overlay-dark); }
  &-disabled { background-color: var(--color-background-disabled); }
}

// Executive Dashboard Background
.bg-dashboard {
  background: var(--color-background-primary);
  position: relative;
}

// Remove duplicate classes - handled in .bg block above

// Overlay backgrounds for modals and overlays
.bg-black-50 { background-color: var(--color-overlay-dark); }

// White backgrounds with opacity
.bg-white-95 { background-color: var(--color-glass-light); }

// Button-specific semantic backgrounds - Loop-based generation
$button-backgrounds: (
  primary: var(--button-primary-bg),
  secondary: var(--button-secondary-bg),
  ghost: var(--button-ghost-bg),
  danger: var(--button-danger-bg),
  success: var(--button-success-bg),
  warning: var(--button-warning-bg),
  outline: var(--button-outline-bg),
  glass: var(--button-glass-bg)
);

@each $name, $bg in $button-backgrounds {
  .bg-button-#{$name} { background-color: #{$bg} !important; }
}

.bg-tooltip { background-color: var(--tooltip-bg) !important; }

// Button interactive states - Loop-based generation
$button-hover-states: (
  primary: var(--button-primary-hover),
  secondary: var(--button-secondary-hover),
  ghost: var(--button-ghost-hover),
  danger: var(--button-danger-hover),
  success: var(--button-success-hover),
  warning: var(--button-warning-hover),
  outline: var(--button-outline-hover),
  glass: var(--button-glass-hover)
);

$button-active-states: (
  primary: var(--button-primary-active),
  secondary: var(--button-secondary-active),
  ghost: var(--button-ghost-active),
  danger: var(--button-danger-active),
  outline: var(--button-outline-active),
  glass: var(--button-glass-active)
);

@each $name, $bg in $button-hover-states {
  .hover\:bg-button-#{$name}-hover:hover { background-color: #{$bg} !important; }
}

@each $name, $bg in $button-active-states {
  .active\:bg-button-#{$name}-active:active { background-color: #{$bg} !important; }
}

// Interactive state backgrounds - Loop-based generation
$interactive-hover-states: (
  surface: var(--color-background-secondary),
  elevated: var(--color-background-secondary),
  primary: var(--color-interactive-primary-hover),
  secondary: var(--color-interactive-secondary-hover),
  light: var(--color-background-secondary),
  surface-2: var(--color-background-secondary),
  surface-3: var(--surface-3),
);

$interactive-focus-states: (
  surface: var(--color-background-secondary),
  elevated: var(--color-background-secondary),
  surface-2: var(--color-background-secondary)
);

$interactive-active-states: (
  primary: var(--color-interactive-primary-active),
  secondary: var(--color-interactive-secondary-hover)
);

@each $name, $bg in $interactive-hover-states {
  .hover\:bg-#{$name}:hover { background-color: #{$bg}; }
}

@each $name, $bg in $interactive-focus-states {
  .focus\:bg-#{$name}:focus { background-color: #{$bg}; }
}

@each $name, $bg in $interactive-active-states {
  .active\:bg-#{$name}:active { background-color: #{$bg}; }
}

// Background opacity modifier - Loop-based generation
$opacity-values: (10: 0.1, 25: 0.25, 50: 0.5, 75: 0.75, 90: 0.9);

@each $name, $value in $opacity-values {
  .bg-opacity-#{$name} { --bg-opacity: #{$value}; }
}

// Background patterns (for special use cases)
.bg-pattern-dots {
  background-image: radial-gradient(circle, var(--color-border-light) 1px, transparent 1px);
  background-size: 1rem 1rem;
}

.bg-pattern-grid {
  background-image: 
    linear-gradient(var(--color-border-light) 1px, transparent 1px),
    linear-gradient(90deg, var(--color-border-light) 1px, transparent 1px);
  background-size: 1rem 1rem;
}
