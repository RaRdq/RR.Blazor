@use '../abstracts' as *;
@use 'sass:map';

$position-types: (static, fixed, absolute, relative, sticky);

@each $type in $position-types {
  .#{$type} { position: #{$type}; }
}

.inset-0 { top: 0; right: 0; bottom: 0; left: 0; }
.inset-auto { top: auto; right: auto; bottom: auto; left: auto; }

$position-spaces: (
  0: 0,
  1: var(--space-1),
  2: var(--space-2),
  3: var(--space-3),
  4: var(--space-4),
  5: var(--space-5),
  6: var(--space-6),
  8: var(--space-8),
  10: var(--space-10),
  12: var(--space-12),
  16: var(--space-16),
  20: var(--space-20),
  24: var(--space-20)
);

$position-percentages: (
  50: 50%,
  100: 100%
);

$directions: (top, right, bottom, left);

@each $direction in $directions {
  .#{$direction}-auto { #{$direction}: auto; }

  @each $name, $value in $position-spaces {
    .#{$direction}-#{$name} { #{$direction}: #{$value}; }

    @if $name != 0 {
      .\-#{$direction}-#{$name} { #{$direction}: calc(#{$value} * -1); }
    }
  }

    @each $name, $value in $position-percentages {
    .#{$direction}-#{$name} { #{$direction}: #{$value}; }
  }
}

$z-indexes: (
  0: 0,
  10: 10,
  20: 20,
  30: 30,
  40: 40,
  50: 50,
  9998: 9998,
  9999: 9999,
  auto: auto
);

@each $name, $value in $z-indexes {
  .z-#{$name} { z-index: #{$value}; }
}

$semantic-z: (
  popup: var(--z-popup),
  sticky: var(--z-sticky),
  modal-backdrop: var(--z-modal-backdrop),
  modal: var(--z-modal),
  popover: var(--z-popover),
  tooltip: var(--z-tooltip)
);

@each $name, $value in $semantic-z {
  .z-#{$name} { z-index: #{$value}; }
}

.z-max { z-index: var(--z-max); }

.center-absolute {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.center-x {
  left: 50%;
  transform: translateX(-50%);
}

.center-y {
  top: 50%;
  transform: translateY(-50%);
}

.transform {
  transform: translate(var(--transform-translate-x, 0), var(--transform-translate-y, 0))
    rotate(var(--transform-rotate, 0))
    skewX(var(--transform-skew-x, 0))
    skewY(var(--transform-skew-y, 0))
    scaleX(var(--transform-scale-x, 1))
    scaleY(var(--transform-scale-y, 1));
}
.transform-none { transform: none; }

$translate-values: (
  0: 0,
  1: var(--space-1),
  2: var(--space-2),
  4: var(--space-4),
  full: 100%,
  n50: -50%
);

@each $axis in (x, y) {
  @each $name, $value in $translate-values {
    @if $name == n50 {
      .translate-#{$axis}-#{$name} { --transform-translate-#{$axis}: #{$value}; }
    } @else {
      .translate-#{$axis}-#{$name} { --transform-translate-#{$axis}: #{$value}; }
      @if $name != 0 and $name != full {
        .\-translate-#{$axis}-#{$name} { --transform-translate-#{$axis}: calc(#{$value} * -1); }
      } @else if $name == full {
        .\-translate-#{$axis}-#{$name} { --transform-translate-#{$axis}: -100%; }
      }
    }
  }
}

.overlay-full {
  position: fixed;
  inset: 0;
  z-index: var(--z-overlay);
}

@mixin generate-position-utilities($prefix: '') {
  $class-prefix: if($prefix == '', '', '#{$prefix}\:');

  @each $type in $position-types {
    .#{$class-prefix}#{$type} { position: #{$type}; }
  }

    .#{$class-prefix}inset-0 { top: 0; right: 0; bottom: 0; left: 0; }
  .#{$class-prefix}inset-auto { top: auto; right: auto; bottom: auto; left: auto; }

@each $direction in $directions {
    .#{$class-prefix}#{$direction}-auto { #{$direction}: auto; }

@each $name, $value in (0: 0, 1: var(--space-1), 2: var(--space-2), 3: var(--space-3), 4: var(--space-4), 6: var(--space-6), 8: var(--space-8), 12: var(--space-12), 16: var(--space-16)) {
      .#{$class-prefix}#{$direction}-#{$name} { #{$direction}: #{$value}; }
    }

        .#{$class-prefix}#{$direction}-50 { #{$direction}: 50%; }
    .#{$class-prefix}#{$direction}-100 { #{$direction}: 100%; }
  }

    @each $name, $value in $z-indexes {
    .#{$class-prefix}z-#{$name} { z-index: #{$value}; }
  }

.#{$class-prefix}z-popup { z-index: var(--z-popup); }
  .#{$class-prefix}z-modal { z-index: var(--z-modal); }
  .#{$class-prefix}z-tooltip { z-index: var(--z-tooltip); }
  .#{$class-prefix}z-modal-content { z-index: var(--z-modal-content); }
  .#{$class-prefix}z-popover { z-index: var(--z-popover); }

.#{$class-prefix}z-modal-above { z-index: calc(var(--z-modal-content) + 10); }
  .#{$class-prefix}z-popup-above { z-index: calc(var(--z-popup) + 10); }

    @each $axis in (x, y) {
    @each $name, $value in (0: 0, 1: var(--space-1), 2: var(--space-2), 4: var(--space-4), full: 100%) {
      .#{$class-prefix}translate-#{$axis}-#{$name} { --transform-translate-#{$axis}: #{$value}; }
    }
  }

.#{$class-prefix}center-absolute {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .#{$class-prefix}center-x {
    left: 50%;
    transform: translateX(-50%);
  }

  .#{$class-prefix}center-y {
    top: 50%;
    transform: translateY(-50%);
  }
}

@each $breakpoint in (sm, md, lg, xl) {
  @include responsive-min($breakpoint) {
    @include generate-position-utilities($breakpoint);
  }
}
