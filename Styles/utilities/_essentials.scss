@use '../abstracts' as *;

.box-border { box-sizing: border-box; }
.box-content { box-sizing: content-box; }

.float-right { float: right; }
.float-left { float: left; }
.float-none { float: none; }

.clear-left { clear: left; }
.clear-right { clear: right; }
.clear-both { clear: both; }
.clear-none { clear: none; }

.isolate { isolation: isolate; }
.isolation-auto { isolation: auto; }

.transition-none { transition-property: none; }
.transition-all { transition-property: all; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.transition { transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.transition-colors { transition-property: background-color, border-color, color, fill, stroke; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.transition-opacity { transition-property: opacity; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.transition-shadow { transition-property: box-shadow; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.transition-transform { transition-property: transform; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }

.accent-auto { accent-color: auto; }
.accent-primary { accent-color: var(--color-primary); }

.caret-transparent { caret-color: transparent; }
.caret-current { caret-color: currentColor; }
.caret-primary { caret-color: var(--color-primary); }

.will-change-auto { will-change: auto; }
.will-change-scroll { will-change: scroll-position; }
.will-change-contents { will-change: contents; }
.will-change-transform { will-change: transform; }

.contain-none { contain: none; }
.contain-strict { contain: strict; }
.contain-content { contain: content; }
.contain-size { contain: size; }
.contain-layout { contain: layout; }
.contain-style { contain: style; }
.contain-paint { contain: paint; }

.content-none { content: none; }

.forced-color-adjust-auto { forced-color-adjust: auto; }
.forced-color-adjust-none { forced-color-adjust: none; }

.box-decoration-slice { box-decoration-break: slice; }
.box-decoration-clone { box-decoration-break: clone; }