@use '../abstracts' as *;

// Input System - Utility-first with extends
.input {
  @extend %input-base-style;
  @extend %touch-target;
  @include glass-effect(light);
  
  // Variant modifiers using &- pattern
  &-clean {
    @extend %input-base-style;
    @include glass-effect(none);
    background: var(--color-background-secondary);
    border-color: transparent;
    
    &:hover:not(:focus):not(:disabled) {
      @extend %hover-lift-small;
    }
  }
  
  &-filled {
    @extend %input-base-style;
    @include glass-effect(none);
    background: var(--color-background-secondary);
    border-color: transparent;
    
    &:hover:not(:focus):not(:disabled) {
      @extend %hover-lift-small;
    }
  }
  
  &-outlined {
    @extend %input-base-style;
    @include glass-effect(none);
    background: transparent;
    border-width: 2px;
    
    &:hover:not(:focus):not(:disabled) {
      @include glass-effect(light);
    }
  }
  
  &-ghost {
    @extend %input-base-style;
    @include glass-effect(none);
    background: transparent;
    border-color: transparent;
    
    &:hover:not(:focus):not(:disabled) {
      @include glass-effect(light);
      @extend %hover-lift-small;
    }
  }
  
  // Size variants using &- pattern
  &-sm {
    @extend %spacing-compact;
    font-size: var(--text-sm);
    border-radius: var(--radius-md);
  }
  
  &-lg {
    @extend %spacing-default;
    font-size: var(--text-lg);
    border-radius: var(--radius-xl);
    padding: var(--space-5);
  }
  
  // State modifiers using &- pattern
  &-loading {
    @extend %loading-skeleton-base;
    pointer-events: none;
  }
  
  &-error {
    border-color: var(--color-error);
    @include glass-effect(error);
    
    &:focus {
      box-shadow: 0 0 0 3px color-mix(in srgb, var(--color-error) 30%, transparent);
    }
  }
  
  &-success {
    border-color: var(--color-success);
    @include glass-effect(success);
    
    &:focus {
      box-shadow: 0 0 0 3px color-mix(in srgb, var(--color-success) 30%, transparent);
    }
  }
  
  // Density variants using &- pattern
  &-compact {
    @extend %spacing-compact;
  }
  
  &-comfortable {
    @extend %spacing-default;
  }
  
  // Interactive variants using &- pattern
  &-floating {
    padding-top: var(--space-5);
    padding-bottom: var(--space-3);
    
    &.input-sm {
      padding-top: var(--space-4);
      padding-bottom: var(--space-2);
    }
    
    &.input-lg {
      padding-top: var(--space-6);
      padding-bottom: var(--space-4);
    }
  }
  
  &-glass {
    @include glass-effect(medium);
    
    &:hover:not(:focus) {
      @include glass-effect(heavy);
    }
  }
  
  &-modern {
    @extend %hover-lift-with-shadow;
    
    &:focus {
      box-shadow: 
        0 0 0 3px var(--color-interactive-focus), 
        var(--shadow-lg),
        0 8px 25px -5px rgba(0, 0, 0, 0.1);
    }
  }
}

// Input Group System - Utility-first composition
.input-group {
  @extend %form-group-base;
  
  &-label {
    @extend %section-title;
    font-size: var(--text-sm);
    margin-bottom: var(--space-2);
    text-transform: uppercase;
    letter-spacing: var(--tracking-wide);
  }
  
  &-icon {
    @extend %icon-base;
    position: absolute;
    top: 50%;
    left: var(--space-4);
    transform: translateY(-50%);
    pointer-events: none;
    
    & + .input {
      padding-left: var(--space-12);
    }
  }
  
  &-error {
    color: var(--color-error);
    font-size: var(--text-sm);
    margin-top: var(--space-2);
  }
  
  &-help {
    color: var(--color-text-tertiary);
    font-size: var(--text-sm);
    margin-top: var(--space-2);
  }
  
  &-loading {
    @extend %loading-skeleton-base;
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-md);
  }
}

// Textarea System - Extending input base
.textarea {
  @extend .input;
  min-height: 6rem;
  resize: vertical;
  
  &-auto {
    resize: none;
    overflow: hidden;
  }
  
  &-fixed {
    resize: none;
  }
}

// Select System - Extending input base with dropdown styling
.select {
  @extend .input;
  cursor: pointer;
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath fill='%23666' d='M7 10l5 5 5-5z'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right var(--space-3) center;
  background-size: 20px;
  padding-right: var(--space-10);
  
  &:disabled {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath fill='%23999' d='M7 10l5 5 5-5z'/%3E%3C/svg%3E");
  }
}

// Checkbox System - Utility-first with extends
.checkbox {
  @extend %touch-target;
  @extend %interactive-base;
  display: flex;
  align-items: center;
  gap: var(--space-3);
  padding: var(--space-3);
  border-radius: var(--radius-lg);
  
  &:hover {
    background: var(--color-background-elevated);
  }
  
  input[type="checkbox"] {
    position: absolute;
    opacity: 0;
    
    &:checked + .checkbox-mark {
      background: var(--color-interactive-primary);
      border-color: var(--color-interactive-primary);
      
      &::after {
        opacity: 1;
        transform: rotate(45deg) scale(1);
      }
    }
  }
  
  &-mark {
    @extend %icon-base;
    width: var(--space-5);
    height: var(--space-5);
    border: 2px solid var(--color-border-medium);
    border-radius: var(--radius-sm);
    background: var(--color-background-elevated);
    flex-shrink: 0;
    
    &::after {
      content: '';
      position: absolute;
      left: var(--space-1);
      top: 1px;
      width: 6px;
      height: 10px;
      border: solid var(--color-text-inverse);
      border-width: 0 2px 2px 0;
      opacity: 0;
      transform: rotate(45deg) scale(0.8);
      transition: all var(--duration-normal) var(--ease-out);
    }
  }
  
  &-label {
    color: var(--color-text-primary);
    font-weight: var(--font-medium);
    font-size: var(--text-sm);
  }
}


// Radio System - Utility-first with extends
.radio {
  @extend %touch-target;
  @extend %interactive-base;
  
  &-group {
    @extend %form-group-base;
    gap: var(--space-3);
  }
  
  &-option {
    @extend %card-base-enhanced;
    @extend %hover-lift-small;
    display: flex;
    align-items: flex-start;
    gap: var(--space-3);
    padding: var(--space-4);
    cursor: pointer;
    
    input[type="radio"] {
      @extend %sr-only;
    }
    
    input[type="radio"]:checked ~ .radio-mark {
      border-color: var(--color-interactive-primary);
      
      &::after {
        content: '';
        position: absolute;
        width: 10px;
        height: 10px;
        background: var(--color-interactive-primary);
        border-radius: var(--radius-full);
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }
    }
  }
  
  &-mark {
    @extend %icon-base;
    width: 20px;
    height: 20px;
    border: 2px solid var(--color-border-medium);
    border-radius: var(--radius-full);
    flex-shrink: 0;
    margin-top: 2px;
  }
  
  &-content {
    display: flex;
    flex-direction: column;
    gap: var(--space-1);
    
    strong {
      font-size: var(--text-base);
      font-weight: var(--font-semibold);
      color: var(--color-text-primary);
    }
    
    span {
      font-size: var(--text-sm);
      color: var(--color-text-secondary);
    }
  }
  
  // Card variant for radio options
  &-card {
    @extend %card-base-enhanced;
    @extend %hover-lift-medium;
    position: relative;
    cursor: pointer;
    text-align: center;
    
    input[type="radio"] {
      @extend %sr-only;
      
      &:checked + .radio-card-content {
        border-color: var(--color-interactive-primary);
        background: var(--color-interactive-primary);
        color: var(--color-text-inverse);
        
        i, strong, span {
          color: var(--color-text-inverse);
        }
      }
    }
    
    &-content {
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: var(--space-6);
      
      i {
        font-size: var(--space-12);
        color: var(--color-interactive-primary);
        margin-bottom: var(--space-3);
      }
    }
  }
}

// Icon positioning utilities using &- pattern
.input {
  &-with-start-icon {
    padding-left: var(--space-12);
    
    &.input-sm {
      padding-left: var(--space-10);
    }
    
    &.input-lg {
      padding-left: var(--space-14);
    }
  }
  
  &-with-end-icon {
    padding-right: var(--space-12);
    
    &.input-sm {
      padding-right: var(--space-10);
    }
    
    &.input-lg {
      padding-right: var(--space-14);
    }
  }
  
  // Animation utilities using &- pattern
  &-animate {
    &:focus {
      animation: none;
    }
    
    &.animate-focus:focus {
      animation: scaleIn 0.2s ease-out;
    }
    
    &.animate-error {
      animation: shake 0.4s ease-in-out;
    }
    
    &.animate-success {
      animation: successFadeIn 0.5s ease-out;
    }
  }
  
  // Touch utilities using &- pattern
  &-touch {
    @extend %touch-target;
  }
  
  // Interactive utilities using &- pattern
  &-interactive {
    @extend %interactive-base;
    
    &:hover {
      @extend %hover-lift-with-shadow;
    }
  }
}

// Legacy compatibility - Use utility classes instead
.checkbox-box {
  @extend .checkbox;
}

.form-select {
  @extend .select;
  
  &-sm {
    @extend .select;
    @extend %spacing-compact;
  }
  
  &-lg {
    @extend .select;
    @extend %spacing-default;
    font-size: var(--text-lg);
  }
}

// Floating Label System - Modern input enhancement
.floating {
  &-container {
    position: relative;
    
    .input {
      &:focus + .floating-label,
      &:not(:placeholder-shown) + .floating-label {
        transform: translateY(-50%) scale(0.75);
        top: 0;
        background: var(--color-background-elevated);
        padding: 0 var(--space-2);
        color: var(--color-interactive-primary);
        font-weight: var(--font-semibold);
        z-index: 1;
      }
      
      &.input-outlined:focus + .floating-label,
      &.input-outlined:not(:placeholder-shown) + .floating-label {
        background: var(--color-background-primary);
        border-radius: var(--radius-sm);
      }
      
      &:not(:placeholder-shown)::placeholder {
        opacity: 0;
      }
      
      &:focus::placeholder {
        opacity: 0.4;
      }
    }
  }
  
  &-label {
    position: absolute;
    left: var(--space-3);
    top: 50%;
    transform: translateY(-50%);
    color: var(--color-text-secondary);
    font-size: var(--text-base);
    font-weight: var(--font-medium);
    transition: all var(--duration-normal) var(--ease-out);
    pointer-events: none;
    background: transparent;
    padding: 0;
    z-index: 2;
    white-space: nowrap;
    
    // Size variants using &- pattern
    &-sm {
      left: var(--space-2-5);
      font-size: var(--text-sm);
    }
    
    &-lg {
      left: var(--space-4);
      font-size: var(--text-lg);
    }
    
    // Density variants using &- pattern
    &-compact {
      @extend %spacing-compact;
      left: var(--space-2);
      font-size: var(--text-xs);
    }
    
    &-comfortable {
      @extend %spacing-default;
      left: var(--space-5);
      font-size: var(--text-lg);
    }
  }
}
