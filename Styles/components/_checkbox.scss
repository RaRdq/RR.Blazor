@use '../abstracts' as *;

.checkbox {
  @extend %touch-target;
  @extend %interactive-base;
  position: relative;
  display: flex;
  align-items: center;
  gap: var(--space-3);
  padding: var(--space-3);
  border-radius: var(--radius-lg);
  cursor: pointer;
  @include interactive-base(button);

  @include modifier(disabled) {
    @include interactive-disabled();
  }

  input[type="checkbox"] {
    position: absolute;
    opacity: 0;
    
    & ~ .checkbox-mark {
      background: var(--color-surface);
    }

    &:checked ~ .checkbox-mark {
      @include semantic-base(primary);
      border-color: var(--color-primary);
      background: var(--color-primary);

      .checkbox-icon {
        opacity: 1;
        transform: scale(1);
        color: var(--color-surface);
      }
    }

    &:focus ~ .checkbox-mark {
      @include interactive-focus-ring();
    }
  }

  @include element(mark) {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    transition: all var(--duration-normal) var(--ease-out);
    width: var(--space-5);
    height: var(--space-5);
    border: 2px solid var(--color-text-muted);
    border-radius: var(--radius-sm);
    pointer-events: none;

    @include modifier(small) {
      width: var(--space-4);
      height: var(--space-4);
    }

    @include modifier(medium) {
      width: var(--space-5);
      height: var(--space-5);
    }

    @include modifier(large) {
      width: var(--space-6);
      height: var(--space-6);
    }
    
  }

  @include element(icon) {
    color: var(--color-surface);
    opacity: 0;
    transform: scale(0.8);
    transition: all var(--duration-fast) var(--ease-out);
    font-size: var(--text-sm);
    
    &-small {
      font-size: var(--text-xs);
    }
    
    &-large {
      font-size: var(--text-base);
    }
  }

  @include element(label) {
    color: var(--color-text);
    font-weight: var(--font-medium);
    font-size: var(--text-sm);
    cursor: pointer;
    flex: 1;

    @include modifier(disabled) {
      color: var(--color-text-subtle);
      cursor: not-allowed;
    }
  }

  @include element(content) {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    flex: 1;
  }

  @include element(text) {
    color: var(--color-text);
    font-weight: var(--font-medium);
    font-size: var(--text-sm);
  }

  @include element(text-icon) {
    color: var(--color-text-muted);
    font-size: var(--text-base);
  }

  @include element(description) {
    color: var(--color-text-muted);
    font-size: var(--text-xs);
    margin-top: var(--space-1);
    line-height: var(--leading-relaxed);
  }
  
  @include element(icon) {
    opacity: 0;
    transform: scale(0.5);
    transition: all var(--duration-fast) var(--ease-out);
    color: var(--color-surface);
  }

  @include generate-density-classes('checkbox', 'checkbox');
}

.checkbox input[type="checkbox"]:checked ~ .checkbox-mark-primary {
  @include semantic-base(primary);
  border-color: var(--color-primary);
  background-color: var(--color-primary);
  
  .checkbox-icon {
    color: var(--color-surface);
  }
}

.checkbox input[type="checkbox"]:checked ~ .checkbox-mark-success {
  @include semantic-base(success);
  border-color: var(--color-success);
  background-color: var(--color-success);
  
  .checkbox-icon {
    color: var(--color-surface);
  }
}

.checkbox input[type="checkbox"]:checked ~ .checkbox-mark-warning {
  @include semantic-base(warning);
  border-color: var(--color-warning);
  background-color: var(--color-warning);
  
  .checkbox-icon {
    color: var(--color-surface);
  }
}

.checkbox input[type="checkbox"]:checked ~ .checkbox-mark-error {
  @include semantic-base(error);
  border-color: var(--color-error);
  background-color: var(--color-error);
  
  .checkbox-icon {
    color: var(--color-surface);
  }
}

