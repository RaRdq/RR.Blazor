@use '../../abstracts' as *;
@use 'sass:map';

$table-variants: (
  'standard': (
    'container-bg': var(--color-surface),
    'container-border': var(--border-1) solid var(--color-border),
    'container-shadow': var(--shadow-md),
    'container-radius': var(--radius-lg),
    'header-bg': var(--color-surface-elevated),
    'header-border': var(--border-1) solid var(--color-border),
    'row-hover': var(--color-surface-elevated),
    'row-selected': var(--color-primary-light)
  ),
  'elevated': (
    'container-bg': var(--color-surface),
    'container-border': none,
    'container-shadow': var(--shadow-lg),
    'container-radius': var(--radius-lg),
    'header-bg': var(--color-surface-elevated),
    'header-border': none,
    'row-hover': var(--color-surface-elevated),
    'row-selected': var(--color-primary-light),
    'transform-hover': translateY(calc(var(--space-1) * -0.25))
  ),
  'glass': (
    'container-bg': var(--glass-bg-light),
    'container-border': var(--border-1) solid var(--glass-border-light),
    'container-shadow': var(--shadow-md),
    'container-radius': var(--radius-lg),
    'header-bg': var(--glass-bg-medium),
    'header-border': var(--border-1) solid var(--glass-border-medium),
    'row-hover': var(--glass-hover-bg),
    'row-selected': var(--color-primary-light),
    'backdrop-filter': var(--glass-blur-md) var(--glass-saturate) var(--glass-brightness),
    'transform-hover': translateY(calc(var(--space-1) * -0.25))
  ),
  'minimal': (
    'container-bg': transparent,
    'container-border': none,
    'container-shadow': none,
    'container-radius': var(--radius-md),
    'header-bg': color-mix(in srgb, var(--color-surface-elevated) 20%, transparent),
    'header-border': var(--border-1) solid var(--color-border),
    'row-hover': color-mix(in srgb, var(--color-surface-elevated) 30%, transparent),
    'row-selected': var(--color-primary-light)
  ),
  'outlined': (
    'container-bg': var(--color-surface),
    'container-border': var(--border-2) solid var(--color-border),
    'container-shadow': var(--shadow-sm),
    'container-radius': var(--radius-lg),
    'header-bg': var(--color-surface-elevated),
    'header-border': var(--border-2) solid var(--color-border),
    'row-hover': var(--color-surface-elevated),
    'row-selected': var(--color-primary-light)
  ),
  'striped': (
    'container-bg': var(--color-surface),
    'container-border': var(--border-1) solid var(--color-border),
    'container-shadow': var(--shadow-sm),
    'container-radius': var(--radius-lg),
    'header-bg': var(--color-surface-elevated),
    'header-border': var(--border-1) solid var(--color-border),
    'row-hover': var(--color-surface-elevated),
    'row-selected': var(--color-primary-light),
    'row-striped': color-mix(in srgb, var(--color-surface-elevated) 30%, transparent)
  ),
  'bordered': (
    'container-bg': var(--color-surface),
    'container-border': var(--border-1) solid var(--color-border),
    'container-shadow': var(--shadow-md),
    'container-radius': var(--radius-lg),
    'header-bg': var(--color-surface-elevated),
    'header-border': var(--border-1) solid var(--color-border),
    'row-hover': var(--color-surface-elevated),
    'row-selected': var(--color-primary-light),
    'cell-border': var(--border-1) solid color-mix(in srgb, var(--color-border) 50%, transparent)
  ),
  'professional': (
    'container-bg': var(--color-surface),
    'container-border': var(--border-1) solid color-mix(in srgb, var(--color-primary) 10%, transparent),
    'container-shadow': var(--shadow-xl),
    'container-radius': var(--radius-xl),
    'header-bg': linear-gradient(135deg, var(--color-surface-elevated), color-mix(in srgb, var(--color-primary) 5%, transparent)),
    'header-border': var(--border-1) solid color-mix(in srgb, var(--color-primary) 20%, transparent),
    'row-hover': var(--color-surface-elevated),
    'row-selected': var(--color-primary-light),
    'transform-hover': translateY(calc(var(--space-1) * -0.25))
  )
);

// Generate variant classes - extend container, don't redefine
@each $variant, $props in $table-variants {
  .r-table-container.variant-#{$variant} {
    background: map.get($props, 'container-bg');
    border: map.get($props, 'container-border');
    box-shadow: map.get($props, 'container-shadow');
    border-radius: map.get($props, 'container-radius');
    
    @if map.has-key($props, 'backdrop-filter') {
      backdrop-filter: map.get($props, 'backdrop-filter');
    }
    
    .r-table-header-cell {
      background: map.get($props, 'header-bg');
      border-bottom: map.get($props, 'header-border');
    }
    
    tbody tr {
      &:hover {
        background: map.get($props, 'row-hover');
        
        @if map.has-key($props, 'transform-hover') {
          transform: map.get($props, 'transform-hover');
          box-shadow: var(--shadow-md);
        }
      }
      
      &.r-table-row-selected-enhanced {
        background: map.get($props, 'row-selected');
        border-left: var(--border-3) solid var(--color-primary);
      }
      
      @if map.has-key($props, 'row-striped') {
        &:nth-child(even) {
          background: map.get($props, 'row-striped');
        }
      }
    }
    
    @if map.has-key($props, 'cell-border') {
      .r-table-cell {
        border-right: map.get($props, 'cell-border');
        
        &:last-child {
          border-right: none;
        }
      }
    }
  }
}