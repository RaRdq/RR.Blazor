@use '../../abstracts' as *;
@use 'sass:map';


$table-densities: (
  'ultra-compact': (
    'header-padding': var(--space-1) var(--space-2),
    'cell-padding': var(--space-1) var(--space-2),
    'font-size': var(--text-xs),
    'row-height': 32px,
    'line-height': 1.2,
    'icon-size': 14px,
    'avatar-size': 20px,
    'badge-scale': 0.8,
    'action-btn-size': 24px,
    'action-gap': var(--space-1)
  ),
  'compact': (
    'header-padding': var(--space-2) var(--space-3),
    'cell-padding': var(--space-1-5) var(--space-2-5),
    'font-size': var(--text-xs),
    'row-height': 36px,
    'line-height': 1.2,
    'icon-size': 16px,
    'avatar-size': 24px,
    'badge-scale': 0.85,
    'action-btn-size': 28px,
    'action-gap': var(--space-1)
  ),
  'dense': (
    'header-padding': var(--space-3) var(--space-4),
    'cell-padding': var(--space-2) var(--space-3),
    'font-size': var(--text-sm),
    'row-height': 42px,
    'line-height': 1.3,
    'icon-size': 18px,
    'avatar-size': 32px,
    'badge-scale': 0.9,
    'action-btn-size': 32px,
    'action-gap': var(--space-1-5)
  ),
  'normal': (
    'header-padding': var(--space-4) var(--space-4),
    'cell-padding': var(--space-3) var(--space-4),
    'font-size': var(--text-sm),
    'row-height': 48px,
    'line-height': 1.5,
    'icon-size': 20px,
    'avatar-size': 40px,
    'badge-scale': 1,
    'action-btn-size': 36px,
    'action-gap': var(--space-2)
  ),
  'comfortable': (
    'header-padding': var(--space-4) var(--space-5),
    'cell-padding': calc(var(--space-3) + var(--space-1)) var(--space-4),
    'font-size': var(--text-sm),
    'row-height': 52px,
    'line-height': 1.5,
    'icon-size': 20px,
    'avatar-size': 44px,
    'badge-scale': 1,
    'action-btn-size': 38px,
    'action-gap': var(--space-2)
  ),
  'spacious': (
    'header-padding': var(--space-5) var(--space-6),
    'cell-padding': var(--space-4) var(--space-5),
    'font-size': var(--text-base),
    'row-height': 56px,
    'line-height': 1.6,
    'icon-size': 24px,
    'avatar-size': 48px,
    'badge-scale': 1.1,
    'action-btn-size': 40px,
    'action-gap': var(--space-3)
  ),
  'extra-spacious': (
    'header-padding': var(--space-6) var(--space-8),
    'cell-padding': var(--space-5) var(--space-6),
    'font-size': var(--text-base),
    'row-height': 64px,
    'line-height': 1.6,
    'icon-size': 28px,
    'avatar-size': 56px,
    'badge-scale': 1.2,
    'action-btn-size': 44px,
    'action-gap': var(--space-4)
  )
);

@each $density, $props in $table-densities {
  .r-table-#{$density} {
      font-size: map.get($props, 'font-size');
      
      .r-table-header-cell {
        padding: map.get($props, 'header-padding');
        line-height: map.get($props, 'line-height');
        height: map.get($props, 'row-height');
        font-weight: var(--font-semibold);
        font-size: var(--text-sm);
        letter-spacing: 0.025em;
        color: var(--color-text);
      }
      
      tr {
        height: map.get($props, 'row-height');
        transition: var(--transition-colors);
      }
      
      .r-table-cell {
        padding: map.get($props, 'cell-padding');
        line-height: map.get($props, 'line-height');
        vertical-align: middle;
        border-bottom: 1px solid color-mix(in srgb, var(--color-border) 5%, transparent);
        transition: var(--transition-colors);
        
        // Smart component sizing
        @include icon-context-table;
        
        .material-symbols-rounded,
        i {
          font-size: map.get($props, 'icon-size');
          width: map.get($props, 'icon-size');
          height: map.get($props, 'icon-size');
          transition: var(--transition-transform);
        }
        
        .r-avatar {
          width: map.get($props, 'avatar-size');
          height: map.get($props, 'avatar-size');
          font-size: calc(#{map.get($props, 'avatar-size')} * 0.4);
          transition: var(--transition-transform);
        }
        
        .r-badge, .badge {
          transform: scale(#{map.get($props, 'badge-scale')});
          transform-origin: center left;
          transition: var(--transition-transform);
        }
      }
      
      // Action buttons layout
      .r-table-column-actions,
      .r-table-actions-container {
        gap: map.get($props, 'action-gap');
        display: flex;
        align-items: center;
        justify-content: flex-end;
        
        .r-button,
        .btn {
          height: map.get($props, 'action-btn-size');
          min-width: map.get($props, 'action-btn-size');
          padding: 0 var(--space-2);
          transition: var(--transition-transform);
          
          &:hover:not(:disabled) {
            transform: translateY(-1px);
            box-shadow: var(--shadow-md);
          }
        }
      }
    }
  }

// Utility classes for quick density overrides
@each $density, $props in $table-densities {
  .r-table-#{$density} {
    .r-table-header-cell {
      padding: map.get($props, 'header-padding');
      height: map.get($props, 'row-height');
    }
    
    .r-table-cell {
      padding: map.get($props, 'cell-padding');
      height: map.get($props, 'row-height');
    }
  }
}
