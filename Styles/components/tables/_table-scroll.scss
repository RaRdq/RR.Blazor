@use '../../abstracts' as *;
@use 'table-mixins' as mixins;

.table-content {
  &-scroll-container-x {
    &-scrollbar-custom {
      scrollbar-width: thin;
      scrollbar-color: var(--border) var(--surface-elevated);

      &::-webkit-scrollbar {
        height: 12px;
        width: 12px;
      }

      &::-webkit-scrollbar-track {
        background: var(--surface-elevated);
        border-radius: var(--radius-sm);
        border: 1px solid var(--border);
      }

      &::-webkit-scrollbar-thumb {
        background: var(--border);
        border-radius: var(--radius-sm);
        border: 2px solid var(--surface-elevated);

        &:hover {
          background: var(--primary);
        }

        &:active {
          background: var(--primary-active);
        }
      }

      &::-webkit-scrollbar-corner {
        background: var(--surface-elevated);
      }
    }

    @media (max-width: 768px) {
      -webkit-overflow-scrolling: touch;
      scroll-behavior: smooth;
      overscroll-behavior-x: contain;
      @include mixins.scroll-shadow-indicator(horizontal);

      &-scrollbar-custom {
        &::-webkit-scrollbar {
          height: 8px;
        }

        &::-webkit-scrollbar-thumb {
          background: var(--primary);
          border: 1px solid var(--surface-elevated);
        }
      }
    }
  }
}

.table-container {
  .rr-portal.choice-portal {
    z-index: calc(var(--z-popup) + 50) !important;
    position: fixed !important;

    .choice-viewport {
      box-shadow: var(--shadow-xl);
      border-radius: var(--radius-md);
      background: var(--surface-elevated);
      border: 1px solid var(--color-border-light);
      min-width: 180px;
      max-height: 400px;
      overflow-y: auto;
    }
  }
}

.table-container {
  @media (max-width: 768px) {
    .rr-portal.choice-portal {
      .choice-viewport {
        max-height: 60vh;
        overflow-y: auto;
        box-shadow: var(--shadow-xl);
        border-radius: var(--radius-md);
        background: var(--surface-elevated);
        border: 1px solid var(--color-border-light);
        min-width: 200px;

        .choice-content {
          padding: var(--space-2);

          .choice-item {
            padding: var(--space-3) var(--space-4);
            font-size: var(--text-sm);
            min-height: var(--touch-target-min);

            &:hover {
              background: var(--surface-hover);
            }
          }
        }
      }
    }
  }
}

.table-container {
  @media (min-width: 641px) and (max-width: 1024px) {
    .rr-portal.choice-portal {
      .choice-viewport {
        min-width: 200px;
        max-height: 50vh;

        .choice-content {
          .choice-item {
            padding: var(--space-2-5) var(--space-3);
          }
        }
      }
    }
  }
}

// Support for data attribute-based styling (replaces inline styles)
.table-scroll-container {
  // Dynamic height support via data attributes
  &[data-height] {
    height: var(--scroll-height);
  }
  
  &[data-max-height] {
    max-height: var(--scroll-max-height);
  }
}

// Table cell width support via data attributes  
.table-header-cell, .table-cell, .virtual-table-cell {
  &[data-width] {
    width: var(--cell-width);
  }
  
  &[data-min-width] {
    min-width: var(--cell-min-width);
  }
  
  &[data-max-width] {
    max-width: var(--cell-max-width);
  }
}

// Chart container height support
.area-chart-container, .column-chart-container {
  &[data-height] {
    height: var(--chart-height);
  }
}

// Virtual components height support
.virtual-table-viewport {
  &[data-height] {
    height: var(--viewport-height);
  }
}

.rvirtual-scroll {
  &[data-height] {
    height: var(--container-height);
  }
}
