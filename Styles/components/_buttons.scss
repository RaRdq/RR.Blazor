@use '../abstracts' as *;
.button {
  @include button-base;
  
  &-primary {
    background: var(--gradient-primary);
    color: var(--color-surface);
    border: transparent;
    box-shadow: var(--shadow-md);
    transition: filter var(--duration-fast) var(--ease-out);
    
    &:hover {
      filter: brightness(0.9) saturate(1.1) contrast(1.05);
    }
    
    @include interactive-button(scale(1.01), scale(0.99), var(--shadow-lg), var(--shadow-sm));
  }
  
  &-secondary {
    @include button-variant(
      var(--color-surface-elevated),
      var(--color-text),
      var(--color-border),
      var(--color-surface)
    );
    box-shadow: var(--shadow-sm);
    
    @include interactive-card(var(--shadow-md), var(--shadow-sm), translateY(-1px));
  }
  
  &-outline {
    @include button-variant(
      transparent,
      var(--color-primary),
      var(--color-primary),
      var(--color-primary)
    );
    
    @include interactive-button(scale(1.01), scale(0.99), var(--shadow-md), var(--shadow-sm));
  }
  
  &-ghost {
    @include button-variant(
      transparent,
      var(--color-text),
      transparent,
      var(--color-surface-elevated)
    );
    
    @include interactive-card(var(--shadow-sm), none, translateY(-1px));
  }
  
  &-glass {
    @include glass-morphism(light);
    color: var(--color-text);
    transition: filter var(--duration-fast) var(--ease-out);
    
    &:hover {
      filter: brightness(1.1) saturate(1.2) contrast(1.03);
    }
    
    @include interactive-button(scale(1.01), scale(0.99), none, none);
  }
  
  
  &-danger {
    background: var(--gradient-error);
    color: var(--color-surface);
    border: transparent;
    box-shadow: var(--shadow-md);
    transition: filter var(--duration-fast) var(--ease-out);
    
    &:hover {
      filter: brightness(0.9);
    }
  }
  
  &-success {
    background: var(--gradient-success);
    color: var(--color-surface);
    border: transparent;
    box-shadow: var(--shadow-md);
    transition: filter var(--duration-fast) var(--ease-out);
    
    &:hover {
      filter: brightness(0.9);
    }
  }
  
  &-warning {
    background: var(--gradient-warning);
    color: var(--color-surface);
    border: transparent;
    box-shadow: var(--shadow-md);
    transition: filter var(--duration-fast) var(--ease-out);
    
    &:hover {
      filter: brightness(0.9);
    }
  }
  
  &-info {
    background: var(--gradient-info);
    color: var(--color-surface);
    border: transparent;
    box-shadow: var(--shadow-md);
    transition: filter var(--duration-fast) var(--ease-out);
    
    &:hover {
      filter: brightness(0.9);
    }
  }
  
  
  &-sm,
  &-small {
    @include button-size(
      var(--space-2),
      var(--space-3),
      var(--text-sm),
      2.75rem,
      2.75rem,
      var(--space-1)
    );
  }
  
  &-lg,
  &-large {
    @include button-size(
      var(--space-4),
      var(--space-6),
      var(--text-lg),
      3.25rem,
      3.25rem,
      var(--space-3)
    );
  }
  
  
  &-icon {
    min-width: 2.75rem;
    min-height: 2.75rem;
    gap: 0;
    
    @include responsive-min(md) {
      min-width: 2.5rem;
      min-height: 2.5rem;
    }
    
    &.button-sm {
      min-width: 2.75rem;
      min-height: 2.75rem;
      
      @include responsive-min(md) {
        min-width: 2.75rem;
        min-height: 2.75rem;
      }
    }
    
    &.button-lg {
      min-width: 3.25rem;
      min-height: 3.25rem;
      
      @include responsive-min(md) {
        min-width: 3rem;
        min-height: 3rem;
      }
    }
  }
  
  // Extra small button size
  &-xs {
    @include button-size(
      var(--space-1),
      var(--space-2),
      var(--text-xs),
      1.5rem,
      1.5rem,
      var(--space-1)
    );
  }
  
  // Extra large button size
  &-xl {
    @include button-size(
      var(--space-8),
      var(--space-10),
      var(--text-xl),
      5rem,
      5rem,
      var(--space-4)
    );
  }
  
  // Density modifiers
  &-compact {
    &.button-xs {
      padding: var(--space-1) var(--space-2);
      min-height: 1.25rem;
      font-size: var(--text-xs);
    }
    
    &.button-sm {
      padding: var(--space-2) var(--space-3);
      min-height: 1.5rem;
      font-size: var(--text-xs);
    }
    
    &:not(.button-xs):not(.button-sm):not(.button-lg):not(.button-xl) {
      padding: var(--space-3) var(--space-4);
      min-height: 2rem;
      font-size: var(--text-sm);
    }
    
    &.button-lg {
      padding: var(--space-4) var(--space-5);
      min-height: 2.5rem;
      font-size: var(--text-base);
    }
    
    &.button-xl {
      padding: var(--space-6) var(--space-7);
      min-height: 3.5rem;
      font-size: var(--text-lg);
    }
  }
  
  &-dense {
    &.button-xs {
      padding: var(--space-1) var(--space-2);
      min-height: 1.25rem;
      font-size: var(--text-xs);
    }
    
    &.button-sm {
      padding: var(--space-2) var(--space-3);
      min-height: 1.75rem;
      font-size: var(--text-sm);
    }
    
    &:not(.button-xs):not(.button-sm):not(.button-lg):not(.button-xl) {
      padding: var(--space-3) var(--space-4);
      min-height: 2.25rem;
      font-size: var(--text-base);
    }
    
    &.button-lg {
      padding: var(--space-5) var(--space-6);
      min-height: 2.75rem;
      font-size: var(--text-lg);
    }
    
    &.button-xl {
      padding: var(--space-7) var(--space-8);
      min-height: 4.5rem;
      font-size: var(--text-xl);
    }
  }
  
  &-spacious {
    &.button-xs {
      padding: var(--space-3) var(--space-4);
      min-height: 2rem;
      font-size: var(--text-xs);
    }
    
    &.button-sm {
      padding: var(--space-4) var(--space-5);
      min-height: 2.5rem;
      font-size: var(--text-sm);
    }
    
    &:not(.button-xs):not(.button-sm):not(.button-lg):not(.button-xl) {
      padding: var(--space-6) var(--space-8);
      min-height: 3rem;
      font-size: var(--text-base);
    }
    
    &.button-lg {
      padding: var(--space-8) var(--space-10);
      min-height: 4rem;
      font-size: var(--text-lg);
    }
    
    &.button-xl {
      padding: var(--space-10) var(--space-12);
      min-height: 6rem;
      font-size: var(--text-xl);
    }
  }
  
  // Gap adjustments
  &-gap-compact {
    gap: var(--space-1);
  }
  
  &-gap-dense {
    gap: var(--space-1);
  }
  
  &-gap-normal {
    gap: var(--space-2);
  }
  
  &-gap-spacious {
    gap: var(--space-3);
  }
  
  // State classes
  &-disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }
  
  &-no-radius {
    border-radius: 0;
  }
  
  &-no-shadow {
    box-shadow: none;
    
    &:hover {
      box-shadow: none;
    }
  }
  

  
  // Vertical layout for top/bottom icons
  &-vertical {
    flex-direction: column;
    min-height: 3rem;
    
    @include responsive-min(md) {
      min-height: 2.75rem;
    }
  }
  
  // Text styling
  &-text {
    // Inherits from button variant
  }
  
  &-full {
    width: 100%;
  }
  
  &-loading {
    @include button-loading;
  }
  
  
  &-progress {
    @include button-progress;
  }
  
  
  &-tooltip {
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    margin-bottom: var(--space-2);
    padding: var(--space-1) var(--space-2);
    background: var(--color-surface-elevated);
    color: var(--color-text);
    font-size: var(--text-xs);
    border-radius: var(--radius-md);
    white-space: nowrap;
    opacity: 0;
    pointer-events: none;
    transition: opacity var(--duration-fast) var(--ease-out);
    z-index: var(--z-tooltip);
    box-shadow: var(--shadow-lg);
  }
  
  &-fab {
    border-radius: var(--radius-full);
    width: 3.5rem;
    height: 3.5rem;
    padding: 0;
    box-shadow: var(--shadow-md);
    
    &:hover {
      box-shadow: var(--shadow-lg);
    }
  }

  // New Sexy Variants
  &-gradient {
    background: var(--gradient-primary);
    color: var(--color-surface);
    border: transparent;
    box-shadow: var(--shadow-lg);
    position: relative;
    overflow: hidden;
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.2),
        transparent
      );
      transition: left var(--duration-slow) var(--ease-out);
    }
    
    &:hover::before {
      left: 100%;
    }
    
    @include interactive-button(scale(1.02), scale(0.98), var(--shadow-xl), var(--shadow-md));
  }

  &-neon {
    background: var(--color-surface);
    color: var(--color-primary);
    border: 2px solid var(--color-primary);
    position: relative;
    transition: all var(--duration-normal) var(--ease-out);
    
    &:hover {
      background: var(--color-primary);
      color: var(--color-surface);
      box-shadow: 0 0 20px var(--color-primary),
                  0 0 40px var(--color-primary),
                  var(--shadow-xl);
      text-shadow: 0 0 8px rgba(255, 255, 255, 0.8);
    }
    
    @include interactive-button(scale(1.01), scale(0.99), none, none);
  }

  &-neumorphism {
    background: var(--color-surface-elevated);
    color: var(--color-text);
    border: none;
    box-shadow: 8px 8px 16px rgba(163, 177, 198, 0.6),
                -8px -8px 16px rgba(255, 255, 255, 0.8);
    transition: all var(--duration-normal) var(--ease-out);
    
    &:hover {
      box-shadow: 4px 4px 8px rgba(163, 177, 198, 0.4),
                  -4px -4px 8px rgba(255, 255, 255, 0.6);
    }
    
    &:active {
      box-shadow: inset 4px 4px 8px rgba(163, 177, 198, 0.4),
                  inset -4px -4px 8px rgba(255, 255, 255, 0.6);
    }
  }

  &-shimmer {
    background: var(--gradient-neutral);
    color: var(--color-text);
    border: 1px solid var(--color-border);
    position: relative;
    overflow: hidden;
    
    &::before {
      content: '';
      position: absolute;
      top: -2px;
      left: -100%;
      width: 100%;
      height: calc(100% + 4px);
      background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.6),
        transparent
      );
      animation: shimmer 2s infinite;
    }
    
    @keyframes shimmer {
      0% { left: -100%; }
      100% { left: 100%; }
    }
    
    @include interactive-card(var(--shadow-md), var(--shadow-sm), translateY(-1px));
  }

  &-enterprise {
    background: linear-gradient(145deg, var(--color-surface) 0%, var(--color-surface-elevated) 100%);
    color: var(--color-text);
    border: 1px solid var(--color-border);
    box-shadow: var(--shadow-sm);
    font-weight: 600;
    letter-spacing: 0.025em;
    
    &:hover {
      background: linear-gradient(145deg, var(--color-surface-elevated) 0%, var(--color-surface) 100%);
      box-shadow: var(--shadow-md);
      transform: translateY(-1px);
    }
    
    &:active {
      transform: translateY(0);
      box-shadow: var(--shadow-sm);
    }
  }

  // Consolidated icon colors for variants with inverse text
  &-primary,
  &-danger,
  &-success,
  &-warning,
  &-info {
    .material-symbols-rounded {
      color: var(--color-surface);
    }
  }

  // Button Group
  &-group {
    display: inline-flex;
    border-radius: var(--radius-lg);
    overflow: hidden;
    box-shadow: var(--shadow-sm);
    
    > .button {
      border-radius: 0;
      border-right: var(--border-1) solid var(--color-border);
      
      &:first-child {
        border-top-left-radius: var(--radius-lg);
        border-bottom-left-radius: var(--radius-lg);
      }
      
      &:last-child {
        border-top-right-radius: var(--radius-lg);
        border-bottom-right-radius: var(--radius-lg);
        border-right: none;
      }
      
      &:hover {
        transform: none; // Disable individual button transforms in groups
        z-index: 1;
      }
    }
    
    &-vertical {
      flex-direction: column;
      
      > .button {
        border-right: none;
        border-bottom: var(--border-1) solid var(--color-border);
        
        &:first-child {
          border-radius: var(--radius-lg) var(--radius-lg) 0 0;
        }
        
        &:last-child {
          border-radius: 0 0 var(--radius-lg) var(--radius-lg);
          border-bottom: none;
        }
      }
    }
  }

  &-badge {
    // Override badge base with button-specific styling
    position: absolute;
    top: -6px;
    right: -6px;
    z-index: var(--z-badge, 10);
    
    // Core badge styling optimized for buttons
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: var(--space-4-5);
    height: var(--space-4-5);
    padding: 2px 6px;
    
    // Appearance
    background: var(--color-error);
    color: var(--color-surface);
    border: 1px solid var(--color-error);
    border-radius: var(--radius-full);
    box-shadow: 0 0 0 2px var(--color-canvas);
    
    // Typography
    font-size: var(--text-2xs);
    font-weight: var(--font-semibold);
    line-height: 1;
    white-space: nowrap;
    text-align: center;
    
    // Behavior
    pointer-events: none;
    transition: none; // Disable animations on badges for performance
    
    // Enhanced mobile positioning and sizing
    @include responsive-max(md) {
      top: -8px;
      right: -8px;
      min-width: var(--space-5);
      height: var(--space-5);
      font-size: var(--text-xs);
      padding: 3px 7px;
      box-shadow: 0 0 0 2px var(--color-canvas), 
                  var(--shadow-sm);
    }
    
    // Small button adjustments
    .button-sm & {
      top: -4px;
      right: -4px;
      min-width: 16px;
      height: 16px;
      font-size: var(--text-3xs);
      padding: 1px 4px;
      
      @include responsive-max(md) {
        top: -6px;
        right: -6px;
        min-width: 18px;
        height: 18px;
        font-size: var(--text-2xs);
        padding: 2px 5px;
      }
    }
    
    // Large button adjustments
    .button-lg & {
      top: -8px;
      right: -8px;
      min-width: 20px;
      height: 20px;
      font-size: var(--text-xs);
      padding: 3px 7px;
      
      @include responsive-max(md) {
        top: -10px;
        right: -10px;
        min-width: 22px;
        height: 22px;
        font-size: var(--text-sm);
        padding: 4px 8px;
      }
    }
    
    // Extra small button adjustments
    .button-xs & {
      top: -3px;
      right: -3px;
      min-width: 14px;
      height: 14px;
      font-size: var(--text-3xs);
      padding: 1px 3px;
      
      @include responsive-max(md) {
        top: -4px;
        right: -4px;
        min-width: 16px;
        height: 16px;
      }
    }
    
    // Extra large button adjustments
    .button-xl & {
      top: -10px;
      right: -10px;
      min-width: 24px;
      height: 24px;
      font-size: var(--text-sm);
      padding: 4px 8px;
      
      @include responsive-max(md) {
        top: -12px;
        right: -12px;
        min-width: 26px;
        height: 26px;
        font-size: var(--text-base);
        padding: 5px 9px;
      }
    }
  }

  // Ensure button has relative positioning for badge
  &:has(.button-badge),
  &[data-has-badge="true"] {
    position: relative;
  }
  
  // Fallback for browsers that don't support :has()
  &.button-with-badge {
    position: relative;
  }
  
  // Button badge styling
  .button-badge {
    position: absolute;
    top: -6px;
    right: -6px;
    min-width: 1.125rem;
    height: 1.125rem;
    padding: 0 0.25rem;
    background: var(--color-error);
    color: var(--color-text-on-error);
    font-size: 0.625rem;
    font-weight: var(--font-semibold);
    line-height: 1;
    border-radius: var(--radius-full);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: var(--z-above);
    border: 2px solid var(--color-surface-elevated);
    animation: badgePulse var(--duration-slow) var(--ease-out) infinite;
    
    // Ensure proper centering for single digits
    &:only-child {
      width: 1.125rem;
    }
  }
}

// Icon positioning classes for buttons
.button-icon-start {
  margin-right: var(--space-2);
}

.button-icon-end {  
  margin-left: var(--space-2);
}

.button-icon-top {
  margin-bottom: var(--space-1);
}

.button-icon-bottom {
  margin-top: var(--space-1);
}

