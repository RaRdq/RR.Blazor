@use '../abstracts' as *;
.button {
  @include button-base;
  
  &-primary {
    @include button-variant(
      var(--color-interactive-primary),
      var(--color-text-inverse),
      transparent,
      var(--color-interactive-hover),
      var(--color-interactive-active)
    );
    box-shadow: var(--theme-shadow-md);
    
    @include transform-interaction(
      scale(1.01),
      scale(0.99),
      var(--theme-shadow-lg),
      var(--theme-shadow-sm),
      var(--color-interactive-hover),
      var(--color-interactive-active)
    );
  }
  
  &-secondary {
    @include button-variant(
      var(--color-background-elevated),
      var(--color-text-primary),
      var(--color-border-medium),
      var(--state-hover-bg)
    );
    box-shadow: var(--theme-shadow-sm);
    
    @include transform-interaction(
      translateY(-1px),
      translateY(0),
      var(--theme-shadow-md),
      var(--theme-shadow-sm),
      var(--state-hover-bg),
      var(--color-background-pressed)
    );
  }
  
  &-outline {
    @include button-variant(
      transparent,
      var(--color-interactive-primary),
      var(--color-interactive-primary),
      var(--color-interactive-primary)
    );
    
    @include transform-interaction(
      scale(1.01),
      scale(0.99),
      var(--theme-shadow-md),
      var(--theme-shadow-sm),
      var(--color-interactive-primary),
      var(--color-interactive-active)
    );
  }
  
  &-ghost {
    @include button-variant(
      transparent,
      var(--color-text-primary),
      transparent,
      var(--state-hover-bg)
    );
    
    @include transform-interaction(
      translateY(-1px),
      translateY(0),
      var(--theme-shadow-sm),
      none,
      var(--state-hover-bg),
      var(--color-background-pressed)
    );
  }
  
  &-glass {
    @include glass-morphism(light);
    color: var(--color-text-primary);
    
    @include transform-interaction(
      scale(1.01),
      scale(0.99),
      none,
      none,
      var(--color-background-secondary),
      var(--color-background-pressed)
    );
  }
  
  
  &-danger {
    @include button-variant-with-states(error);
  }
  
  &-success {
    @include button-variant-with-states(success);
  }
  
  &-warning {
    @include button-variant-with-states(warning);
  }
  
  &-info {
    @include button-variant-with-states(info);
  }
  
  &-sm,
  &-small {
    @include button-size(
      var(--space-2),
      var(--space-3),
      var(--text-sm),
      2.75rem,
      2.75rem,
      var(--space-1)
    );
  }
  
  &-lg,
  &-large {
    @include button-size(
      var(--space-4),
      var(--space-6),
      var(--text-lg),
      3.25rem,
      3.25rem,
      var(--space-3)
    );
  }
  
  
  &-icon {
    padding: var(--space-3);
    min-width: 2.75rem;
    min-height: 2.75rem;
    gap: 0;
    
    @include responsive-min(md) {
      padding: var(--space-2);
      min-width: 2.5rem;
      min-height: 2.5rem;
    }
    
    &.button-sm {
      padding: var(--space-2);
      min-width: 2.75rem;
      min-height: 2.75rem;
      
      @include responsive-min(md) {
        padding: var(--space-1);
        min-width: 2.75rem;
        min-height: 2.75rem;
      }
    }
    
    &.button-lg {
      padding: var(--space-4);
      min-width: 3.25rem;
      min-height: 3.25rem;
      
      @include responsive-min(md) {
        padding: var(--space-3);
        min-width: 3rem;
        min-height: 3rem;
      }
    }
  }
  
  // Extra small button size
  &-xs {
    @include button-size(
      var(--space-1),
      var(--space-2),
      var(--text-xs),
      1.5rem,
      1.5rem,
      var(--space-1)
    );
  }
  
  // Extra large button size
  &-xl {
    @include button-size(
      var(--space-8),
      var(--space-10),
      var(--text-xl),
      5rem,
      5rem,
      var(--space-4)
    );
  }
  
  // Density modifiers
  &-compact {
    &.button-xs {
      padding: var(--space-1) var(--space-2);
      min-height: 1.25rem;
      font-size: var(--text-xs);
    }
    
    &.button-sm {
      padding: var(--space-2) var(--space-3);
      min-height: 1.5rem;
      font-size: var(--text-xs);
    }
    
    &:not(.button-xs):not(.button-sm):not(.button-lg):not(.button-xl) {
      padding: var(--space-3) var(--space-4);
      min-height: 2rem;
      font-size: var(--text-sm);
    }
    
    &.button-lg {
      padding: var(--space-4) var(--space-5);
      min-height: 2.5rem;
      font-size: var(--text-base);
    }
    
    &.button-xl {
      padding: var(--space-6) var(--space-7);
      min-height: 3.5rem;
      font-size: var(--text-lg);
    }
  }
  
  &-dense {
    &.button-xs {
      padding: var(--space-1) var(--space-2);
      min-height: 1.25rem;
      font-size: var(--text-xs);
    }
    
    &.button-sm {
      padding: var(--space-2) var(--space-3);
      min-height: 1.75rem;
      font-size: var(--text-sm);
    }
    
    &:not(.button-xs):not(.button-sm):not(.button-lg):not(.button-xl) {
      padding: var(--space-3) var(--space-4);
      min-height: 2.25rem;
      font-size: var(--text-base);
    }
    
    &.button-lg {
      padding: var(--space-5) var(--space-6);
      min-height: 2.75rem;
      font-size: var(--text-lg);
    }
    
    &.button-xl {
      padding: var(--space-7) var(--space-8);
      min-height: 4.5rem;
      font-size: var(--text-xl);
    }
  }
  
  &-spacious {
    &.button-xs {
      padding: var(--space-3) var(--space-4);
      min-height: 2rem;
      font-size: var(--text-xs);
    }
    
    &.button-sm {
      padding: var(--space-4) var(--space-5);
      min-height: 2.5rem;
      font-size: var(--text-sm);
    }
    
    &:not(.button-xs):not(.button-sm):not(.button-lg):not(.button-xl) {
      padding: var(--space-6) var(--space-8);
      min-height: 3rem;
      font-size: var(--text-base);
    }
    
    &.button-lg {
      padding: var(--space-8) var(--space-10);
      min-height: 4rem;
      font-size: var(--text-lg);
    }
    
    &.button-xl {
      padding: var(--space-10) var(--space-12);
      min-height: 6rem;
      font-size: var(--text-xl);
    }
  }
  
  // Gap adjustments
  &-gap-compact {
    gap: var(--space-1);
  }
  
  &-gap-dense {
    gap: var(--space-1);
  }
  
  &-gap-normal {
    gap: var(--space-2);
  }
  
  &-gap-spacious {
    gap: var(--space-3);
  }
  
  // State classes
  &-disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }
  
  &-no-radius {
    border-radius: 0;
  }
  
  &-no-shadow {
    box-shadow: none;
    
    &:hover {
      box-shadow: none;
    }
  }
  
  // Icon positioning
  &-icon {
    &-start {
      margin-right: var(--space-2);
    }
    
    &-end {
      margin-left: var(--space-2);
    }
    
    &-top {
      margin-bottom: var(--space-2);
    }
    
    &-bottom {
      margin-top: var(--space-2);
    }
  }
  
  // Text styling
  &-text {
    // Inherits from button variant
  }
  
  &-full {
    width: 100%;
  }
  
  &-loading {
    @include button-loading;
  }
  
  
  &-progress {
    @include button-progress;
  }
  
  
  &-tooltip {
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    margin-bottom: var(--space-2);
    padding: var(--space-1) var(--space-2);
    background: var(--color-background-elevated);
    color: var(--color-text-primary);
    font-size: var(--text-xs);
    border-radius: var(--radius-md);
    white-space: nowrap;
    opacity: 0;
    pointer-events: none;
    transition: opacity var(--duration-fast) var(--ease-out);
    z-index: var(--z-tooltip);
    box-shadow: var(--theme-shadow-lg);
  }
  
  &-fab {
    border-radius: var(--radius-full);
    width: 3.5rem;
    height: 3.5rem;
    padding: 0;
    box-shadow: var(--theme-shadow-md);
    
    &:hover {
      box-shadow: var(--theme-shadow-lg);
    }
  }
  
  // Consolidated icon colors for variants with inverse text
  &-primary,
  &-danger,
  &-success,
  &-warning,
  &-info {
    .material-symbols-rounded {
      color: var(--color-text-inverse);
    }
  }

  // Button Group
  &-group {
    display: inline-flex;
    border-radius: var(--radius-lg);
    overflow: hidden;
    box-shadow: var(--theme-shadow-sm);
    
    > .button {
      border-radius: 0;
      border-right: var(--border-1) solid var(--color-border-light);
      
      &:first-child {
        border-top-left-radius: var(--radius-lg);
        border-bottom-left-radius: var(--radius-lg);
      }
      
      &:last-child {
        border-top-right-radius: var(--radius-lg);
        border-bottom-right-radius: var(--radius-lg);
        border-right: none;
      }
      
      &:hover {
        transform: none; // Disable individual button transforms in groups
        z-index: 1;
      }
    }
    
    &-vertical {
      flex-direction: column;
      
      > .button {
        border-right: none;
        border-bottom: var(--border-1) solid var(--color-border-light);
        
        &:first-child {
          border-radius: var(--radius-lg) var(--radius-lg) 0 0;
        }
        
        &:last-child {
          border-radius: 0 0 var(--radius-lg) var(--radius-lg);
          border-bottom: none;
        }
      }
    }
  }

  &-badge {
    @extend %badge-base;
    
    // Button-specific styling
    background: var(--color-error);
    border-color: var(--color-error);
    color: var(--color-text-inverse);
    box-shadow: 0 0 0 2px var(--color-background-primary);
    pointer-events: none;
    font-weight: var(--font-semibold);
    line-height: 1;
    
    // Improved positioning for notification badges
    position: absolute;
    top: -6px;
    right: -6px;
    z-index: var(--z-badge, 10);
    min-width: 18px;
    height: 18px;
    font-size: var(--text-2xs);
    padding: 2px 6px;
    border-radius: var(--radius-full);
    display: flex;
    align-items: center;
    justify-content: center;
    
    // Enhanced mobile positioning and sizing
    @include responsive-max(md) {
      top: -8px;
      right: -8px;
      min-width: 20px;
      height: 20px;
      font-size: var(--text-xs);
      box-shadow: 0 0 0 2px var(--color-background-primary), 
                  0 2px 4px rgba(0, 0, 0, 0.1);
    }
    
    // Small button adjustments
    .button-sm & {
      top: -4px;
      right: -4px;
      min-width: 16px;
      height: 16px;
      font-size: var(--text-3xs);
      
      @include responsive-max(md) {
        top: -6px;
        right: -6px;
        min-width: 18px;
        height: 18px;
      }
    }
    
    // Large button adjustments
    .button-lg & {
      top: -8px;
      right: -8px;
      min-width: 20px;
      height: 20px;
      
      @include responsive-max(md) {
        top: -10px;
        right: -10px;
        min-width: 22px;
        height: 22px;
        font-size: var(--text-sm);
      }
    }
  }

  // Ensure button has relative positioning for badge (if not already set)
  &:not([style*="position"]) {
    position: relative;
  }
}
