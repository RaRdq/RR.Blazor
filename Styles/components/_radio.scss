@use '../abstracts' as *;

.radio {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: var(--space-6);
  height: var(--space-6);
  cursor: pointer;

  @include modifier(disabled) {
    @include interactive-disabled();
  }

  @include element(group) {
    @extend %form-group-base;
    gap: var(--space-3);
  }

  input[type="radio"] {
    position: absolute;
    opacity: 0;
    width: 100%;
    height: 100%;
    cursor: pointer;
    z-index: 1;
    margin: 0;
    top: 0;
    left: 0;

    &:disabled {
      cursor: not-allowed;
    }

    &:checked ~ .radio-mark {
      border-color: var(--color-primary);
      background: color-mix(in srgb, var(--color-primary) 5%, var(--color-surface));

      .radio-dot {
        opacity: 1;
        transform: scale(1);
        background-color: var(--color-primary);
      }
      
      // Apply semantic variant colors when checked
      &.radio-mark-primary {
        border-color: var(--color-primary);
        .radio-dot { background-color: var(--color-primary); }
      }
      
      &.radio-mark-success {
        border-color: var(--color-success);
        .radio-dot { background-color: var(--color-success); }
      }
      
      &.radio-mark-warning {
        border-color: var(--color-warning);
        .radio-dot { background-color: var(--color-warning); }
      }
      
      &.radio-mark-error {
        border-color: var(--color-error);
        .radio-dot { background-color: var(--color-error); }
      }
      
      &.radio-mark-info {
        border-color: var(--color-info);
        .radio-dot { background-color: var(--color-info); }
      }
    }

    &:focus-visible ~ .radio-mark {
      @include interactive-focus-ring();
    }
  }

  @include element(mark) {
    @extend %icon-base;
    width: var(--space-5);
    height: var(--space-5);
    border: 2px solid var(--color-border-strong);
    border-radius: 50%;
    background: var(--color-surface);
    flex-shrink: 0;
    transition: all var(--duration-normal) var(--ease-out);
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;

    // Size variants using density system
    @include modifier(small) {
      width: var(--space-4);
      height: var(--space-4);
    }

    @include modifier(medium) {
      width: var(--space-5);
      height: var(--space-5);
    }

    @include modifier(large) {
      width: var(--space-6);
      height: var(--space-6);
    }
    
    // Semantic variant styling using global semantic system
    &-primary {
      border-color: var(--color-primary);
      background: color-mix(in srgb, var(--color-primary) 5%, var(--color-surface));
      
      .radio-dot {
        background-color: var(--color-primary);
      }
    }
    
    &-success {
      border-color: var(--color-success);
      background: color-mix(in srgb, var(--color-success) 5%, var(--color-surface));
      
      .radio-dot {
        background-color: var(--color-success);
      }
    }
    
    &-warning {
      border-color: var(--color-warning);
      background: color-mix(in srgb, var(--color-warning) 5%, var(--color-surface));
      
      .radio-dot {
        background-color: var(--color-warning);
      }
    }
    
    &-error {
      border-color: var(--color-error);
      background: color-mix(in srgb, var(--color-error) 5%, var(--color-surface));
      
      .radio-dot {
        background-color: var(--color-error);
      }
    }
    
    &-info {
      border-color: var(--color-info);
      background: color-mix(in srgb, var(--color-info) 5%, var(--color-surface));
      
      .radio-dot {
        background-color: var(--color-info);
      }
    }
  }

  @include element(dot) {
    width: 50%;
    height: 50%;
    border-radius: 50%;
    background-color: transparent;
    opacity: 0;
    transform: scale(0.5);
    transition: all var(--duration-fast) var(--ease-out);
    
    &-small {
      width: 40%;
      height: 40%;
    }
    
    &-large {
      width: 60%;
      height: 60%;
    }
  }

  @include element(option) {
    @extend %card-base-enhanced;
    @include interactive-enhanced(card, ('glow-on-hover': true));
    display: flex;
    align-items: flex-start;
    gap: var(--space-3);
    padding: var(--space-4);
    cursor: pointer;
    border-radius: var(--radius-lg);
    transition: all var(--duration-normal) var(--ease-out);

    &:hover {
      background: var(--color-surface-elevated);
      border-color: var(--color-primary-light);
    }

    &-selected {
      background: var(--color-primary-light);
      border-color: var(--color-primary);
      box-shadow: 0 0 0 1px var(--color-primary-light);
    }

    @include modifier(disabled) {
      @include interactive-disabled();
    }
  }

  @include element(label) {
    color: var(--color-text);
    font-weight: var(--font-medium);
    font-size: var(--text-sm);
    cursor: pointer;
    flex: 1;

    @include modifier(disabled) {
      color: var(--color-text-subtle);
      cursor: not-allowed;
    }
  }

  @include element(content) {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    flex: 1;
  }

  @include element(text) {
    color: var(--color-text);
    font-weight: var(--font-medium);
    font-size: var(--text-sm);
  }

  @include element(text-icon) {
    color: var(--color-text-muted);
    font-size: var(--text-base);
  }

  @include element(description) {
    color: var(--color-text-muted);
    font-size: var(--text-xs);
    margin-top: var(--space-1);
    line-height: var(--leading-relaxed);
  }

  @include generate-density-classes('radio', 'radio');
}

