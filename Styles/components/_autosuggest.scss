@use '../abstracts' as *;

// Autosuggest component - Updated for unified portal system
.autosuggest {
  @extend %interactive-base;
  position: relative;
  width: 100%;

  // Input field container
  &-input {
    width: 100%;
  }

  // Backdrop (managed by portal system)
  &-backdrop {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: transparent;
    z-index: var(--z-popup-backdrop);
    visibility: hidden;
    pointer-events: none;
  }

  // Dropdown viewport - positioning handled by JS portal system
  &-viewport {
    position: fixed;
    z-index: var(--z-popup);
    opacity: 0;
    visibility: hidden;
    transition: opacity var(--duration-fast) var(--ease-out),
                visibility var(--duration-fast) var(--ease-out);
    pointer-events: none;
    
    // Modal-aware layering
    .modal &, 
    .modal-container &,
    .modal-content & {
      z-index: var(--z-modal-popup);
    }
  }

  // Open state modifiers
  &-open {
    .autosuggest-backdrop {
      visibility: visible;
      pointer-events: auto;
    }

    .autosuggest-viewport {
      opacity: 1;
      visibility: visible;
      pointer-events: auto;
    }
  }

  // Direct visibility classes for portal management
  &-backdrop.visible {
    visibility: visible;
    pointer-events: auto;
  }

  &-viewport.visible {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
  }

  &-backdrop.hidden {
    visibility: hidden;
    pointer-events: none;
  }

  &-viewport.hidden {
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
  }

  // Dropdown content
  &-dropdown {
    @extend %card-base-enhanced;
    padding: var(--space-2) 0;
    max-height: min(20rem, 50vh);
    overflow-y: auto;
    min-width: 200px;
    width: 100%;
    
    // Custom scrollbar for dropdown
    &::-webkit-scrollbar {
      width: 4px;
    }
    
    &::-webkit-scrollbar-track {
      background: var(--color-surface);
    }
    
    &::-webkit-scrollbar-thumb {
      background: var(--color-border);
      border-radius: var(--radius-full);
    }
  }

  // Suggestion items
  &-item {
    @extend %button-state-base;
    width: 100%;
    display: flex;
    align-items: center;
    gap: var(--space-2);
    padding: var(--space-2) var(--space-3);
    background: transparent;
    border: none;
    text-align: left;
    cursor: pointer;
    transition: all var(--duration-fast) var(--ease-out);

    &:hover,
    &-selected {
      background: var(--color-surface);
      color: var(--color-text);
    }

    &:active {
      background: var(--color-surface-elevated);
    }

    // Item content layout
    &-content {
      display: flex;
      align-items: center;
      gap: var(--space-2);
      width: 100%;
      min-width: 0;
    }

    &-icon {
      @extend %icon-base;
      font-size: var(--text-sm);
      color: var(--color-text-secondary);
      flex-shrink: 0;
    }

    &-text {
      @extend %text-truncate;
      font-size: var(--text-sm);
      line-height: var(--leading-relaxed);
      color: var(--color-text);
      flex: 1;
      min-width: 0;
    }
  }

  // Loading state
  &-loading {
    padding: var(--space-2) var(--space-3);
    display: flex;
    flex-direction: column;
    gap: var(--space-1);
  }

  // Empty state
  &-empty {
    padding: var(--space-4) var(--space-3);
    text-align: center;

    &-content {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: var(--space-2);
      color: var(--color-text-secondary);

      i {
        font-size: var(--text-2xl);
        opacity: 0.5;
      }

      span {
        font-size: var(--text-sm);
      }
    }
  }

  // Disabled state
  &-disabled {
    opacity: var(--opacity-disabled);
    pointer-events: none;
  }

  // Loading indicator on input
  &-loading &-input {
    .text-input {
      // Add subtle loading animation
      position: relative;
      
      &::after {
        content: '';
        position: absolute;
        right: var(--space-3);
        top: 50%;
        transform: translateY(-50%);
        width: 16px;
        height: 16px;
        border: 2px solid var(--color-border);
        border-top-color: var(--color-primary);
        border-radius: 50%;
        animation: spin 1s linear infinite;
      }
    }
  }

  // Size variants
  &-small {
    .autosuggest-item {
      padding: var(--space-1-5) var(--space-2);
      
      &-text {
        font-size: var(--text-xs);
      }
    }
  }

  &-large {
    .autosuggest-item {
      padding: var(--space-3) var(--space-4);
      
      &-text {
        font-size: var(--text-base);
      }
    }
  }
}

// Container overflow management
:has(.autosuggest-open) {
  overflow: visible;
  
  &[class*="grid"] {
    isolation: isolate;
  }
}

// Responsive adjustments
@include responsive-max(sm) {
  .autosuggest {
    &-viewport {
      max-height: 15rem;
    }

    &-dropdown {
      max-height: 15rem;
    }

    &-item {
      padding: var(--space-2-5) var(--space-2);
      min-height: var(--touch-target-min);
    }
  }
}

// High contrast mode support
@media (prefers-contrast: high) {
  .autosuggest {
    &-item {
      &:hover,
      &-selected {
        outline: 2px solid var(--color-primary);
        outline-offset: -2px;
      }
    }
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  .autosuggest {
    &-viewport {
      transition: opacity var(--duration-fast) var(--ease-out);
    }

    &-loading &-input .text-input::after {
      animation: none;
    }
  }
}