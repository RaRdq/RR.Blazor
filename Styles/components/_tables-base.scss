@use '../abstracts' as *;
@use 'sass:map';
.overflow-x-auto[style*="--table-height"] {
  height: var(--table-height);
}

th[style*="--column-width"], td[style*="--column-width"] {
  width: var(--column-width);
}

th[style*="--column-min-width"], td[style*="--column-min-width"] {
  min-width: var(--column-min-width);
}

th[style*="--column-max-width"], td[style*="--column-max-width"] {
  max-width: var(--column-max-width);
}

th[style*="--sticky-left"], td[style*="--sticky-left"] {
  left: var(--sticky-left);
  z-index: var(--sticky-z-index);
}

$table-sizes: (
  'compact': (
    'header-padding': var(--space-3) var(--space-4),
    'cell-padding': var(--space-2) var(--space-3),
    'font-size': var(--text-xs)
  ),
  'normal': (
    'header-padding': var(--space-4) var(--space-6),
    'cell-padding': var(--space-4) var(--space-3),
    'font-size': var(--text-sm)
  ),
  'comfortable': (
    'header-padding': var(--space-6) var(--space-8),
    'cell-padding': var(--space-6) var(--space-4),
    'font-size': var(--text-base)
  )
);

$table-variants: (
  'default': (
    'border': var(--border-1) solid var(--color-border),
    'shadow': var(--shadow-xl),
    'header-bg': var(--glass-light-bg),
    'row-hover': var(--glass-hover-bg)
  ),
  'bordered': (
    'border': var(--border-1) solid var(--color-border),
    'shadow': var(--shadow-md),
    'header-bg': var(--color-surface),
    'row-hover': var(--state-hover-bg)
  ),
  'striped': (
    'border': var(--border-1) solid var(--color-border),
    'shadow': var(--shadow-sm),
    'header-bg': var(--color-surface-elevated),
    'row-hover': var(--state-hover-bg)
  )
);

// Data Table Container - Mobile-first with theme awareness
.table {
  @extend %table-base;
  overflow: hidden;
  background: var(--color-surface-elevated);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-lg);
  
  &-header {
    padding: var(--space-6);
    background: var(--glass-light-bg);
    border-bottom: var(--border-1) solid var(--color-border);
    backdrop-filter: blur(var(--glass-light-blur));
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: var(--space-4);
    
    // Mobile-first responsive layout
    padding: var(--space-4);
    flex-direction: column;
    align-items: stretch;
    gap: var(--space-3);
    
    @include responsive-min(md) {
      padding: var(--space-6);
      flex-direction: row;
      align-items: flex-start;
      gap: var(--space-4);
    }
    
    &-content {
      flex: 1;
      min-width: 0;
    }
    
    &-title {
      font-size: var(--text-xl);
      font-weight: var(--font-semibold);
      color: var(--color-text);
      margin: 0 0 var(--space-1) 0;
      display: flex;
      align-items: center;
      gap: var(--space-2);
    }
    
    &-subtitle {
      font-size: var(--text-sm);
      color: var(--color-text-muted);
      margin: 0;
    }
    
    &-actions {
      display: flex;
      gap: var(--space-2);
      flex-wrap: wrap;
      
      // Mobile-first responsive actions
      width: 100%;
      flex-direction: column;
      gap: var(--space-2);
      
      .button {
        @extend %touch-target;
        width: 100%;
        justify-content: center;
      }
      
      // Tablet and desktop
      @include responsive-min(md) {
        width: auto;
        flex-direction: row;
        
        .button {
          width: auto;
        }
      }
    }
  }
  
  &-filters {
    padding: var(--space-4) var(--space-6);
    background: var(--color-surface);
    border-bottom: var(--border-1) solid var(--color-border);
    display: flex;
    gap: var(--space-3);
    flex-wrap: wrap;
    align-items: center;
    
    // Mobile-first responsive filters
    padding: var(--space-3) var(--space-4);
    flex-direction: column;
    align-items: stretch;
    gap: var(--space-2);
    
    @include responsive-min(md) {
      padding: var(--space-4) var(--space-6);
      flex-direction: row;
      align-items: center;
      gap: var(--space-3);
    }
    
    // Filter toggle for mobile (collapsible)
    &-toggle {
      @extend %button-base;
      @extend %touch-target;
      width: 100%;
      justify-content: space-between;
      padding: var(--space-3);
      background: var(--color-surface-elevated);
      border: var(--border-1) solid var(--color-border);
      border-radius: var(--radius-md);
      min-height: var(--space-11); // WCAG AA touch target
      
      // Show only on mobile
      @include responsive-min(md) {
        display: none;
      }
      
      span {
        font-weight: var(--font-medium);
        color: var(--color-text);
      }
      
      i {
        color: var(--color-text-muted);
        transition: transform var(--duration-fast) var(--ease-out);
      }
      
      &.expanded i {
        transform: rotate(180deg);
      }
    }
    
    // Collapsible filter content
    &-content {
      display: none;
      flex-direction: column;
      gap: var(--space-2);
      
      // Show when expanded on mobile
      &.expanded {
        display: flex;
        
        @include responsive-max(md) {
          flex-direction: column;
        }
      }
      
      // Always visible on desktop
      @include responsive-min(md) {
        display: flex;
        flex-direction: row;
        gap: var(--space-3);
        flex-wrap: wrap;
        align-items: center;
        width: 100%;
      }
    }
    
    .input,
    .select {
      min-width: 0;
      flex: 1;
    }
  }
  
  &-content {
    overflow-x: auto;
    max-height: 70vh;
    
    // Mobile-first responsive table handling
    @include responsive-max(md) {
      // Force horizontal scroll on mobile when content exceeds viewport
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
      overscroll-behavior-x: contain;
      
      // Add scroll indicator shadow on mobile
      &::after {
        content: '';
        position: sticky;
        right: 0;
        top: 0;
        bottom: 0;
        width: 1rem;
        background: linear-gradient(270deg, 
          var(--color-surface-elevated) 0%, 
          transparent 100%);
        pointer-events: none;
        flex-shrink: 0;
      }
    }
    
    // Mobile-optimized scrolling with theme awareness
    @media (hover: none) and (pointer: coarse) {
      -webkit-overflow-scrolling: touch;
      overscroll-behavior: contain;
      scrollbar-width: none;
      -ms-overflow-style: none;
      
      &::-webkit-scrollbar {
        width: 0;
        height: 0;
      }
    }
    
    // Desktop scrollbar with theme styling
    @media (hover: hover) and (pointer: fine) {
      &::-webkit-scrollbar {
        width: var(--space-2);
        height: var(--space-2);
      }
      
      &::-webkit-scrollbar-track {
        background: var(--color-surface);
      }
      
      &::-webkit-scrollbar-thumb {
        background: var(--color-border);
        border-radius: var(--radius-sm);
        
        &:hover {
          background: var(--color-border-strong);
        }
      }
    }
  }
  
  &-content {
    overflow-x: auto;
    max-height: 70vh;
    
    // Mobile-first responsive table handling
    @include responsive-max(md) {
      // Force horizontal scroll on mobile when content exceeds viewport
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
      overscroll-behavior-x: contain;
    }
  }
  
  &-table {
    width: 100%;
    border-collapse: collapse;
    font-size: var(--text-sm);
    
    // Mobile-first responsive table width
    @include responsive-max(md) {
      min-width: 100%;
      width: max-content; // Allow table to expand beyond container width
      table-layout: auto; // Let content determine column widths
    }
    
    @include responsive-min(md) {
      table-layout: fixed; // Fixed layout for desktop
      width: 100%;
    }
    
    thead {
      background: var(--glass-medium-bg);
      backdrop-filter: blur(var(--glass-medium-blur));
      position: sticky;
      top: 0;
      z-index: 10;
    }
  }
}

// Table header cells
.table-header-cell {
  padding: var(--space-3) var(--space-3);
  text-align: left;
  font-weight: var(--font-semibold);
  color: var(--color-text);
  font-size: var(--text-xs);
  text-transform: uppercase;
  letter-spacing: var(--tracking-wide);
  border-bottom: var(--border-2) solid var(--color-border);
  white-space: nowrap;
  vertical-align: middle;
  line-height: var(--leading-normal);
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 200px;
  
  // Mobile-first responsive header sizing
  @include responsive-max(md) {
    padding: var(--space-2) var(--space-2);
    font-size: var(--text-2xs);
    max-width: 8rem;
  }
  
  &:first-child {
    padding-left: var(--space-3);
    
    @include responsive-max(md) {
      padding-left: var(--space-2);
      min-width: 3rem; // Minimum width for first column header
    }
    
    @include responsive-min(md) {
      padding-left: var(--space-6);
    }
  }
  
  &:last-child {
    padding-right: var(--space-3);
    
    @include responsive-max(md) {
      padding-right: var(--space-2);
    }
    
    @include responsive-min(md) {
      padding-right: var(--space-6);
    }
  }
}

// Sortable table headers
.table-header-sortable {
  @extend %button-base;
  @extend %touch-target;
  cursor: pointer;
  user-select: none;
  position: relative;
  transition: all var(--duration-fast) var(--ease-out);
  display: flex;
  align-items: center;
  padding: var(--space-3) var(--space-4);
  border-radius: var(--radius-sm);
  
  @include interactive-button(scale(1.02), scale(0.98), var(--shadow-sm), none);
  
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      background: var(--glass-hover-bg);
      backdrop-filter: blur(var(--glass-hover-blur));
      color: var(--color-primary);
    }
  }
  
  @media (hover: none) and (pointer: coarse) {
    &:active {
      background: var(--glass-hover-bg);
    }
  }
}

// Sort indicators
.table-sort-indicator {
  &::after {
    content: '';
    position: absolute;
    right: var(--space-2);
    top: 50%;
    transform: translateY(-50%);
    width: 0;
    height: 0;
    border-left: var(--space-1-5) solid transparent;
    border-right: var(--space-1-5) solid transparent;
    border-bottom: var(--space-2) solid var(--color-text-subtle);
    opacity: var(--opacity-disabled);
    transition: all var(--duration-fast) var(--ease-out);
    
    @include responsive-min(md) {
      border-left: var(--space-1) solid transparent;
      border-right: var(--space-1) solid transparent;
      border-bottom: var(--space-1-5) solid var(--color-text-subtle);
    }
  }
  
  &.sort-asc::after {
    border-bottom: var(--space-2) solid var(--color-primary);
    opacity: 1;
    transform: translateY(-50%) scale(1.1);
    
    @include responsive-min(md) {
      border-bottom: var(--space-1-5) solid var(--color-primary);
    }
  }
  
  &.sort-desc::after {
    border-bottom: none;
    border-top: var(--space-2) solid var(--color-primary);
    opacity: 1;
    transform: translateY(-50%) scale(1.1);
    
    @include responsive-min(md) {
      border-top: var(--space-1-5) solid var(--color-primary);
    }
  }
}

// Table row states
.table-row {
  transition: all var(--duration-fast) var(--ease-out);
  border-bottom: var(--border-1) solid transparent;
  
  @include hover-lift(calc(-1 * var(--border-1)), brightness(1.02));
  
  // Alternating row backgrounds for better readability
  &:nth-child(even) {
    background: color-mix(in srgb, var(--color-surface) 50%, transparent);
  }
  
  &:nth-child(odd) {
    background: transparent;
  }
  
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      background: var(--glass-hover-bg);
      backdrop-filter: blur(var(--glass-hover-blur));
      border-bottom-color: var(--color-border);
    }
  }
  
  @media (hover: none) and (pointer: coarse) {
    &:active {
      background: var(--glass-hover-bg);
      border-bottom-color: var(--color-border);
    }
  }
  
  &--striped:nth-child(even) {
    background: var(--glass-light-bg);
    
    &:hover {
      background: var(--glass-hover-bg);
      backdrop-filter: blur(var(--glass-hover-blur));
    }
  }
  
  &--selected {
    background: var(--glass-primary-bg);
    color: var(--color-text-inverse);
    box-shadow: var(--glass-primary-shadow);
    backdrop-filter: blur(var(--glass-medium-blur));
    
    &:hover {
      background: var(--color-primary-hover);
    }
  }
  
  &--highlighted {
    background: color-mix(in srgb, var(--color-warning) 10%, var(--color-surface));
    
    &:hover {
      background: color-mix(in srgb, var(--color-warning) 15%, var(--color-surface));
    }
  }
}

// Table cell styles
.table-cell {
  padding: var(--space-3) var(--space-3);
  color: var(--color-text-muted);
  border-bottom: var(--border-1) solid var(--color-border);
  vertical-align: middle;
  line-height: var(--leading-normal);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 200px;
  
  // Content wrapper for complex cell content
  &-content {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    width: 100%;
    min-height: var(--space-8);
  }
  
  > * {
    vertical-align: middle;
    line-height: var(--leading-normal);
  }
  
  // Mobile-first responsive cell sizing
  @include responsive-max(md) {
    padding: var(--space-2) var(--space-2);
    font-size: var(--text-xs);
    max-width: 8rem;
  }
  
  &:first-child {
    padding-left: var(--space-3);
    
    @include responsive-max(md) {
      padding-left: var(--space-2);
      min-width: 3rem; // Minimum width for first column
    }
    
    @include responsive-min(md) {
      padding-left: var(--space-6);
    }
  }
  
  &:last-child {
    padding-right: var(--space-3);
    
    @include responsive-max(md) {
      padding-right: var(--space-2);
    }
    
    @include responsive-min(md) {
      padding-right: var(--space-6);
    }
  }
}

// Table cell types
.table-cell--number {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

.table-cell--currency {
  text-align: right;
  font-variant-numeric: tabular-nums;
  font-weight: var(--font-medium);
  color: var(--color-text);
}

.table-cell--date {
  font-variant-numeric: tabular-nums;
  color: var(--color-text-subtle);
}

.table-cell--status {
  text-align: center;
}

.table-cell--actions {
  text-align: right;
}

// Status container in table cells
.table-status-container {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-1);
}

// Amount display in table cells
.table-amount {
  text-align: right;
  font-variant-numeric: tabular-nums;
  font-weight: var(--font-semibold);
  
  &-currency {
    font-size: var(--text-sm);
    color: var(--color-text-muted);
    margin-left: var(--space-1);
  }
  
  &-value {
    color: var(--color-text);
  }
}

// Date display in table cells
.table-date {
  font-variant-numeric: tabular-nums;
  display: flex;
  flex-direction: column;
  gap: var(--space-half);
  
  &-primary {
    font-weight: var(--font-medium);
    color: var(--color-text);
    font-size: var(--text-sm);
  }
  
  &-secondary {
    font-size: var(--text-xs);
    color: var(--color-text-muted);
  }
}

// Actions container in table cells
.table-actions-container {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: var(--space-1);
  min-height: var(--space-8);
}

// Table cell flex containers
.table-cell-flex {
  align-items: center;
  min-height: var(--space-11);
}

// Table actions container
.table-actions-flex {
  justify-content: flex-end;
  align-items: center;
  gap: var(--space-1);
}

// Table action buttons
.table-action-button {
  min-width: var(--space-11);
  min-height: var(--space-11);
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

// Table footer
.table-footer {
    padding: var(--space-4) var(--space-6);
    background: var(--glass-light-bg);
    border-top: var(--border-1) solid var(--color-border);
    backdrop-filter: blur(var(--glass-light-blur));
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--space-4);
    
    // Mobile-first responsive footer
    padding: var(--space-3) var(--space-4);
    flex-direction: column;
    align-items: stretch;
    gap: var(--space-3);
    
    @include responsive-min(md) {
      padding: var(--space-4) var(--space-6);
      flex-direction: row;
      align-items: center;
      gap: var(--space-4);
    }
}

// Table footer pagination
.table-footer-pagination {
  display: flex;
  gap: var(--space-2);
  align-items: center;
  
  @include responsive-max(md) {
    justify-content: center;
    width: 100%;
  }
}

// Table footer pagination buttons (mobile)
.table-pagination-button {
  min-width: var(--space-11);
  min-height: var(--space-11);
  
  @include responsive-max(md) {
    .button-text {
      display: none;
    }
  }
  
  @include responsive-min(md) {
    .button-text {
      display: inline;
    }
  }
}

// Table footer page info
.table-page-info {
  font-size: var(--text-sm);
  font-weight: var(--font-medium);
  color: var(--color-text);
  padding: var(--space-2) var(--space-3);
  background: var(--color-surface-elevated);
  border-radius: var(--radius-md);
}

// Table footer info
.table-footer-info {
  font-size: var(--text-sm);
  color: var(--color-text-muted);
  display: flex;
  align-items: center;
  gap: var(--space-2);
  
  strong {
    color: var(--color-text);
    font-weight: var(--font-semibold);
  }
  
  @include responsive-max(md) {
    justify-content: center;
    text-align: center;
  }
}

// Table size variants using configuration maps
@each $size-name, $size-props in $table-sizes {
  .table-#{$size-name} {
    font-size: map.get($size-props, 'font-size');
  }
  
  .table-#{$size-name} .table-header-cell {
    padding: map.get($size-props, 'header-padding');
  }
  
  .table-#{$size-name} .table-cell {
    padding: map.get($size-props, 'cell-padding');
  }
}

// Table density variants - affects cell padding and line height
.table-compact {
  th, td {
    padding: var(--space-1) var(--space-2);
    line-height: var(--leading-tight);
    font-size: var(--text-xs);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 120px;
  }
  
  // Ultra-compact checkbox columns
  .table-checkbox-column {
    width: 32px;
    padding: var(--space-1);
  }
}

.table-dense {
  th, td {
    padding: var(--space-2) var(--space-2);
    line-height: var(--leading-snug);
    font-size: var(--text-sm);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 160px;
  }
  
  // Compact checkbox columns
  .table-checkbox-column {
    width: 36px;
    padding: var(--space-1) var(--space-2);
  }
}

.table-normal {
  th, td {
    padding: var(--space-3) var(--space-3);
    line-height: var(--leading-normal);
    font-size: var(--text-sm);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 200px;
  }
  
  .table-checkbox-column {
    width: 40px;
    padding: var(--space-2);
  }
}

.table-spacious {
  th, td {
    padding: var(--space-4) var(--space-4);
    line-height: var(--leading-relaxed);
    font-size: var(--text-base);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 250px;
  }
  
  .table-checkbox-column {
    width: 44px;
    padding: var(--space-3);
  }
}

// Table style variants
.table-bordered {
  .table-header-cell,
  .table-cell {
    border-right: var(--border-1) solid var(--color-border);
    
    &:last-child {
      border-right: none;
    }
  }
}

.table-striped .table-row:nth-child(even) {
  background: var(--color-surface);
}

.table-hover .table-row {
  cursor: pointer;
  
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      background: var(--color-surface-elevated);
    }
  }
}

// Column Filter Dropdown - Modern Filtering UI
.column-filter-dropdown {
  background: var(--color-surface-elevated);
  border: var(--border-1) solid var(--color-border);
  border-radius: var(--radius-lg);
  box-shadow: var(--theme-shadow-xl);
  backdrop-filter: blur(var(--blur-md));
  z-index: var(--z-dropdown);
  min-width: var(--space-48);
  max-width: var(--space-64);
  
  &::before {
    content: '';
    position: absolute;
    top: calc(-1 * var(--space-1-5));
    right: var(--space-4);
    width: 0;
    height: 0;
    border-left: var(--space-1-5) solid transparent;
    border-right: var(--space-1-5) solid transparent;
    border-bottom: var(--space-1-5) solid var(--color-surface-elevated);
  }
  
  .rformfield {
    margin-bottom: 0;
    
    input, select {
      transition: all var(--transition-fast) ease;
      
      @include interactive-button(scale(1.02), scale(0.98), var(--shadow-md), var(--shadow-sm));
    }
  }
  
  // Multi-select checkbox styling
  label {
    border-radius: var(--radius-md);
    transition: all var(--transition-fast) ease;
    
    @include interactive-button(scale(1.02), scale(0.98), var(--shadow-sm), none);
    
    &:hover {
      background: var(--color-surface);
    }
    
    input[type="checkbox"] {
      transform: scale(1.1);
      accent-color: var(--color-primary);
    }
  }
  
  // Filter buttons
  .button {
    transition: all var(--transition-fast) ease;
    
    @include interactive-button(scale(1.05), scale(0.98), var(--shadow-sm), none);
  }
}

// Filter button in table headers
.table th .button {
  transition: all var(--transition-fast) ease;
  
  @include interactive-button(scale(1.1), scale(0.95), var(--shadow-sm), none);
  
  // Active filter state
  &.scale-110 {
    transform: scale(1.1);
    animation: pulse-filter 2s infinite;
  }
}

// Column resizing and sticky columns
.resizable-column {
  position: relative;
  
  .column-resize-handle {
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    width: var(--space-2);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: col-resize;
    user-select: none;
    
    &:hover {
      background: var(--color-primary);
    }
    
    i {
      transform: rotate(90deg);
      color: var(--color-text-muted);
    }
  }
}

// Sticky columns with shadows
.position-sticky {
  border-right: var(--border-1) solid var(--color-border);
  
  &:after {
    content: '';
    position: absolute;
    top: 0;
    right: calc(-1 * var(--border-1));
    bottom: 0;
    width: var(--space-2);
    background: linear-gradient(
      90deg, 
      rgba(0, 0, 0, 0.1) 0%, 
      transparent 100%
    );
    pointer-events: none;
  }
}

// Sort indicators with animations
.animate-scale-in {
  animation: scaleIn var(--duration-fast) var(--ease-out);
}

// Empty State for Tables
.table-empty {
  padding: var(--space-12) var(--space-6);
  text-align: center;
  color: var(--color-text-subtle);
  
  h3 {
    font-size: var(--text-lg);
    font-weight: var(--font-semibold);
    color: var(--color-text-muted);
    margin: 0 0 var(--space-2) 0;
  }
  
  p {
    font-size: var(--text-sm);
    color: var(--color-text-subtle);
    margin: 0 0 var(--space-4) 0;
  }
}

.table-loading {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    inset: 0;
    background: var(--glass-frost-bg);
    backdrop-filter: blur(var(--glass-frost-blur));
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: var(--z-overlay);
  }
  
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 44px;
    height: 44px;
    border: 3px solid var(--color-border);
    border-top: 3px solid var(--color-primary);
    border-radius: 50%;
    animation: spin 1s linear infinite;
    z-index: var(--z-sidebar);
  }
}