@use '../abstracts' as *;

// Mixin for compact choice styles (reusable across responsive contexts)
@mixin choice-compact-style() {
  width: auto;
  min-width: auto;
  
  .choice-trigger {
    padding: var(--space-2);
    min-width: var(--touch-target-min);
    min-height: var(--touch-target-min);
    border-radius: var(--radius-full);
    gap: 0;
    position: relative;
    
    // Hide text content in compact mode
    .choice-text,
    .choice-label {
      display: none;
    }
    
    // Keep only avatar/icon visible
    .choice-avatar,
    .choice-icon {
      display: flex;
      flex-shrink: 0;
      position: relative;
      z-index: 1;
    }
    
    @include icon-context-action;
    
    // Remove chevron in compact mode
    &::after {
      display: none;
    }
  }
  
  // Dropdown content adjustments for compact mode - positioning handled by JS
  .choice-viewport {
    width: auto;
  }
  
  // Keep full content in dropdown items
  .choice-content .choice-item {
    .choice-text,
    .choice-label {
      display: block;
    }
  }
}

.choice {
  position: relative;
  width: 100%;
  
  // Header for grouped choices
  &-header {
    padding: var(--space-2) var(--space-3);
    font-size: var(--text-xs);
    font-weight: var(--font-semibold);
    color: var(--color-text-muted);
    text-transform: uppercase;
    letter-spacing: var(--tracking-wide);
    border-bottom: var(--border-1) solid var(--color-border);
    background: var(--color-surface);
    margin: 0 var(--space-1);
    margin-bottom: var(--space-1);
    border-radius: var(--radius-sm);
  }
  
  // Footer for choices
  &-footer {
    padding: var(--space-2) var(--space-3);
    font-size: var(--text-xs);
    color: var(--color-text-muted);
    border-top: var(--border-1) solid var(--color-border);
    background: var(--color-surface);
    margin: var(--space-1);
    margin-top: var(--space-1);
    border-radius: var(--radius-sm);
  }
  
  &-loading {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: var(--space-4);
    color: var(--color-text-muted);
    font-size: var(--text-sm);
    
    &::before {
      content: '';
      width: 16px;
      height: 16px;
      margin-right: var(--space-2);
      border: 2px solid var(--color-border-light);
      border-top: 2px solid var(--color-primary);
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }
  }
  
  // Auto width choice
  &-auto {
    width: auto;
    min-width: max-content;
  }
  
  
  // Inline choice layout
  &-inline {
    display: inline-flex;
    width: auto;
    
    .choice-item {
      flex: none;
      white-space: nowrap;
    }
  }
  
  // Compact variant for collapsed sidebar/mobile
  &-compact {
    @include choice-compact-style();
  }
  
  // Avatar-only variant (extreme compact)
  &-avatar-only {
    @extend .choice-compact;
    
    .choice-trigger {
      padding: var(--space-1);
      width: var(--touch-target-min);
      height: var(--touch-target-min, 44px);
      border-radius: var(--radius-full);
      
      // Only show avatar
      .choice-avatar {
        width: 100%;
        height: 100%;
        
        img {
          width: 100%;
          height: 100%;
          object-fit: cover;
        }
      }
    }
  }
  
  // Auto-responsive behavior in sidebar contexts
  .app-sidebar.collapsed &:not(.choice-force-full),
  .sidebar-collapsed &:not(.choice-force-full) {
    @include choice-compact-style();
  }
  
  @container (max-width: 200px) {
    &:not(.choice-force-full) {
      @include choice-compact-style();
    }
  }
  
  @container (max-width: 100px) {
    &:not(.choice-force-full) {
      .choice-trigger {
        padding: var(--space-1);
        width: var(--touch-target-min);
        height: var(--touch-target-min, 44px);
        border-radius: var(--radius-full);
        
        .choice-avatar {
          width: 100%;
          height: 100%;
          
          img {
            width: 100%;
            height: 100%;
            object-fit: cover;
          }
        }
      }
    }
  }
  
  @include responsive-max(md) {
    .app-sidebar &:not(.choice-force-full) {
      @include choice-compact-style();
    }
  }
  
  @include responsive-max(sm) {
    .app-sidebar &:not(.choice-force-full),
    .nav-menu &:not(.choice-force-full),
    .sidebar-footer &:not(.choice-force-full) {
      @include choice-compact-style();
    }
  }
  
  // Label for choices
  &-label {
    font-size: var(--text-sm);
    font-weight: var(--font-medium);
    color: var(--color-text);
    margin-bottom: var(--space-1);
    display: block;
  }
  
  // Checkmark indicator
  &-check {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 16px;
    height: 16px;
    border-radius: var(--radius-sm);
    background: var(--color-primary);
    color: var(--color-text-inverse);
    font-size: 12px;
    margin-left: auto;
    opacity: 0;
    transform: scale(0.8);
    transition: all var(--duration-fast);
    
    &::before {
      content: 'âœ“';
    }
    
    .choice-item-active & {
      opacity: 1;
      transform: scale(1);
    }
  }
  
  // Common item styling for all variants
  &-item {
    @include button-reset;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: var(--space-2);
    padding: var(--space-2) var(--space-3);
    border-radius: var(--radius-md);
    width: 100%;
    text-align: left;
    background: transparent; // Changed from var(--color-surface-elevated) to transparent
    border: var(--border-1) solid transparent; // Changed border to transparent
    color: var(--color-text-muted);
    font-size: var(--text-sm);
    font-weight: var(--font-medium);
    transition: var(--transition-normal);
    cursor: pointer;
    user-select: none;
    
    &:hover:not(&-disabled):not(&-loading) {
      background: color-mix(in srgb, var(--color-surface-elevated) 15%, transparent);
      color: var(--color-text);
      border-color: var(--color-border);
      transform: translateY(-0.0625rem);
    }
    
    &:focus-visible {
      outline: none;
      outline-offset: var(--border-2);
    }
    
    &-active {
      background: var(--color-primary);
      color: var(--color-text-inverse);
      border-color: var(--color-primary);
      font-weight: var(--font-semibold);
      
      &:hover {
        background: var(--color-primary-hover);
        border-color: var(--color-primary-hover);
        transform: none;
      }
    }
    
    &-disabled {
      opacity: var(--opacity-disabled);
      cursor: not-allowed;
      pointer-events: none;
    }
    
    &-loading {
      cursor: wait;
      opacity: var(--opacity-50);
    }
    
    &-primary {
      background: var(--color-primary-light);
      color: var(--color-primary);
      border-color: var(--color-primary);
      
      &:hover {
        background: var(--color-primary);
        color: var(--color-text-inverse);
      }
      
      &-active {
        background: var(--color-primary);
        color: var(--color-text-inverse);
      }
    }
    
    &-success {
      @include semantic-tint(success, 10);
      color: var(--color-success);
      border-color: var(--color-success);
      
      &:hover {
        background: var(--color-success);
        color: var(--color-text-inverse);
      }
      
      &-active {
        background: var(--color-success);
        color: var(--color-text-inverse);
      }
    }
    
    &-warning {
      @include semantic-tint(warning, 10);
      color: var(--color-warning);
      border-color: var(--color-warning);
      
      &:hover {
        background: var(--color-warning);
        color: var(--color-text-inverse);
      }
      
      &-active {
        background: var(--color-warning);
        color: var(--color-text-inverse);
      }
    }
    
    &-error {
      @include semantic-tint(error, 10);
      color: var(--color-error);
      border-color: var(--color-error);
      
      &:hover {
        background: var(--color-error);
        color: var(--color-text-inverse);
      }
      
      &-active {
        background: var(--color-error);
        color: var(--color-text-inverse);
      }
    }
    
    &-info {
      @include semantic-tint(info, 10);
      color: var(--color-info);
      border-color: var(--color-info);
      
      &:hover {
        background: var(--color-info);
        color: var(--color-text-inverse);
      }
      
      &-active {
        background: var(--color-info);
        color: var(--color-text-inverse);
      }
    }
    
    &-ghost {
      background: transparent;
      color: var(--color-text-muted);
      border-color: var(--color-border);
      
      &:hover {
        background: var(--color-surface-elevated);
        color: var(--color-text);
        border-color: var(--color-primary);
      }
      
      &-active {
        background: var(--color-primary-light);
        color: var(--color-primary);
        border-color: var(--color-primary);
      }
    }
    
    &-neutral {
      background: var(--color-surface-elevated);
      color: var(--color-text);
      border-color: var(--color-border);
      
      &:hover {
        background: var(--color-surface);
        border-color: var(--color-primary);
      }
      
      &-active {
        background: var(--color-surface);
        border-color: var(--color-primary);
      }
    }
  }

  // Universal choice trigger styles (for all dropdown triggers)
  &-trigger {
    @include button-reset;
    display: flex;
    align-items: center;
    gap: var(--space-2);
    padding: var(--space-3);
    width: 100%;
    background: var(--color-surface-elevated);
    border: var(--border-1) solid var(--color-border);
    border-radius: var(--radius-lg);
    color: var(--color-text);
    font-size: var(--text-sm);
    font-weight: var(--font-medium);
    text-align: left;
    cursor: pointer;
    transition: all var(--duration-fast) var(--ease-out);
    
    // Dropdown chevron indicator for ALL choice triggers
    position: relative;
    
    &::after {
      content: '';
      position: absolute;
      right: var(--space-3);
      top: 50%;
      transform: translateY(-50%);
      width: 0;
      height: 0;
      border-left: 4px solid transparent;
      border-right: 4px solid transparent;
      border-top: 4px solid currentColor; // Use currentColor for visibility
      transition: transform var(--duration-fast) var(--ease-out);
      opacity: 0.6; // Ensure visibility
    }
    
    &:hover:not(:disabled) {
      background: var(--color-surface-elevated);
      border-color: var(--color-primary);
      
      &::after {
        opacity: 1; // Full opacity on hover
      }
    }
    
    &:focus-visible {
      outline: none;
      outline-offset: var(--border-1);
      border-color: var(--color-primary);
      
      // Remove the elevation/box-shadow effect  
      box-shadow: none !important;
    }
    
    &:disabled {
      opacity: var(--opacity-disabled);
      cursor: not-allowed;
      
      &::after {
        opacity: 0.3;
      }
    }
  }

  // Dropdown variant
  &-dropdown {
    position: relative;
    
    // Semantic variants using mixins (strictly &- pattern)  
    @include semantic-variants((primary, success, warning, error, info), (ghost));
    
    .choice-viewport {
      visibility: hidden;
      opacity: 0;
      pointer-events: none;
      z-index: var(--z-popup);
      
      // Smooth animation transitions to prevent flickers  
      transition: opacity 0.15s ease-out, transform 0.15s ease-out;
      transform: translateY(-4px); // Start slightly above for smooth slide-in
      
      @extend %glass-medium;
      background: var(--glass-bg-medium);
      border-radius: var(--radius-lg);
      box-shadow: var(--shadow-xl);
      padding: var(--space-2);
      max-height: 80vh;
      overflow-y: auto;
      
      // Scrollbar styling
      scrollbar-width: thin;
      scrollbar-color: var(--color-border) transparent;
      
      &::-webkit-scrollbar {
        width: 4px;
      }
      
      &::-webkit-scrollbar-track {
        background: transparent;
      }
      
      &::-webkit-scrollbar-thumb {
        background: var(--color-border);
        border-radius: var(--radius-full);
      }
      
      @media (max-width: 768px) {
        min-width: var(--space-48);
        right: -var(--space-2);
      }
      
      @media (max-width: 480px) {
        min-width: var(--space-40);
        right: -var(--space-1);
      }
    }
    
    .choice-content {
      background: var(--color-surface-elevated);
      border: var(--border-1) solid var(--color-border);
      border-radius: var(--radius-lg);
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12),
                  0 2px 8px rgba(0, 0, 0, 0.08);
      backdrop-filter: blur(var(--blur-md));
      width: 100%;
      min-width: 200px;
      max-width: 400px;
      max-height: 320px;
      overflow-y: auto;
      overflow-x: hidden;
      padding: var(--space-1) 0;
      box-sizing: border-box;
      
      &::-webkit-scrollbar {
        width: 8px;
      }
      
      &::-webkit-scrollbar-track {
        background: var(--color-surface);
        border-radius: var(--radius-sm);
        margin: var(--space-2) 0;
      }
      
      &::-webkit-scrollbar-thumb {
        background: var(--color-border);
        border-radius: var(--radius-full);
        transition: all var(--duration-fast);
        
        &:hover {
          background: var(--color-primary);
          transform: scaleY(1.1);
        }
      }
      
      // Firefox scrollbar
      scrollbar-width: thin;
      scrollbar-color: var(--color-border) var(--color-surface);
      
      .choice-item {
        border: none;
        background: transparent;
        margin: 0 var(--space-1);
        justify-content: flex-start;
        text-align: left;
        padding: var(--space-2) var(--space-3);
        font-size: var(--text-sm);
        font-weight: var(--font-normal);
        color: var(--color-text);
        transition: background var(--duration-fast) var(--ease-out),
                    color var(--duration-fast) var(--ease-out);
        cursor: pointer;
        border-radius: var(--radius-md);
        position: relative;
        width: auto;
        max-width: calc(100% - calc(var(--space-1) * 2));
        box-sizing: border-box;
        display: flex;
        align-items: center;
        gap: var(--space-2);
        min-width: 0;
        
        &:hover,
        &.choice-item-highlighted {
          background: color-mix(in srgb, var(--color-primary) 10%, transparent);
          color: var(--color-text);
        }
        
        &:active {
          background: color-mix(in srgb, var(--color-primary) 20%, transparent);
          transform: scale(0.98);
        }
        
        &.choice-item-active {
          background: var(--color-primary);
          color: var(--color-text-inverse);
          font-weight: var(--font-semibold);
          
          &:hover {
            background: var(--color-primary-hover);
            color: var(--color-text-inverse);
          }
        }
        
        @include icon-context-table;
        
        // Text content handling for long text
        .choice-text,
        .choice-label {
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
          flex-shrink: 1;
          min-width: 0;
        }
        
        // Avatar should never shrink
        .choice-avatar {
          flex-shrink: 0;
        }
      }
    }
    
    
    
    &.choice-open {
      .choice-trigger {
        border-color: var(--color-primary);
        
        &::after {
          transform: translateY(-50%) rotate(180deg);
        }
      }
      
      .choice-viewport {
        visibility: visible;
        opacity: 1;
        pointer-events: auto;
        transform: translateY(0);
        animation: dropdownSlideIn var(--duration-normal) var(--ease-out);
      }
    }
  }

  &-switcher {
    display: flex;
    background: var(--color-surface);
    border: var(--border-1) solid var(--color-border);
    border-radius: var(--radius-lg);
    padding: var(--space-1);
    gap: var(--space-1);
    
    .choice-item {
      flex: 1;
      border: none;
      background: transparent;
      
      &-active {
        background: var(--color-surface-elevated);
        box-shadow: var(--shadow-sm);
      }
    }
  }
}

// Scrollbar styling for dropdown content
.choice-dropdown .choice-content {
  &::-webkit-scrollbar {
    width: 6px; // Slimmer scrollbar
  }
  
  &::-webkit-scrollbar-track {
    background: transparent;
    margin: var(--space-1) 0;
  }
  
  &::-webkit-scrollbar-thumb {
    background: var(--color-border);
    border-radius: var(--radius-full);
    transition: all var(--duration-fast);
    
    &:hover {
      background: var(--color-primary);
      width: 8px; // Expand on hover
    }
  }
  
  // Firefox
  scrollbar-width: thin;
  scrollbar-color: var(--color-border) transparent;
}

