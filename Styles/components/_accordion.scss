@use '../abstracts' as *;

.accordion {
  display: flex;
  flex-direction: column;
  
  &-item {
    background: var(--color-surface-elevated);
    
    &:first-child {
      .accordion-header {
        border-top-left-radius: var(--radius-md);
        border-top-right-radius: var(--radius-md);
      }
    }
    
    &:last-child {
      .accordion-header {
        border-bottom-left-radius: var(--radius-md);
        border-bottom-right-radius: var(--radius-md);
      }
      
      &.accordion-item-expanded {
        .accordion-collapse {
          border-bottom-left-radius: var(--radius-md);
          border-bottom-right-radius: var(--radius-md);
        }
      }
    }
  &-expanded {
      .accordion-header {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
      }
    }
  &-disabled {
      opacity: var(--opacity-disabled);
      
      .accordion-header {
        cursor: not-allowed;
      }
    }
    
    // Semantic color variants
    &-primary {
      border-left: 4px solid var(--color-primary);
      background: var(--color-primary-light);
      
      .accordion-header {
        color: var(--color-primary);
      }
    }
    
    &-success {
      border-left: 4px solid var(--color-success);
      background: var(--color-success-bg);
      
      .accordion-header {
        color: var(--color-success);
      }
    }
    
    &-warning {
      border-left: 4px solid var(--color-warning);
      background: var(--color-warning-bg);
      
      .accordion-header {
        color: var(--color-warning);
      }
    }
    
    &-error {
      border-left: 4px solid var(--color-error);
      background: var(--color-error-bg);
      
      .accordion-header {
        color: var(--color-error);
      }
    }
    
    &-info {
      border-left: 4px solid var(--color-info);
      background: var(--color-info-bg);
      
      .accordion-header {
        color: var(--color-info);
      }
    }
    
    &-ghost {
      background: transparent;
      border: var(--border-1) dashed var(--color-border);
      
      .accordion-header {
        color: var(--color-text-muted);
      }
    }
    
    &-neutral {
      background: var(--color-surface);
      border-left: 4px solid var(--color-text-muted);
      
      .accordion-header {
        color: var(--color-text-muted);
      }
    }
  }
  
  &-header {
    width: 100%;
    display: flex;
    align-items: center;
    gap: var(--space-3);
    padding: var(--space-4);
    background: transparent;
    border: none;
    text-align: left;
    cursor: pointer;
    transition: background-color var(--duration-fast) ease-out;
    
    &:hover:not(&-disabled) {
      background: var(--state-hover-bg);
    }
    
    &:focus-visible {
      @include focus-ring;
      z-index: 1;
    }
  &-disabled {
      cursor: not-allowed;
      
      &:hover {
        background: transparent;
      }
    }
  }
  
  &-header-content {
    flex: 1;
    display: flex;
    align-items: center;
    gap: var(--space-2);
    min-width: 0;
  }
  
  &-header-icon {
    font-size: 1.25rem;
    color: var(--color-text-muted);
    flex-shrink: 0;
  }
  
  &-title {
    font-size: var(--text-base);
    font-weight: var(--font-medium);
    color: var(--color-text);
    line-height: 1.5;
  }
  
  &-subtitle {
    font-size: var(--text-sm);
    color: var(--color-text-muted);
    margin-left: auto;
  }
  
  &-icon {
    font-size: 1.25rem;
    color: var(--color-text-muted);
    transition: transform 200ms ease-out;
    flex-shrink: 0;
  }
  
  &-collapse {
    overflow: hidden;
    transition: height 200ms ease-out;
    height: 0;
  &-expanded {
      height: auto;
    }
  }
  
  &-body {
    padding: var(--space-4);
    color: var(--color-text-muted);
    font-size: var(--text-sm);
    line-height: 1.6;
  }
  
  &-bordered {
    border: 1px solid var(--color-border);
    border-radius: var(--radius-md);
    
    .accordion-item {
      &:not(:last-child) {
        border-bottom: 1px solid var(--color-border);
      }
    }
  }
  
  &-separated {
    gap: var(--space-2);
    
    .accordion-item {
      border: 1px solid var(--color-border);
      border-radius: var(--radius-md);
      
      &:not(:last-child) {
        border-bottom: 1px solid var(--color-border);
      }
    }
  }
  
  &-flush {
    .accordion-item {
      background: transparent;
      
      &:first-child .accordion-header {
        border-radius: 0;
      }
      
      &:last-child .accordion-header {
        border-radius: 0;
      }
    }
    
    .accordion-header {
      padding-left: 0;
      padding-right: 0;
    }
    
    .accordion-body {
      padding-left: 0;
      padding-right: 0;
    }
  }
  
  &-filled {
    .accordion-item-expanded {
      .accordion-header {
        background: var(--color-surface);
      }
    }
  }
  
  &-icon-left {
    .accordion-icon {
      order: -1;
    }
  }
}


.accordion-item-expanded .accordion-body {
  animation: fadeInUp 200ms ease-out;
}

// Hover states for semantic variants (reduced nesting)
.accordion-item-primary .accordion-header:hover:not(.accordion-header-disabled) {
  background: var(--color-primary-medium);
}

.accordion-item-success .accordion-header:hover:not(.accordion-header-disabled) {
  background: color-mix(in srgb, var(--color-success) 20%, var(--color-surface));
}

.accordion-item-warning .accordion-header:hover:not(.accordion-header-disabled) {
  background: color-mix(in srgb, var(--color-warning) 20%, var(--color-surface));
}

.accordion-item-error .accordion-header:hover:not(.accordion-header-disabled) {
  background: color-mix(in srgb, var(--color-error) 20%, var(--color-surface));
}

.accordion-item-info .accordion-header:hover:not(.accordion-header-disabled) {
  background: color-mix(in srgb, var(--color-info) 20%, var(--color-surface));
}

.accordion-item-ghost .accordion-header:hover:not(.accordion-header-disabled) {
  background: var(--color-surface-elevated);
  color: var(--color-text);
}

.accordion-item-neutral .accordion-header:hover:not(.accordion-header-disabled) {
  background: var(--color-surface-elevated);
}

[data-theme="dark"] {
  .accordion {
    &-header:hover:not(.accordion-header-disabled) {
      background: var(--state-hover-bg);
    }
  }
}