@use '../abstracts' as *;

// Chip component with badge and status style variants
.chip {
  @extend %status-indicator-base;
  background: var(--color-surface-elevated);
  color: var(--color-text);
  border: var(--border-1) solid var(--color-border);
  // Ensure perfect centering
  display: inline-flex;
  align-items: center;
  justify-content: center;
  // Default size (medium)
  font-size: var(--text-sm);
  padding: var(--space-2) var(--space-3);
  min-height: var(--space-6);
  @include φ-radius(var(--radius-full));
  
  // Size variants
  &-small {
    padding: var(--space-1) var(--space-2);
    font-size: var(--text-xs);
    min-height: var(--space-5);
    
    .chip-icon {
      font-size: var(--icon-xs);
    }
    
    .chip-close {
      width: var(--space-3);
      height: var(--space-3);
      
      i {
        font-size: calc(var(--icon-xs) * 0.85);
      }
    }
  }
  
  &-large {
    padding: var(--space-2) var(--space-4);
    font-size: var(--text-base);
    min-height: var(--space-8);
    
    .chip-icon {
      font-size: var(--icon-base);
    }
    
    .chip-close {
      width: var(--space-5);
      height: var(--space-5);
      
      i {
        font-size: var(--icon-sm);
      }
    }
  }
  
  // Style variants (badge, chip, status behaviors)
  &-badge {
    @extend %badge-base;
    text-transform: uppercase;
    letter-spacing: var(--tracking-wide);
    font-weight: var(--font-bold);
    @include φ-radius(var(--radius-full));
  }
  
  &-status {
    font-weight: var(--font-medium);
    text-transform: none;
    @include φ-radius(var(--radius-sm));
  }
  
  // Semantic variants using existing system
  @include semantic-variants((primary, secondary, success, warning, error, info));
  
  &-secondary {
    background: var(--color-surface);
    color: var(--color-text-muted);
    border-color: var(--color-border);
    
    &:hover {
      background: var(--color-surface-elevated);
    }
    
    .chip-icon {
      color: var(--color-text-muted);
    }
  }
  
  &-pending {
    background: var(--color-surface);
    color: var(--color-text-muted);
    border-color: var(--color-border);
    
    .chip-icon {
      color: var(--color-text-muted);
    }
  }
  
  &-processing {
    @include semantic-tint(info, 10);
    color: var(--color-info-dark);
    border-color: var(--color-info);
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite; // Using existing pulse animation from _animations.scss
    
    .chip-icon {
      color: var(--color-info);
    }
  }
  
  // Density variants using φ-system
  &-compact {
    padding: var(--space-0-5) var(--space-1);
    font-size: var(--text-2xs);
    gap: var(--space-0-5);
  }
  
  &-dense {
    padding: var(--space-1) var(--space-1-5);
    font-size: var(--text-xs);
    gap: var(--space-0-5);
  }
  
  &-spacious {
    padding: var(--space-3) var(--space-6);
    font-size: var(--text-lg);
    gap: var(--space-3);
  }
  
  // Interaction states
  &-clickable {
    @include interactive-base(chip);
    cursor: pointer;
  }
  
  &-selected {
    border-width: 2px;
    @include φ-elevation(var(--shadow-md));
  }
  
  &-disabled {
    opacity: var(--opacity-disabled);
    cursor: not-allowed;
    pointer-events: none;
  }
  
  // Icon styling
  &-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    background: transparent !important;
    color: inherit;
    flex-shrink: 0;
    width: auto;
    height: auto;
    font-size: inherit;
    line-height: 1;
    
    // Remove excessive margins - use minimal spacing
    margin-right: var(--space-0-5);
    
    &:last-child {
      margin-right: 0;
    }
  }
  
  // Text content
  &-text {
    line-height: 1;
    flex-shrink: 0;
  }
  
  // Close button
  &-close {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    margin-left: var(--space-0-5);
    background: transparent;
    cursor: pointer;
    flex-shrink: 0;
    border: none;
    padding: 0;
    @include φ-sizes(width, var(--space-4));
    @include φ-sizes(height, var(--space-4));
    @include φ-radius(var(--radius-full));
    
    &:hover {
      background: var(--color-surface);
    }
    
    i {
      font-size: var(--icon-xs);
      line-height: 1;
    }
  }
  
  &-closeable {
    // Remove excessive right padding - let natural padding handle it
    position: relative;
  }
}

