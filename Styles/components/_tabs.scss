

@use '../abstracts' as *;
@use 'sass:map';

$tab-sizes: (
  'xs': (
    'height': 2rem,
    'font-size': var(--text-xs),
    'icon-size': var(--text-sm)
  ),
  'sm': (
    'height': 2.25rem,
    'font-size': var(--text-sm),
    'icon-size': var(--text-base)
  ),
  'md': (
    'height': 2.5rem,
    'font-size': var(--text-base),
    'icon-size': var(--text-lg)
  ),
  'lg': (
    'height': 2.75rem,
    'font-size': var(--text-lg),
    'icon-size': var(--text-xl)
  ),
  'xl': (
    'height': 3rem,
    'font-size': var(--text-xl),
    'icon-size': var(--text-2xl)
  )
);

$tab-densities: (
  'compact': (
    'padding-x': var(--space-2),
    'padding-y': var(--space-1),
    'gap': var(--space-1)
  ),
  'dense': (
    'padding-x': var(--space-3),
    'padding-y': var(--space-2),
    'gap': var(--space-1)
  ),
  'normal': (
    'padding-x': var(--space-4),
    'padding-y': var(--space-3),
    'gap': var(--space-2)
  ),
  'spacious': (
    'padding-x': var(--space-6),
    'padding-y': var(--space-4),
    'gap': var(--space-3)
  )
);

$tab-variants: (
  'default': (
    'nav-bg': linear-gradient(135deg, var(--theme-glass-light-bg) 0%, var(--theme-glass-medium-bg) 50%, var(--theme-glass-light-bg) 100%),
    'nav-border': var(--theme-glass-border),
    'content-bg': var(--color-surface-elevated),
    'indicator-display': none
  ),
  'pills': (
    'nav-bg': var(--color-surface),
    'nav-border': none,
    'content-bg': var(--color-surface-elevated),
    'indicator-display': none
  ),
  'underline': (
    'nav-bg': transparent,
    'nav-border': var(--border-2) solid var(--color-border),
    'content-bg': transparent,
    'indicator-display': block
  ),
  'glass': (
    'nav-bg': color-mix(in srgb, var(--color-surface-elevated) 5%, transparent),
    'nav-border': var(--glass-light-border),
    'content-bg': transparent,
    'indicator-display': none
  ),
  'elevated': (
    'nav-bg': var(--color-surface-elevated),
    'nav-border': none,
    'content-bg': var(--color-surface-elevated),
    'indicator-display': none
  ),
  'segment': (
    'nav-bg': var(--color-surface),
    'nav-border': var(--border-1) solid var(--color-border),
    'content-bg': var(--color-surface-elevated),
    'indicator-display': none
  ),
  'card': (
    'nav-bg': var(--color-surface-elevated),
    'nav-border': var(--border-1) solid var(--color-border),
    'content-bg': var(--color-surface-elevated),
    'indicator-display': none
  )
);

.tabs {
  @extend %card-base-enhanced;
  display: flex;
  flex-direction: column;
  width: 100%;
  max-width: 100%;
  overflow: hidden;
  container-type: inline-size;
  container-name: tabs-container;

contain: layout style paint;
  will-change: auto;

min-height: 0;
  flex-shrink: 1;

&::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: var(--border-1);
    background: linear-gradient(90deg,
      transparent 0%,
      var(--color-primary) 50%,
      transparent 100%);
    opacity: var(--opacity-60);
    z-index: var(--z-base);
  }

&-nav {
    position: relative;
    display: flex;
    padding: var(--space-2) var(--space-3);
    backdrop-filter: var(--glass-medium-blur);
    flex-shrink: 0;
    max-width: 100%;
    overflow: hidden;
    min-height: 44px;

@media (max-width: 375px) {
      padding: var(--space-1) var(--space-2);
      min-height: 40px;
    }

@media (max-width: 640px) and (orientation: portrait) {
      padding: var(--space-1) var(--space-2);
    }

@media (max-width: 896px) and (orientation: landscape) {
      padding: var(--space-1) var(--space-2);
      min-height: 36px;
    }

@include responsive-between(md, lg) {
      padding: var(--space-2) var(--space-3);
    }

@media (min-width: 2560px) {
      padding: var(--space-3) var(--space-4);
    }

&-container {
      flex: 1;
      overflow: hidden;
      position: relative;
      min-width: 0;
      max-width: 100%;
    }

    &-wrapper {
      display: flex;
      gap: var(--space-2);
      overflow-x: auto;
      overflow-y: hidden;
      scroll-behavior: smooth;
      -webkit-overflow-scrolling: touch;
      scrollbar-width: none;
      -ms-overflow-style: none;
      height: fit-content;
      width: auto;
      max-width: 100%;
      min-width: 0;
      flex: 1 1 auto;
      box-sizing: border-box;
      scroll-snap-type: x mandatory;
      scroll-padding: var(--space-2);

      &::-webkit-scrollbar {
        display: none;
      }

@media (max-width: 375px) {
        gap: var(--space-0-5);
      }

      @media (max-width: 640px) {
        gap: var(--space-1);
      }

      @media (orientation: landscape) and (max-height: 500px) {
        gap: var(--space-1);
      }

@media (hover: none) and (pointer: coarse) {
        gap: var(--space-2);
        scroll-padding: var(--space-3);
      }
    }

&-arrow {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      width: 2rem;
      height: 2rem;
      border: none;
      border-radius: var(--radius-md);
      z-index: var(--z-above);
      opacity: 0;
      pointer-events: none;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all var(--duration-normal) var(--ease-out);
      
      // Subtle theme-aware design
      background: color-mix(in srgb, var(--color-surface-elevated) 40%, transparent);
      backdrop-filter: blur(6px);
      border: 1px solid color-mix(in srgb, var(--color-border) 20%, transparent);
      box-shadow: 0 1px 4px color-mix(in srgb, var(--color-text) 8%, transparent);

      @include responsive-max(md) {
        width: 1.75rem;
        height: 1.75rem;
      }

      &:hover {
        background: color-mix(in srgb, var(--color-surface-elevated) 70%, transparent);
        border-color: color-mix(in srgb, var(--color-border) 40%, transparent);
        box-shadow: 0 2px 8px color-mix(in srgb, var(--color-text) 12%, transparent);
        transform: translateY(-50%) scale(1.02);

        i {
          color: var(--color-primary);
        }
      }

      &:active {
        transform: translateY(-50%) scale(0.95);
      }

      &-visible {
        opacity: 0.5;
        pointer-events: auto;
        
        &:hover {
          opacity: 0.9;
        }
      }

      &-left {
        left: var(--space-2);
      }

      &-right {
        right: var(--space-2);
      }

      i {
        font-size: 1rem;
        color: var(--color-text-muted);
        transition: color var(--duration-normal) var(--ease-out);
        line-height: 1;

        @include responsive-max(md) {
          font-size: 0.875rem;
        }
      }
    }

&::before,
    &::after {
      content: '';
      position: absolute;
      top: 0;
      bottom: 0;
      width: var(--space-12);
      pointer-events: none;
      z-index: var(--z-above);
      transition: opacity var(--duration-fast);
      opacity: 0;
    }

    &::before {
      left: 0;
      background: linear-gradient(90deg,
        var(--color-surface-elevated) 0%,
        var(--color-surface-elevated) 30%,
        transparent 100%);
    }

    &::after {
      right: 0;
      background: linear-gradient(-90deg,
        var(--color-surface-elevated) 0%,
        var(--color-surface-elevated) 30%,
        transparent 100%);
    }

    &-scrollable {
      &::before,
      &::after {
        opacity: 0.95;
      }
    }
  }

&-indicator {
    position: absolute;
    bottom: 0;
    height: 3px;
    background: linear-gradient(90deg,
      transparent 0%,
      var(--color-primary) 15%,
      var(--color-primary) 85%,
      transparent 100%);
    border-radius: var(--radius-full);
    z-index: var(--z-above);
    opacity: 1;
    display: none; // Hidden by default, shown only for specific variants
    box-shadow:
      0 0 12px var(--color-primary),
      0 0 24px color-mix(in srgb, var(--color-primary) 30%, transparent);
    left: var(--indicator-left, 0);
    width: var(--indicator-width, 0);

transition: left var(--duration-normal) var(--ease-out),
                width var(--duration-normal) var(--ease-out),
                opacity var(--duration-fast) var(--ease-out);
    will-change: left, width;

&::before {
      content: '';
      position: absolute;
      top: -2px;
      left: -4px;
      right: -4px;
      bottom: -2px;
      background: linear-gradient(90deg,
        transparent 0%,
        var(--color-primary) 20%,
        var(--color-primary) 80%,
        transparent 100%);
      border-radius: inherit;
      opacity: 0.4;
      filter: blur(8px);
      z-index: -1;
      animation: breathe var(--duration-extended) ease-in-out infinite;
    }

    @include responsive-max(md) {
      height: 2px;
      box-shadow:
        0 0 8px var(--color-primary),
        0 0 16px color-mix(in srgb, var(--color-primary) 20%, transparent);

      &::before {
        top: -1px;
        bottom: -1px;
        filter: blur(6px);
        opacity: 0.3;
      }
    }
  }

&-tab {
    @extend %button-base;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-2xl);
    color: var(--color-text-muted);
    background: transparent;
    border: 1px solid transparent;
    cursor: pointer;
    transition: all var(--duration-normal) var(--ease-out),
                transform var(--duration-fast) var(--ease-spring),
                box-shadow var(--duration-normal) var(--ease-out);
    white-space: nowrap;
    position: relative;
    flex: 0 0 auto;
    min-width: fit-content;
    max-width: none;
    overflow: visible;
    text-overflow: ellipsis;
    text-align: center;
    scroll-snap-align: start;

    height: 2.5rem;
    padding: var(--space-3) var(--space-4);
    gap: var(--space-2);
    font-size: var(--text-base);

@media (max-width: 320px) {
      height: 2.25rem;
      padding: var(--space-1) var(--space-1-5);
      font-size: var(--text-3xs);
      gap: var(--space-0-5);
      min-width: 60px;

    }

@media (min-width: 321px) and (max-width: 375px) {
      height: 2.5rem;
      padding: var(--space-1) var(--space-2);
      font-size: var(--text-2xs);
      gap: var(--space-1);

    }

@media (min-width: 376px) and (max-width: 640px) {
      height: 2.75rem;
      padding: var(--space-2) var(--space-3);
      font-size: var(--text-xs);

    }

@media (max-width: 896px) and (orientation: landscape) {
      height: 2.25rem;
      padding: var(--space-1) var(--space-2);
      font-size: var(--text-2xs);

    }

@media (min-width: 641px) and (max-width: 1024px) and (orientation: portrait) {
      height: 3rem;
      padding: var(--space-2) var(--space-4);
      font-size: var(--text-sm);

    }

@media (min-width: 641px) and (max-width: 1024px) and (orientation: landscape) {
      height: 2.75rem;
      padding: var(--space-2) var(--space-3);
      font-size: var(--text-xs);

    }

@media (min-width: 1025px) and (max-width: 1440px) {
      height: 3rem;
      padding: var(--space-3) var(--space-4);
      font-size: var(--text-sm);

    }

@media (min-width: 1441px) and (max-width: 1920px) {
      height: 3.25rem;
      padding: var(--space-3) var(--space-5);
      font-size: var(--text-base);

    }

@media (min-width: 1921px) {
      height: 3.5rem;
      padding: var(--space-3) var(--space-6);
      font-size: var(--text-base);

    }

@media (aspect-ratio > 21/9) {

      min-width: 120px;
    }

    @media (aspect-ratio < 4/3) {

      min-width: 80px;
    }

@media (hover: none) and (pointer: coarse) {
      min-height: 44px;
      @include touch-friendly;
    }

@container tabs-container (max-width: 400px) {
      height: 2.5rem;
      padding: var(--space-1) var(--space-2);
      font-size: var(--text-2xs);
      min-width: 60px;
    }

    @container tabs-container (min-width: 401px) and (max-width: 600px) {
      height: 2.75rem;
      padding: var(--space-2) var(--space-3);
      font-size: var(--text-xs);
      min-width: 80px;
    }

    @container tabs-container (min-width: 601px) and (max-width: 900px) {
      height: 3rem;
      padding: var(--space-2) var(--space-4);
      font-size: var(--text-sm);
      min-width: 100px;
    }

    @container tabs-container (min-width: 901px) {
      height: 3.25rem;
      padding: var(--space-3) var(--space-5);
      font-size: var(--text-base);
      min-width: 120px;
    }

    .icon {
      font-size: inherit;
      line-height: 1;
    }

&::before {
      content: '';
      position: absolute;
      inset: 0;
      background: linear-gradient(135deg,
        color-mix(in srgb, var(--color-surface-elevated) 10%, transparent) 0%,
        transparent 50%,
        color-mix(in srgb, var(--color-surface-elevated) 5%, transparent) 100%);
      opacity: 0;
      transition: opacity var(--duration-normal) var(--ease-out);
      border-radius: inherit;
      z-index: 0;
    }

& > * {
      position: relative;
      z-index: var(--z-base);
    }

& > span {
      display: flex;
      align-items: center;
      line-height: 1;
    }

    &-icon {
      font-size: var(--icon-base);
      line-height: 1;
      flex-shrink: 0;
      color: inherit;
      transition: color var(--duration-fast) var(--ease-out);
      display: flex;
      align-items: center;
      justify-content: center;

@media (max-width: 375px) {
        font-size: var(--icon-xs);
      }

      @media (max-width: 640px) {
        font-size: var(--icon-sm);
      }

      @media (orientation: landscape) and (max-height: 500px) {
        font-size: var(--icon-xs);
      }

      &-start {
        margin-right: var(--space-1);

        @media (max-width: 375px) {
          margin-right: var(--space-0-5);
        }
      }
      &-end {
        margin-left: var(--space-1);

        @media (max-width: 375px) {
          margin-left: var(--space-0-5);
        }
      }

@media (max-width: 320px) {
        & ~ span {
          display: none;
        }
      }
    }

&-close {
      @extend %button-base;
      margin-left: var(--space-1);
      padding: var(--space-0-5);
      border-radius: var(--radius-sm);
      background: transparent;
      border: none;
      color: var(--color-text-muted);
      cursor: pointer;
      transition: all var(--duration-fast) var(--ease-out);
      display: inline-flex;
      align-items: center;
      justify-content: center;
      min-width: 1.5rem;
      min-height: 1.5rem;
      
      &:hover {
        background: var(--color-surface);
        color: var(--color-error);
        transform: scale(1.1);
      }
      
      &:active {
        transform: scale(0.95);
      }

      i {
        font-size: var(--text-xs);
      }
    }

    &.tab-active,
    &.tabs-tab-active {
      color: var(--color-primary);
      background: color-mix(in srgb, var(--color-primary) 8%, transparent);
      border-color: color-mix(in srgb, var(--color-primary) 20%, transparent);
      position: relative;
      font-weight: var(--font-semibold);
      text-shadow: 0 0 8px color-mix(in srgb, var(--color-primary) 20%, transparent);
      
      &::before {
        opacity: 1;
      }
    }

&-disabled,
    &:disabled,
    &[disabled] {
      opacity: var(--opacity-disabled);
      cursor: not-allowed;
      pointer-events: none;
    }

    &-has-loading {
      position: relative;
    }

    &-icon-container {
      position: relative;
      display: inline-flex;
      align-items: center;
      justify-content: center;
    }

    &-icon-dimmed {
      opacity: 0.3;
    }

    // Loading spinner in tab
    .loading-spinner {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      
      // Ensure proper vertical alignment with text
      vertical-align: middle;
      
      // Prevent layout shift
      flex-shrink: 0;
      
      // Override inline size for tabs - make it same size as text
      &-inline {
        width: 1em;
        height: 1em;
        margin-right: var(--space-1-5);
        
        &::before {
          border-width: 1.5px;
        }
        
        &::after {
          display: none; // Remove outer ring for cleaner look
        }
      }
    }
    
    &-loading-overlay {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: var(--z-base);
    }

    &-badge {
      @extend %badge-base;
      margin-left: var(--space-1-5);
      padding: 0 var(--space-1-5);
      font-size: var(--text-3xs);
      font-weight: var(--font-semibold);
      background: var(--color-surface-elevated);
      color: var(--color-text-muted);
      border: 1px solid var(--color-border);
      border-radius: var(--radius-full);
      line-height: 1.2;
      min-width: 1.25rem;
      height: 1.25rem;
      text-align: center;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      flex-shrink: 0;
      align-self: center;
      
      // Ensure badge is visible
      z-index: var(--z-base);
      position: relative;

      &-danger {
        background: var(--color-error);
        color: var(--color-text-inverse);
        border-color: var(--color-error);
      }
      &-warning {
        background: var(--color-warning);
        color: var(--color-text-inverse);
        border-color: var(--color-warning);
      }
      &-success {
        background: var(--color-success);
        color: var(--color-text-inverse);
        border-color: var(--color-success);
      }
    }

    &-add-button {
      min-width: 2.75rem;
      justify-content: center;
      color: var(--color-text-muted);

    }
  }

  &-content {
    flex: 1;
    padding: var(--space-6);
    background: var(--color-surface-elevated);
    color: var(--color-text);
    position: relative;
    overflow: visible;
    min-height: 200px;
    container-type: inline-size;
    container-name: tab-content;
    
    // Positioning context for tab panels
    contain: layout style;

@media (max-width: 375px) {
      padding: var(--space-2);
      min-height: 100px;
    }

    @media (min-width: 376px) and (max-width: 640px) {
      padding: var(--space-3);
      min-height: 150px;
    }

    @media (min-width: 641px) and (max-width: 1024px) {
      padding: var(--space-4);
      min-height: 200px;
    }

    @media (min-width: 1025px) and (max-width: 1440px) {
      padding: var(--space-5);
      min-height: 250px;
    }

    @media (min-width: 1441px) {
      padding: var(--space-6);
      min-height: 300px;
    }

@media (orientation: landscape) and (max-height: 500px) {
      padding: var(--space-2) var(--space-4);
      min-height: calc(100vh - 120px);
    }

@container tab-content (max-width: 400px) {
      padding: var(--space-2);
    }

    @container tab-content (min-width: 401px) and (max-width: 800px) {
      padding: var(--space-3);
    }

    @container tab-content (min-width: 801px) {
      padding: var(--space-4);
    }

    &-no-padding {
      padding: 0;

      .tabs-panel {
        padding: 0;
        margin: 0;
      }
    }
  }

  &-panel {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    opacity: 0;
    transform: translateY(8px);
    transition: all var(--duration-normal) var(--ease-out);
    height: auto;
    overflow: visible;
    box-sizing: border-box;
    pointer-events: none;
    visibility: hidden;

&:active,
    &:focus {
      transform: translateY(8px);
      outline: none;
      box-shadow: none;
    }

    @include responsive-max(md) {
      transform: translateY(4px);
      transition: all var(--duration-fast) var(--ease-out);
    }

    &.tabs-panel-active {
      position: relative;
      opacity: 1;
      transform: translateY(0);
      pointer-events: auto;
      visibility: visible;

&:active,
      &:focus {
        transform: translateY(0);
        outline: none;
        box-shadow: none;
      }
    }

    &-fade-only {
      transform: none;

      &.tabs-panel-active {
        transform: none;
      }
    }
  }

  @each $variant-name, $variant-props in $tab-variants {
    &-#{$variant-name} {
      @if $variant-name == 'underline' {
        background: transparent;
        box-shadow: none;
        border: none;
      }
      @if $variant-name == 'glass' {
        background: var(--glass-bg-medium);
        backdrop-filter: blur(var(--blur-lg));
        border: var(--border-1) solid var(--glass-border-light);

.tabs-tab {
          &.tab-active {
            color: var(--color-primary);
            background: var(--glass-bg-light);
            backdrop-filter: blur(var(--blur-md));
            border: var(--border-1) solid var(--color-border);
            font-weight: var(--font-semibold);
          }
        }
      }
      @if $variant-name == 'pills' {
        .tabs-nav {
          background: var(--color-surface);
          border-radius: var(--radius-full);
          padding: var(--space-1);
          margin: var(--space-2);
          border: none;
        }

        .tabs-tab {
          border-radius: var(--radius-full);

          &.tab-active {
            background: var(--color-primary);
            color: var(--color-text-inverse);
            box-shadow: var(--shadow-md);
            font-weight: var(--font-medium);
          }
        }

        .tabs-content {
          border-radius: 0 0 var(--radius-xl) var(--radius-xl);
        }
      }
      @if $variant-name == 'elevated' {
        background: var(--color-surface-elevated);
        box-shadow: var(--shadow-lg);
        border: none;

        .tabs-nav {
          background: var(--color-surface-elevated);
          border-radius: var(--radius-lg) var(--radius-lg) 0 0;
          border: none;
        }

        .tabs-tab {
          &.tab-active {
            color: var(--color-primary);
            background: color-mix(in srgb, var(--color-primary) 10%, transparent);
            font-weight: var(--font-semibold);
          }
        }
      }
      @if $variant-name == 'segment' {
        .tabs-nav {
          background: var(--color-surface);
          border: var(--border-1) solid var(--color-border);
          border-radius: var(--radius-lg);
          padding: var(--space-1);
          gap: 0;
        }

        .tabs-tab {
          border-radius: var(--radius-md);
          margin: 0;

          &.tab-active {
            background: var(--color-surface-elevated);
            color: var(--color-primary);
            box-shadow: var(--shadow-sm);
            font-weight: var(--font-medium);
          }
        }
      }
      @if $variant-name == 'card' {
        background: transparent;
        box-shadow: none;

        .tabs-nav {
          background: transparent;
          border: none;
          padding: 0;
          gap: var(--space-1);
        }

        .tabs-tab {
          background: var(--color-surface-elevated);
          border: var(--border-1) solid var(--color-border);
          border-radius: var(--radius-lg) var(--radius-lg) 0 0;
          position: relative;

          &.tab-active,
          &.tabs-tab-active {
            background: var(--color-surface-elevated);
            color: var(--color-primary);
            border-bottom-color: var(--color-surface-elevated);
            font-weight: var(--font-semibold);
            z-index: var(--z-above);
            margin-bottom: -1px;
            
            // Create seamless connection by covering the content border
            &::after {
              content: '';
              position: absolute;
              bottom: -1px;
              left: 0;
              right: 0;
              height: 1px;
              background: var(--color-surface-elevated);
              z-index: var(--z-above);
            }
          }
        }

        .tabs-content {
          border: var(--border-1) solid var(--color-border);
          border-radius: 0 var(--radius-lg) var(--radius-lg) var(--radius-lg);
          margin-top: 0;
          position: relative;
          z-index: var(--z-base);
        }
      }

      .tabs-nav {
        background: map.get($variant-props, 'nav-bg');

        @if map.get($variant-props, 'nav-border') {
          border-bottom: map.get($variant-props, 'nav-border');
        }

        @if $variant-name == 'underline' {
          border-radius: 0;
          padding: 0;
          gap: var(--space-6);
        }

@if $variant-name == 'underline' {
          .tabs-tab {
            &.tab-active {
              color: var(--color-primary);
              background: transparent;
              font-weight: var(--font-semibold);
            }
          }
        }
      }

      .tabs-content {
        background: map.get($variant-props, 'content-bg');

        @if $variant-name == 'underline' {
          padding-top: var(--space-6);
        }
      }

      .tabs-indicator {
        @if map.get($variant-props, 'indicator-display') == block {
          display: block;
          
          @if $variant-name == 'underline' {
            // Ensure underline indicator has proper positioning
            bottom: -1px; // Position just below the tab border
            height: 2px; // Thinner for underline style
            border-radius: 0; // Sharp edges for underline
            background: var(--color-primary); // Solid color, no gradient
            box-shadow: none; // No glow effect for underline
          }
        } @else {
          display: none;
        }
      }
    }
  }

&-vertical {
    flex-direction: row;
    align-items: stretch;
    min-height: 400px;

    .tabs-nav {
      display: flex;
      flex-direction: column;
      border-bottom: none;
      border-right: var(--border-1) solid var(--color-border);
      min-width: 12rem;
      max-width: 20rem;
      width: auto;
      padding: var(--space-2);
      height: auto;
      flex-shrink: 0;
      
      &-container {
        display: flex;
        flex-direction: column;
        overflow-y: auto;
        overflow-x: hidden;
        max-height: 100%;
        height: 100%;
      }
      
      &-wrapper {
        display: flex;
        flex-direction: column;
        overflow-x: hidden;
        overflow-y: auto;
        width: 100%;
        height: 100%;
        gap: var(--space-1);
      }
      
      &-arrow {
        display: none;
      }
    }
    
    .tabs-indicator {
      left: auto;
      right: 0;
      top: var(--indicator-top, 0);
      bottom: auto;
      width: 3px;
      height: var(--indicator-height, 0);
      transition: top var(--duration-normal) var(--ease-out),
                  height var(--duration-normal) var(--ease-out),
                  opacity var(--duration-fast) var(--ease-out);
    }

    .tabs-tab {
      justify-content: flex-start;
      width: 100%;
      text-align: left;
      border-radius: var(--radius-lg);
      flex-shrink: 0;
      
      &.tab-active,
      &.tabs-tab-active {
        background: color-mix(in srgb, var(--color-primary) 12%, transparent);
      }
    }

    .tabs-content {
      display: flex;
      flex-direction: column;
      flex: 1;
      min-width: 0;
      overflow: auto;
      height: 100%;
    }
    
    &.tabs-card {
      .tabs-nav {
        border-right: none;
        padding: 0;
        gap: 0;
      }
      
      .tabs-tab {
        border-radius: var(--radius-lg) 0 0 var(--radius-lg);
        margin-bottom: var(--space-1);
        
        &:last-child {
          margin-bottom: 0;
        }
        
        &.tab-active,
        &.tabs-tab-active {
          border-right-color: var(--color-surface-elevated);
          margin-right: -1px;
          z-index: var(--z-above);
        }
      }
      
      .tabs-content {
        border-radius: 0 var(--radius-lg) var(--radius-lg) 0;
        margin-left: -1px;
      }
    }
    
    &.tabs-pills {
      .tabs-nav {
        border-right: none;
        background: var(--color-surface);
        border-radius: var(--radius-lg);
        padding: var(--space-2);
        margin-right: var(--space-2);
      }
      
      .tabs-tab {
        border-radius: var(--radius-full);
      }
    }
    
    &.tabs-underline {
      .tabs-nav {
        border-right: var(--border-2) solid var(--color-border);
        padding-right: 0;
      }
      
      .tabs-indicator {
        width: 2px;
      }
    }
  }

&-scrollable-content {
    .tabs-content {
      overflow-y: auto;
      max-height: 95vh;
      scrollbar-width: thin;
      -ms-overflow-style: auto;

      @include responsive-max(md) {
        max-height: 90vh;
      }

      @include responsive-max(sm) {
        max-height: 85vh;
      }

&::-webkit-scrollbar {
        width: 6px;
      }

      &::-webkit-scrollbar-track {
        background: var(--color-surface);
        border-radius: var(--radius-sm);
      }

      &::-webkit-scrollbar-thumb {
        background: var(--color-border);
        border-radius: var(--radius-sm);

        }
    }
  }
}

.tab-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  gap: var(--space-4);
  margin-bottom: var(--space-6);

  @include responsive-max(md) {
    flex-direction: column;
    align-items: stretch;
    gap: var(--space-3);
    margin-bottom: var(--space-4);
  }

  &-content {
    flex: 1;
    min-width: 0;
  }

  &-title {
    margin: 0 0 var(--space-1) 0;
    font-size: var(--text-2xl);
    font-weight: var(--font-semibold);
    color: var(--color-text);
    display: flex;
    align-items: center;
    gap: var(--space-2);

    @include responsive-max(md) {
      font-size: var(--text-xl);
    }
  }

  &-subtitle {
    margin: 0;
    font-size: var(--text-sm);
    color: var(--color-text-muted);
    line-height: var(--leading-relaxed);
  }

  &-actions {
    display: flex;
    gap: var(--space-2);
    flex-wrap: wrap;

    @include responsive-max(md) {
      width: 100%;
      justify-content: stretch;

      > .button {
        flex: 1;
      }
    }
  }
}

.tab-content {
  display: flex;
  flex-direction: column;
  gap: var(--space-6);

  @include responsive-max(md) {
    gap: var(--space-4);
  }

  &-loading {
    position: relative;
    min-height: 20rem;

    &::after {
      content: '';
      position: absolute;
      inset: 0;
      background: var(--overlay-light);
      backdrop-filter: var(--glass-light-blur);
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: inherit;
    }
  }
}

@each $size-name, $size-props in $tab-sizes {
  .tabs-#{$size-name} {
    .tabs-tab {
      height: map.get($size-props, 'height');
      font-size: map.get($size-props, 'font-size');
      
      .icon {
        font-size: map.get($size-props, 'icon-size');
      }
    }
    
    .tabs-indicator {
      @if $size-name == 'xs' {
        height: 2px;
      } @else if $size-name == 'sm' {
        height: 2px;
      } @else if $size-name == 'md' {
        height: 3px;
      } @else if $size-name == 'lg' {
        height: 3px;
      } @else if $size-name == 'xl' {
        height: 4px;
      }
    }
  }
}

@each $density-name, $density-props in $tab-densities {
  .tabs-density-#{$density-name} {
    .tabs-nav {
      gap: map.get($density-props, 'gap');
      
      @if $density-name == 'compact' {
        padding: var(--space-1) var(--space-2);
      } @else if $density-name == 'dense' {
        padding: var(--space-1-5) var(--space-3);
        margin-bottom: -1px; // Better visual continuity
      } @else if $density-name == 'normal' {
        padding: var(--space-2) var(--space-3);
      } @else if $density-name == 'spacious' {
        padding: var(--space-3) var(--space-4);
      }
    }
    
    .tabs-tab {
      padding-left: map.get($density-props, 'padding-x');
      padding-right: map.get($density-props, 'padding-x');
      padding-top: map.get($density-props, 'padding-y');
      padding-bottom: map.get($density-props, 'padding-y');
      gap: map.get($density-props, 'gap');
    }
    
    .tabs-content {
      @if $density-name == 'compact' {
        padding: var(--space-3);
      } @else if $density-name == 'dense' {
        padding: var(--space-4);
      } @else if $density-name == 'normal' {
        padding: var(--space-6);
      } @else if $density-name == 'spacious' {
        padding: var(--space-8);
      }
    }
  }
}
