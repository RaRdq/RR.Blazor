// RR.Blazor List Component - Consolidation using &- patterns
@use '../abstracts' as *;

// Virtual list container with dynamic height support
.list[style*="--container-height"] {
  height: var(--container-height);
  overflow-y: auto;
}

// Virtual list item with dynamic height support
.list-item[style*="--item-min-height"] {
  min-height: var(--item-min-height);
}

// Load more positioning support
.text-center[style*="--load-more-position"] {
  position: var(--load-more-position);
  bottom: var(--load-more-bottom);
}

// List System - All list components consolidated
.list {
  // Base list container
  display: flex;
  flex-direction: column;
  gap: var(--space-3);
  
  // Size variants
  &-compact {
    gap: var(--space-2);
  }
  &-spacious {
    gap: var(--space-6);
  }
  &-loose {
    gap: var(--space-8);
  }
  
  // Layout variants
  &-horizontal {
    flex-direction: row;
    flex-wrap: wrap;
    align-items: center;
    
    @include responsive-max(sm) {
      flex-direction: column;
    }
  }
  
  &-divided {
    gap: 0;
    
    .list-item {
      border-bottom: var(--border-1) solid var(--color-border);
      
      &:last-child {
        border-bottom: none;
      }
    }
  }

  // List Item - Design with comprehensive state system
  &-item {
    display: flex;
    align-items: center;
    gap: var(--space-4);
    padding: var(--space-4);
    background: var(--color-surface-elevated);
    border-radius: var(--radius-lg);
    border: var(--border-1) solid var(--color-border);
    transition: background-color var(--duration-fast) var(--ease-out), 
               border-color var(--duration-fast) var(--ease-out),
               box-shadow var(--duration-fast) var(--ease-out),
               transform var(--duration-fast) var(--ease-out);
    min-height: 3.5rem; // Ensure consistent height
    line-height: var(--leading-normal);
    
    @include responsive-max(sm) {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-3);
    }
    
    &:hover {
      transform: translateY(-1px);
      box-shadow: var(--shadow-lg);
      border-color: var(--color-border);
      filter: brightness(1.02) saturate(1.05);
    }
    
    // State modifiers
    &-active {
      background: var(--color-primary);
      border-color: var(--color-primary);
      color: var(--color-text-inverse);
      
      &:hover {
        background: var(--color-primary-hover);
        filter: brightness(1.05) saturate(1.1);
      }
    }
    
    &-clickable {
      cursor: pointer;
      
      &:active {
        transform: translateY(0);
      }
    }
    
    &-disabled {
      opacity: var(--opacity-disabled);
      cursor: not-allowed;
      
      &:hover {
        transform: none;
        box-shadow: none;
      }
    }
    
    // Style variants
    &-flat {
      background: transparent;
      border: none;
      padding: var(--space-3) 0;
      
      &:hover {
        background: var(--state-hover-bg);
        transform: none;
        box-shadow: none;
        filter: brightness(1.02);
      }
    }
    
    &-glass {
      @include glass-enhanced(medium);
    }
    
    &-card {
      background: var(--color-surface-elevated);
      box-shadow: var(--shadow-md);
      border: var(--border-1) solid var(--color-border);
      
      &:hover {
        box-shadow: var(--shadow-xl);
        filter: brightness(1.02) saturate(1.05);
      }
    }

    // List Item Elements - consolidated structure
    &-icon {
      flex-shrink: 0;
      width: 3rem;
      height: 3rem;
      background: linear-gradient(135deg, var(--color-surface) 0%, var(--color-surface) 100%);
      border-radius: var(--radius-lg);
      display: flex;
      align-items: center;
      justify-content: center;
      border: var(--border-1) solid var(--color-border);
      color: var(--color-text-muted);
      
      // Color variants
      &-primary {
        background: var(--color-primary);
        border-color: var(--color-primary);
        color: var(--color-text-inverse);
      }
      &-success {
        background: color-mix(in srgb, var(--color-success) 10%, var(--color-surface));
        border-color: var(--color-success);
        color: var(--color-success);
      }
      &-warning {
        background: color-mix(in srgb, var(--color-warning) 10%, var(--color-surface));
        border-color: var(--color-warning);
        color: var(--color-warning);
      }
      &-error {
        background: color-mix(in srgb, var(--color-error) 10%, var(--color-surface));
        border-color: var(--color-error);
        color: var(--color-error);
      }
      
      // Size variants
      &-small {
        width: 2.5rem;
        height: 2.5rem;
      }
      &-large {
        width: 4rem;
        height: 4rem;
      }
    }
    
    &-content {
      flex: 1;
      min-width: 0;
      display: flex;
      flex-direction: column;
      gap: var(--space-1);
      justify-content: center; // Center content vertically
    }
    
    &-title {
      font-weight: var(--font-semibold);
      color: var(--color-text);
      margin: 0;
      font-size: var(--text-base);
      line-height: var(--leading-snug);
      display: flex;
      align-items: center;
    }
    
    &-subtitle {
      font-size: var(--text-sm);
      color: var(--color-text-muted);
      margin: 0;
      line-height: var(--leading-relaxed);
    }
    
    &-description {
      font-size: var(--text-sm);
      color: var(--color-text-muted);
      margin: var(--space-1) 0 0 0;
      line-height: var(--leading-relaxed);
    }
    
    &-meta {
      display: flex;
      align-items: center;
      gap: var(--space-3);
      margin-top: var(--space-2);
      font-size: var(--text-xs);
      color: var(--color-text-subtle);
      
      @include responsive-max(sm) {
        flex-wrap: wrap;
        gap: var(--space-2);
      }
    }
    
    &-actions {
      flex-shrink: 0;
      display: flex;
      gap: var(--space-2);
      align-items: center;
      justify-content: center; // Center actions vertically
      
      @include responsive-max(sm) {
        width: 100%;
        justify-content: flex-end;
      }
      
      // Ensure action buttons are properly aligned
      .button {
        min-width: 2.5rem;
        min-height: 2.5rem;
        display: inline-flex;
        align-items: center;
        justify-content: center;
      }
    }
    
    &-badge {
      flex-shrink: 0;
      margin-left: auto;
      display: flex;
      align-items: center;
      justify-content: center; // Center badge vertically
      
      @include responsive-max(sm) {
        margin-left: 0;
      }
    }
  }
}

// List Grid - Specialized grid layouts for content lists
.list {
  &-grid {
    display: grid;
    gap: var(--space-4);
    
    // List-specific styling
    &-cards {
      grid-template-columns: repeat(auto-fill, minmax(20rem, 1fr));
      
      @include responsive-max(sm) {
        grid-template-columns: 1fr;
      }
    }
    
    &-cards {
      grid-template-columns: repeat(auto-fill, minmax(16rem, 1fr));
      gap: var(--space-6);
      
      @include responsive-max(sm) {
        grid-template-columns: 1fr;
        gap: var(--space-4);
      }
    }
    
    // Compact grid
    &-compact {
      gap: var(--space-3);
      
      .list-item {
        padding: var(--space-3);
      }
    }
  }
}

// Menu List - Navigation and actions
.menu {
  &-list {
    display: flex;
    flex-direction: column;
    gap: 0;
    background: var(--color-surface-elevated);
    border-radius: var(--radius-xl);
    border: var(--border-1) solid var(--color-border);
    overflow: hidden;
    
    &-item {
      display: flex;
      align-items: center;
      gap: var(--space-3);
      padding: var(--space-4);
      color: var(--color-text-muted);
      text-decoration: none;
      transition: all var(--duration-fast) var(--ease-out);
      border-bottom: var(--border-1) solid var(--color-border);
      
      &:last-child {
        border-bottom: none;
      }
      
      &:hover {
        background: var(--state-hover-bg);
        color: var(--color-text);
        filter: brightness(1.02);
      }
      
      &:active {
        background: var(--color-surface);
      }
      
      // State modifiers
      &-active {
        background: var(--color-primary);
        color: var(--color-text-inverse);
        font-weight: var(--font-medium);
      }
      
      &-disabled {
        opacity: var(--opacity-disabled);
        cursor: not-allowed;
        
        &:hover {
          background: transparent;
          color: var(--color-text-muted);
        }
      }
      
      &-danger {
        color: var(--color-error);
        
        &:hover {
          background: color-mix(in srgb, var(--color-error) 10%, var(--color-surface));
          color: var(--color-error);
        }
      }
    }
    
    &-divider {
      height: var(--border-1);
      background: var(--color-border);
      margin: var(--space-2) 0;
    }
    
    &-header {
      padding: var(--space-3) var(--space-4);
      background: var(--color-surface);
      font-size: var(--text-xs);
      font-weight: var(--font-semibold);
      color: var(--color-text-subtle);
      text-transform: uppercase;
      letter-spacing: var(--tracking-wide);
      border-bottom: var(--border-1) solid var(--color-border);
    }
  }
}

// Avatar List - User listings
.avatar {
  &-list {
    display: flex;
    flex-direction: column;
    gap: var(--space-3);
    
    &-item {
      display: flex;
      align-items: center;
      gap: var(--space-3);
      padding: var(--space-3);
      border-radius: var(--radius-lg);
      transition: background var(--duration-fast) var(--ease-out);
      
      &:hover {
        background: var(--state-hover-bg);
        filter: brightness(1.02);
      }
    }
    
    &-content {
      flex: 1;
      min-width: 0;
    }
    
    &-name {
      font-weight: var(--font-medium);
      color: var(--color-text);
      margin: 0;
      font-size: var(--text-sm);
    }
    
    &-role {
      font-size: var(--text-xs);
      color: var(--color-text-subtle);
      margin: 0;
    }
  }
}

// Avatar component for avatar list
.avatar {
  width: 2.5rem;
  height: 2.5rem;
  border-radius: var(--radius-full);
  background: var(--color-primary);
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--color-text-inverse);
  font-weight: var(--font-semibold);
  font-size: var(--text-sm);
  flex-shrink: 0;
}

// Load More Trigger - for virtual lists and infinite scroll
.load {
  &-more {
    &-trigger {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: var(--space-4);
      font-size: var(--text-sm);
      color: var(--color-text-muted);
      background: transparent;
      border: none;
      cursor: pointer;
      transition: all var(--duration-fast) var(--ease-out);
      border-radius: var(--radius-lg);
      
      &:hover {
        background: var(--state-hover-bg);
        color: var(--color-text);
      }
      
      &:focus-visible {
        outline: none;
        outline-offset: 2px;
      }
      
      &-loading {
        pointer-events: none;
        
        &::after {
          content: '';
          width: 1rem;
          height: 1rem;
          border: 2px solid transparent;
          border-top-color: currentColor;
          border-radius: 50%;
          animation: spin 1s linear infinite;
          margin-left: var(--space-2);
        }
      }
    }
  }
}

// RR.Blazor button integration for list actions
.list {
  // Ensure RR.Blazor buttons work properly in list items
  .button {
    @include button-base;
    
    & {
      min-width: 2.5rem;
      min-height: 2.5rem;
    }
    
    @include responsive-max(md) {
      min-width: 2.75rem; // WCAG AA touch target
      min-height: 2.75rem; // WCAG AA touch target
    }
  }
  
  // Button groups in list items - use main .button-group definition
  .button-group {
    gap: var(--space-1);
    justify-content: center;
    box-shadow: none; // Remove shadow in list context
  }
  
  // Flex containers with buttons
  .flex {
    &:has(.button) {
      align-items: center;
      justify-content: center;
      min-height: 2.5rem;
      
      .button {
        flex-shrink: 0;
      }
    }
  }
}

// Global alignment utilities for data components
.align-middle {
  vertical-align: middle !important;
}

.align-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.align-start {
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
}

.align-end {
  display: flex;
  align-items: flex-end;
  justify-content: flex-end;
}

