@use '../abstracts' as *;

.badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-0-5);
  padding: var(--space-1-5) var(--space-3);
  border-radius: var(--radius-md);
  font-size: var(--text-xs);
  font-weight: var(--font-semibold);
  text-transform: none;
  letter-spacing: 0.025em;
  border: 0;
  white-space: nowrap;
  line-height: 1.2;
  vertical-align: middle;
  position: relative;
  cursor: default;
  user-select: none;
  min-height: var(--space-5);

  @include semantic-variants((primary, secondary, success, warning, error, info), (filled));
  @include semantic-variants((primary, secondary, success, warning, error, info), (outlined, ghost, glass));

  &-outlined-primary { @include semantic-outlined(primary); }
  &-outlined-secondary { @include semantic-outlined(secondary); }

  &-xs {
    padding: var(--space-0-5) var(--space-1-5);
    font-size: var(--text-2xs);
    gap: var(--space-0-5);
    min-height: var(--space-3);
  }

  &-sm {
    padding: var(--space-1) var(--space-2-5);
    font-size: var(--text-xs);
    gap: var(--space-0-5);
    min-height: var(--space-5);
  }

  &-lg {
    padding: var(--space-2) var(--space-4);
    font-size: var(--text-sm);
    gap: var(--space-1);
    min-height: var(--space-7);
  }

  &-xl {
    padding: var(--space-3) var(--space-6);
    font-size: var(--text-base);
    gap: var(--space-2);
    min-height: var(--space-8);
  }

&-compact {
    padding: var(--space-0-5) var(--space-1);
    font-size: var(--text-2xs);
    gap: var(--space-0-5);
    min-height: var(--space-2);
  }

  &-dense {
    padding: var(--space-0-5) var(--space-1-5);
    font-size: var(--text-2xs);
    gap: var(--space-0-5);
    min-height: var(--space-3);
  }

  &-spacious {
    padding: var(--space-1) var(--space-2-5);
    font-size: var(--text-sm);
    gap: var(--space-1);
    min-height: var(--space-6);
  }

  &-pulse { animation: pulse 2s ease-in-out infinite; }
  &-ping {
    &::after {
      content: '';
      position: absolute;
      inset: 0;
      border-radius: inherit;
      background: inherit;
      animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
    }
  }

  &-clickable {
    @include interactive-base(badge);
    @include interactive-touch(badge, true);
    @include interactive-a11y(badge);
  }

  &-neutral {
    background: var(--color-surface-elevated);
    color: var(--color-text);
    border-color: var(--color-border);
  }

    &-pill { border-radius: var(--radius-full); }

  &-dot {
    &::after {
      content: '';
      width: var(--space-1);
      height: var(--space-1);
      border-radius: 50%;
      background: currentColor;
      margin-left: var(--space-0-5);
    }
  }

  &-active {
    @include semantic-base(success);
    min-height: var(--space-5);
    padding: var(--space-1-5) var(--space-3);
  }
  &-inactive {
    @include semantic-base(error);
    min-height: var(--space-5);
    padding: var(--space-1-5) var(--space-3);
  }
  &-pending {
    @include semantic-base(warning);
    animation: pulse 2s ease-in-out infinite;
    min-height: var(--space-5);
    padding: var(--space-1-5) var(--space-3);
  }

  &-priority-critical {
    @include semantic-base(error);
    animation: pulse 1.5s ease-in-out infinite;
  }
  &-priority-high { @include semantic-base(warning); }
  &-priority-medium { @include semantic-base(info); }
  &-priority-low { @include semantic-ghost(neutral, 8); }

  // Intensity variants
  &-muted {
    opacity: 0.7;
    filter: brightness(0.9) saturate(0.8);
  }
  
  &-bold {
    font-weight: var(--font-bold);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transform: scale(1.05);
  }
  
  &-subtle {
    opacity: 0.6;
    background: color-mix(in srgb, var(--color-surface) 95%, transparent);
    color: var(--color-text-secondary);
    border: 1px solid color-mix(in srgb, var(--color-border) 50%, transparent);
  }

  // Style variants
  &-glass {
    @extend %glass-base;
    backdrop-filter: blur(8px) saturate(120%);
    -webkit-backdrop-filter: blur(8px) saturate(120%);
    border: 1px solid var(--glass-border-light);
    box-shadow: var(--shadow-md);
  }
  
  &-neumorphism {
    background: var(--color-surface-elevated);
    border: none;
    box-shadow: var(--shadow-neumorphism);
  }
  
  &-elevated {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.06);
    transform: translateY(-1px);
  }
  
  &-flat {
    box-shadow: none;
    border: none;
  }
  
  &-neon {
    border: 2px solid currentColor;
    box-shadow: 0 0 8px currentColor, inset 0 0 8px currentColor;
    text-shadow: 0 0 4px currentColor;
  }
  
  &-frosted {
    @extend %glass-base;
    backdrop-filter: blur(16px) saturate(140%);
    -webkit-backdrop-filter: blur(16px) saturate(140%);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  }

  span {
    @include flex-center;
    line-height: 1;
  }
}

.button-badge {
  position: absolute;
  top: calc(var(--space-1-5) * -1);
  right: calc(var(--space-1-5) * -1);
  min-width: var(--space-5);
  height: var(--space-5);
  padding: 0 var(--space-1-5);
  background: var(--color-error);
  color: var(--color-text-on-error);
  font-size: var(--text-2xs);
  font-weight: var(--font-bold);
  line-height: 1;
  border-radius: var(--radius-full);
  @include flex-center;
  z-index: var(--z-above);
  border: var(--border-2) solid var(--color-surface);
  box-shadow: var(--shadow-md);
  transition: all var(--duration-fast) var(--ease-out);

&:empty {
    min-width: var(--space-5);
    padding: 0;
  }

&[data-count="99+"] {
    font-size: var(--text-3xs);
    padding: 0 var(--space-1);
    min-width: var(--space-6);
  }

  .button-sm & {
    top: calc(var(--space-1) * -1);
    right: calc(var(--space-1) * -1);
    min-width: var(--space-4);
    height: var(--space-4);
    font-size: var(--text-3xs);
    border-width: var(--border-1);
  }

  .button-lg & {
    top: calc(var(--space-2) * -1);
    right: calc(var(--space-2) * -1);
    min-width: var(--space-6);
    height: var(--space-6);
    font-size: var(--text-xs);
    border-width: var(--border-2);
  }

  .button-xs & {
    top: calc(var(--space-0-5) * -1);
    right: calc(var(--space-0-5) * -1);
    min-width: var(--space-3);
    height: var(--space-3);
    font-size: var(--text-3xs);
    border-width: var(--border-1);
  }

  .button-xl & {
    top: calc(var(--space-2-5) * -1);
    right: calc(var(--space-2-5) * -1);
    min-width: var(--space-6);
    height: var(--space-6);
    font-size: var(--text-sm);
    border-width: var(--border-3);
  }

&-primary {
    background: var(--color-primary);
    color: var(--color-text-inverse);
    box-shadow: var(--shadow-md);
  }

  &-success {
    background: var(--color-success);
    color: var(--color-text-on-success);
    box-shadow: var(--shadow-md);
  }

  &-warning {
    background: var(--color-warning);
    color: var(--color-text-on-warning);
    box-shadow: var(--shadow-md);
  }

  &-info {
    background: var(--color-info);
    color: var(--color-text-on-info);
    box-shadow: var(--shadow-md);
  }

  &-pulse {
    animation: badgePulse 2s ease-in-out infinite;
  }

&-dot {
    min-width: var(--space-3);
    height: var(--space-3);
    padding: 0;
    border-radius: var(--radius-full);
    top: calc(var(--space-0-5) * -1);
    right: calc(var(--space-0-5) * -1);

    .button-sm & {
      min-width: var(--space-2-5);
      height: var(--space-2-5);
      top: calc(var(--space-px) * -1);
      right: calc(var(--space-px) * -1);
    }

    .button-lg & {
      min-width: var(--space-3);
      height: var(--space-3);
      top: calc(var(--space-0-5) * -1);
      right: calc(var(--space-0-5) * -1);
    }
  }

  &-interactive {
    transition: all var(--duration-fast) var(--ease-out);
    cursor: pointer;

    &:focus {
      outline: var(--border-2) solid var(--color-focus);
      outline-offset: var(--offset-2);
    }

    &:hover {
      transform: translateY(calc(var(--offset-1) * -1));
      box-shadow: var(--shadow-sm);
    }
  }

  &-selected {
    border: var(--border-2) solid var(--color-primary);
    background-color: var(--color-primary-light);
    color: var(--color-primary);
  }

  &-enhanced {
    position: relative;

    &::after {
      content: '';
      position: absolute;
      inset: calc(var(--offset-2) * -1);
      border-radius: inherit;
      background: linear-gradient(45deg, transparent, var(--color-primary), transparent);
      opacity: 0;
      transition: opacity var(--duration-normal) var(--ease-out);
      z-index: -1;
    }

    &:hover::after {
      opacity: var(--opacity-10);
    }
  }
}
