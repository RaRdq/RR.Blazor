// RR.Blazor Badge Component - Professional & Theme-aware
@use '../abstracts' as *;

// Badge base - Professional design out of the box
.badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-1);
  padding: var(--space-1) var(--space-3);
  border-radius: var(--radius-full);
  font-size: var(--text-xs);
  font-weight: var(--font-bold);
  text-transform: uppercase;
  letter-spacing: var(--tracking-wide);
  border: var(--border-1) solid var(--color-border-light);
  white-space: nowrap;
  transition: all var(--duration-fast) var(--ease-out);
  background: linear-gradient(135deg, var(--color-background-elevated) 0%, var(--color-background-secondary) 100%);
  box-shadow: var(--shadow-sm);
  line-height: 1;
  vertical-align: middle;
  
  // Icon support handled in utilities/_icons.scss
  &-primary {
    color: var(--color-text-on-primary);
    background: var(--color-interactive-primary);
    border-color: transparent;
    box-shadow: var(--shadow-sm);
  }
  &-secondary {
    color: var(--color-text-on-primary);
    background: var(--color-interactive-secondary);
    border-color: transparent;
    box-shadow: var(--shadow-sm);
  }
  &-success {
    color: var(--color-success-dark);
    background: var(--color-success-light);
    border-color: var(--color-success);
    box-shadow: var(--shadow-sm);
  }
  &-warning {
    color: var(--color-warning-dark);
    background: var(--color-warning-light);
    border-color: var(--color-warning);
    box-shadow: var(--shadow-sm);
  }
  
  &-error,
  &-danger {
    color: var(--color-error-dark);
    background: var(--color-error-light);
    border-color: var(--color-error);
    box-shadow: var(--shadow-sm);
  }
  &-info {
    color: var(--color-info-dark);
    background: var(--color-info-light);
    border-color: var(--color-info);
    box-shadow: var(--shadow-sm);
  }
  
  // Professional state badges - using utility classes
  &-active {
    @extend .state-active !optional;
  }
  &-inactive {
    @extend .state-inactive !optional;
  }
  &-pending {
    @extend .state-pending !optional;
  }
  
  // Size variants
  &-small,
  &-sm {
    padding: 0 var(--space-2);
    font-size: 0.625rem;
    gap: calc(var(--space-px) * 2);
    line-height: 1;
    min-height: 1.25rem;
  }
  
  &-large,
  &-lg {
    padding: var(--space-2) var(--space-4);
    font-size: var(--text-sm);
    gap: var(--space-2);
    line-height: 1;
    min-height: 1.75rem;
  }
  
  // Interactive badges - using utility classes
  &-clickable {
    cursor: pointer;
    transition: var(--transition-normal);
    
    &:hover {
      transform: translateY(-1px);
      box-shadow: var(--shadow-md);
    }
    
    &:active {
      transform: translateY(0);
    }
  }
  
  // Glass variant
  &-glass {
    background: var(--glass-bg-medium);
    backdrop-filter: blur(var(--blur-md));
    border-color: var(--glass-border-light);
  }
  
  // Gradient variant
  &-gradient {
    background: var(--gradient-executive);
    border: none;
    color: var(--color-text-primary);
  }
  
  // Outline variants
  &-outline {
    background: transparent;
    
    &-primary {
      color: var(--color-interactive-primary);
      border-color: var(--color-interactive-primary);
    }
    
    &-success {
      color: var(--color-success);
      border-color: var(--color-success);
    }
    
    &-warning {
      color: var(--color-warning);
      border-color: var(--color-warning);
    }
    
    &-error {
      color: var(--color-error);
      border-color: var(--color-error);
    }
  }
  
  // Pill variant (extra rounded)
  &-pill {
    padding: var(--space-1) var(--space-4);
    border-radius: var(--radius-full);
  }
  
  // Ensure text spans are properly centered
  span {
    display: flex;
    align-items: center;
    justify-content: center;
    line-height: 1;
  }
  
  // Dot indicator
  &-dot {
    &::before {
      content: '';
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background: currentColor;
      margin-right: var(--space-1);
    }
  }
  
  // Priority/Urgency variants - using utility classes
  &-priority-critical {
    @extend .priority-critical !optional;
  }
  &-priority-high {
    @extend .priority-high !optional;
  }
  &-priority-medium {
    @extend .priority-medium !optional;
  }
  &-priority-low {
    @extend .priority-low !optional;
  }
}
