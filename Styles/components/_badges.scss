// RR.Blazor Badge Component - Theme-aware with 2030 Glass Candy Enhancement
@use '../abstracts' as *;

// Badge base - enhanced with glass effects
.badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-1);
  padding: var(--space-1) var(--space-3);
  border-radius: var(--radius-full);
  font-size: var(--text-xs);
  font-weight: var(--font-bold);
  text-transform: uppercase;
  letter-spacing: var(--tracking-wide);
  border: var(--border-1) solid;
  white-space: nowrap;
  line-height: 1;
  vertical-align: middle;
  position: relative;
  overflow: hidden;
  
  // 2030 Glass Enhancement
  backdrop-filter: var(--glass-blur-md) var(--glass-saturate) var(--glass-brightness);
  -webkit-backdrop-filter: var(--glass-blur-md) var(--glass-saturate) var(--glass-brightness);
  transition: all var(--duration-normal) var(--ease-out);
  
  // Glass shimmer effect
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.3),
      transparent
    );
    transition: left var(--duration-slow) var(--ease-out);
  }
  
  &:hover::before {
    left: 100%;
  }
  
  // Enhanced glass candy variants using computed values
  &-primary {
    background: color-mix(in srgb, var(--color-interactive-primary) var(--glass-opacity-medium), transparent);
    border-color: color-mix(in srgb, var(--color-interactive-primary) var(--glass-border-opacity), transparent);
    color: var(--color-interactive-primary);
    box-shadow: 0 8px 25px color-mix(in srgb, var(--color-interactive-primary) var(--shadow-color-opacity), transparent), var(--shadow-sm);
    
    &:hover {
      background: var(--gradient-primary);
      transform: translateY(-1px);
      box-shadow: 0 8px 25px color-mix(in srgb, var(--color-interactive-primary) 25%, transparent), var(--shadow-md);
    }
  }
  
  &-secondary {
    background: color-mix(in srgb, var(--color-neutral) var(--glass-opacity-medium), transparent);
    border-color: color-mix(in srgb, var(--color-neutral) var(--glass-border-opacity), transparent);
    color: var(--color-neutral);
    box-shadow: 0 8px 25px color-mix(in srgb, var(--color-neutral) var(--shadow-color-opacity), transparent), var(--shadow-sm);
    
    &:hover {
      background: var(--gradient-neutral);
      transform: translateY(-1px);
      box-shadow: 0 8px 25px color-mix(in srgb, var(--color-neutral) 25%, transparent), var(--shadow-md);
    }
  }
  
  &-success {
    background: color-mix(in srgb, var(--color-success) var(--glass-opacity-medium), transparent);
    border-color: color-mix(in srgb, var(--color-success) var(--glass-border-opacity), transparent);
    color: var(--color-success);
    box-shadow: 0 8px 25px color-mix(in srgb, var(--color-success) var(--shadow-color-opacity), transparent), var(--shadow-sm);
    
    &:hover {
      background: var(--gradient-success);
      transform: translateY(-1px);
      box-shadow: 0 8px 25px color-mix(in srgb, var(--color-success) 25%, transparent), var(--shadow-md);
    }
  }
  
  &-warning {
    background: color-mix(in srgb, var(--color-warning) var(--glass-opacity-medium), transparent);
    border-color: color-mix(in srgb, var(--color-warning) var(--glass-border-opacity), transparent);
    color: var(--color-warning);
    box-shadow: 0 8px 25px color-mix(in srgb, var(--color-warning) var(--shadow-color-opacity), transparent), var(--shadow-sm);
    
    &:hover {
      background: var(--gradient-warning);
      transform: translateY(-1px);
      box-shadow: 0 8px 25px color-mix(in srgb, var(--color-warning) 25%, transparent), var(--shadow-md);
    }
  }
  
  &-error,
  &-danger {
    background: color-mix(in srgb, var(--color-error) var(--glass-opacity-medium), transparent);
    border-color: color-mix(in srgb, var(--color-error) var(--glass-border-opacity), transparent);
    color: var(--color-error);
    box-shadow: 0 8px 25px color-mix(in srgb, var(--color-error) var(--shadow-color-opacity), transparent), var(--shadow-sm);
    
    &:hover {
      background: var(--gradient-error);
      transform: translateY(-1px);
      box-shadow: 0 8px 25px color-mix(in srgb, var(--color-error) 25%, transparent), var(--shadow-md);
    }
  }
  
  &-info {
    background: color-mix(in srgb, var(--color-info) var(--glass-opacity-medium), transparent);
    border-color: color-mix(in srgb, var(--color-info) var(--glass-border-opacity), transparent);
    color: var(--color-info);
    box-shadow: 0 8px 25px color-mix(in srgb, var(--color-info) var(--shadow-color-opacity), transparent), var(--shadow-sm);
    
    &:hover {
      background: var(--gradient-info);
      transform: translateY(-1px);
      box-shadow: 0 8px 25px color-mix(in srgb, var(--color-info) 25%, transparent), var(--shadow-md);
    }
  }
  
  // Size variants
  &-small,
  &-sm {
    padding: 0 var(--space-2);
    font-size: 0.625rem;
    gap: calc(var(--space-px) * 2);
    line-height: 1;
    min-height: 1.25rem;
  }
  
  &-large,
  &-lg {
    padding: var(--space-2) var(--space-4);
    font-size: var(--text-sm);
    gap: var(--space-2);
    line-height: 1;
    min-height: 1.75rem;
  }
  
  // Premium Effects - reusing existing animations
  &-glow {
    animation: glow 2s ease-in-out infinite;
  }
  
  &-pulse {
    animation: pulseSoft 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  &-intense {
    backdrop-filter: var(--glass-blur-xl) var(--glass-saturate-intense) var(--glass-brightness-intense);
    -webkit-backdrop-filter: var(--glass-blur-xl) var(--glass-saturate-intense) var(--glass-brightness-intense);
  }
  
  // Premium gradient badges
  &-candy {
    background: var(--gradient-candy);
    border: none;
    color: white;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
    
    &:hover {
      transform: translateY(-1px) scale(1.02);
      box-shadow: var(--shadow-lg);
    }
  }
  
  &-aurora {
    background: var(--gradient-aurora);
    border: none;
    color: var(--color-text-primary);
    
    &:hover {
      transform: translateY(-1px) scale(1.02);
      box-shadow: var(--shadow-lg);
    }
  }
  
  &-ocean {
    background: var(--gradient-ocean);
    border: none;
    color: white;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
    
    &:hover {
      transform: translateY(-1px) scale(1.02);
      box-shadow: var(--shadow-lg);
    }
  }
  
  // Interactive badges
  &-clickable {
    cursor: pointer;
    
    &:hover {
      transform: translateY(-1px);
    }
    
    &:active {
      transform: translateY(0);
    }
  }
  
  // Outline variants
  &-outline {
    background: transparent;
    
    &-primary {
      color: var(--color-interactive-primary);
      border-color: var(--color-interactive-primary);
    }
    
    &-success {
      color: var(--color-success);
      border-color: var(--color-success);
    }
    
    &-warning {
      color: var(--color-warning);
      border-color: var(--color-warning);
    }
    
    &-error {
      color: var(--color-error);
      border-color: var(--color-error);
    }
  }
  
  // Pill variant (extra rounded)
  &-pill {
    padding: var(--space-1) var(--space-4);
    border-radius: var(--radius-full);
  }
  
  // Dot indicator
  &-dot {
    &::after {
      content: '';
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background: currentColor;
      margin-left: var(--space-1);
    }
  }
  
  // State badges - direct styling instead of extending
  &-active {
    background: color-mix(in srgb, var(--color-success) var(--glass-opacity-medium), transparent);
    border-color: color-mix(in srgb, var(--color-success) var(--glass-border-opacity), transparent);
    color: var(--color-success);
  }
  &-inactive {
    background: color-mix(in srgb, var(--color-neutral) var(--glass-opacity-medium), transparent);
    border-color: color-mix(in srgb, var(--color-neutral) var(--glass-border-opacity), transparent);
    color: var(--color-neutral);
  }
  &-pending {
    background: color-mix(in srgb, var(--color-warning) var(--glass-opacity-medium), transparent);
    border-color: color-mix(in srgb, var(--color-warning) var(--glass-border-opacity), transparent);
    color: var(--color-warning);
  }
  
  // Priority/Urgency variants - direct styling instead of extending
  &-priority-critical {
    background: color-mix(in srgb, var(--color-error) var(--glass-opacity-medium), transparent);
    border-color: color-mix(in srgb, var(--color-error) var(--glass-border-opacity), transparent);
    color: var(--color-error);
    animation: pulseSoft 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  &-priority-high {
    background: color-mix(in srgb, var(--color-warning) var(--glass-opacity-medium), transparent);
    border-color: color-mix(in srgb, var(--color-warning) var(--glass-border-opacity), transparent);
    color: var(--color-warning);
  }
  &-priority-medium {
    background: color-mix(in srgb, var(--color-info) var(--glass-opacity-medium), transparent);
    border-color: color-mix(in srgb, var(--color-info) var(--glass-border-opacity), transparent);
    color: var(--color-info);
  }
  &-priority-low {
    background: color-mix(in srgb, var(--color-success) var(--glass-opacity-medium), transparent);
    border-color: color-mix(in srgb, var(--color-success) var(--glass-border-opacity), transparent);
    color: var(--color-success);
  }
  
  // Ensure text spans are properly centered
  span {
    display: flex;
    align-items: center;
    justify-content: center;
    line-height: 1;
  }
}