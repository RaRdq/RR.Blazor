@use '../abstracts' as *;

.badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-0-5);
  padding: var(--space-1-5) var(--space-3);
  border-radius: var(--radius-full);
  font-size: var(--text-xs);
  font-weight: var(--font-semibold);
  text-transform: none;
  letter-spacing: 0.025em;
  border: 0;
  white-space: nowrap;
  line-height: 1.2;
  vertical-align: middle;
  position: relative;
  cursor: default;
  user-select: none;
  @include interactive-base(badge);
  @include interactive-touch(badge, true);
  @include interactive-a11y(badge);
  
  @include semantic-variants((primary, success, warning, error, info), (filled));
  
  &-secondary {
    background: var(--color-surface-elevated);
    color: var(--color-text);
  }
  
  &-danger { @include semantic-base(error); }
  &-outlined-primary { @include semantic-outlined(primary); }
  
  @include semantic-variants((primary, success, warning, error, info), (outlined, ghost, glass));
  
  @include Ï†-sizes(padding, var(--space-0-5));
  
  &-xs {
    padding: var(--space-0-5) var(--space-1-5);
    font-size: var(--text-2xs);
    gap: var(--space-0-5);
    min-height: var(--space-3);
  }
  
  &-sm {
    padding: var(--space-1) var(--space-2-5);
    font-size: var(--text-xs);
    gap: var(--space-0-5);
    min-height: var(--space-5);
  }
  
  &-lg {
    padding: var(--space-2) var(--space-4);
    font-size: var(--text-sm);
    gap: var(--space-1);
    min-height: var(--space-7);
  }
  
  &-xl {
    padding: var(--space-3) var(--space-6);
    font-size: var(--text-base);
    gap: var(--space-2);
    min-height: var(--space-8);
  }
  
  // Density variants
  &-compact {
    padding: var(--space-0-5) var(--space-1);
    font-size: var(--text-2xs);
    gap: var(--space-0-5);
    min-height: var(--space-2);
  }

  &-dense {
    padding: var(--space-0-5) var(--space-1-5);
    font-size: var(--text-2xs);
    gap: var(--space-0-5);
    min-height: var(--space-3);
  }

  &-spacious {
    padding: var(--space-1) var(--space-2-5);
    font-size: var(--text-sm);
    gap: var(--space-1);
    min-height: var(--space-6);
  }

  &-pulse { animation: pulse 2s ease-in-out infinite; }
  &-ping {
    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      border-radius: inherit;
      background: inherit;
      animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
    }
  }
  
  &-clickable { 
    cursor: pointer;
    @include interactive-base(badge);
  }
  
  &-neutral {
    background: var(--color-surface-elevated);
    color: var(--color-text);
    border-color: var(--color-border);
  }

    &-pill { border-radius: var(--radius-full); }
  
  &-dot {
    &::after {
      content: '';
      width: var(--space-1);
      height: var(--space-1);
      border-radius: 50%;
      background: currentColor;
      margin-left: var(--space-0-5);
    }
  }
  
  &-active { @include semantic-base(success); }
  &-inactive { @include semantic-ghost(neutral, 5); }
  &-pending { 
    @include semantic-base(warning);
    animation: pulse 2s ease-in-out infinite;
  }
  
  &-priority-critical {
    @include semantic-base(error);
    animation: pulse 1.5s ease-in-out infinite;
  }
  &-priority-high { @include semantic-base(warning); }
  &-priority-medium { @include semantic-base(info); }
  &-priority-low { @include semantic-ghost(neutral, 8); }
  
  span {
    display: flex;
    align-items: center;
    justify-content: center;
    line-height: 1;
  }
}

.button-badge {
  position: absolute;
  top: calc(var(--space-1-5) * -1);
  right: calc(var(--space-1-5) * -1);
  min-width: var(--space-5);
  height: var(--space-5);
  padding: 0 var(--space-1-5);
  background: var(--color-error);
  color: var(--color-text-on-error);
  font-size: var(--text-2xs);
  font-weight: var(--font-bold);
  line-height: 1;
  border-radius: var(--radius-full);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: var(--z-above);
  border: var(--border-2) solid var(--color-surface);
  box-shadow: var(--shadow-md);
  transition: all var(--duration-fast) var(--ease-out);
  
  // Ensure proper centering for single digits
  &:empty {
    min-width: var(--space-5);
    padding: 0;
  }
  
  // Handle 99+ overflow
  &[data-count="99+"] {
    font-size: var(--text-3xs);
    padding: 0 var(--space-1);
    min-width: var(--space-5-5);
  }
  
  .button-sm & {
    top: calc(var(--space-1) * -1);
    right: calc(var(--space-1) * -1);
    min-width: var(--space-4);
    height: var(--space-4);
    font-size: var(--text-3xs);
    border-width: var(--border-1);
  }
  
  .button-lg & {
    top: calc(var(--space-2) * -1);
    right: calc(var(--space-2) * -1);
    min-width: var(--space-6);
    height: var(--space-6);
    font-size: var(--text-xs);
    border-width: var(--border-2);
  }
  
  .button-xs & {
    top: calc(var(--space-0-5) * -1);
    right: calc(var(--space-0-5) * -1);
    min-width: var(--space-3);
    height: var(--space-3);
    font-size: var(--text-3xs);
    border-width: var(--border-1);
  }
  
  .button-xl & {
    top: calc(var(--space-2-5) * -1);
    right: calc(var(--space-2-5) * -1);
    min-width: var(--space-6);
    height: var(--space-6);
    font-size: var(--text-sm);
    border-width: var(--border-3);
  }
  
  // Semantic variants
  &-primary {
    background: var(--color-primary);
    color: var(--color-text-inverse);
    box-shadow: var(--shadow-md);
  }
  
  &-success {
    background: var(--color-success);
    color: var(--color-text-on-success);
    box-shadow: var(--shadow-md);
  }
  
  &-warning {
    background: var(--color-warning);
    color: var(--color-text-on-warning);
    box-shadow: var(--shadow-md);
  }
  
  &-info {
    background: var(--color-info);
    color: var(--color-text-on-info);
    box-shadow: var(--shadow-md);
  }
  
  &-pulse {
    animation: badgePulse 2s ease-in-out infinite;
  }
  
  // Dot indicator (no text)
  &-dot {
    min-width: var(--space-3);
    height: var(--space-3);
    padding: 0;
    border-radius: var(--radius-full);
    top: calc(var(--space-0-5) * -1);
    right: calc(var(--space-0-5) * -1);
    
    .button-sm & {
      min-width: var(--space-2-5);
      height: var(--space-2-5);
      top: calc(var(--space-px) * -1);
      right: calc(var(--space-px) * -1);
    }
    
    .button-lg & {
      min-width: var(--space-3);
      height: var(--space-3);
      top: calc(var(--space-0-5) * -1);
      right: calc(var(--space-0-5) * -1);
    }
  }
}

// Parent button positioning
.button {
  &:has(.button-badge),
  &[data-has-badge="true"],
  &.button-with-badge {
    position: relative;
  }
}

