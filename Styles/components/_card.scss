// RR.Blazor Card Component Styles
// Utility-first card styling with minimal component-specific CSS

@use '../abstracts' as *;

// Card base extends
%card-base {
  display: flex;
  flex-direction: column;
  background: linear-gradient(145deg, var(--color-background-elevated) 0%, var(--color-background-secondary) 100%);
  border-radius: var(--radius-xl);
  border: 1px solid var(--color-border-light);
  box-shadow: var(--shadow-lg);
  transition: all var(--duration-slow) var(--ease-out);
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(90deg, 
      transparent 0%, 
      var(--color-border-light) 50%, 
      transparent 100%);
    opacity: 0.6;
  }
}

// Card component (minimal - most styling via utilities)
.card {
  @extend %card-base;
  
  // Variant-specific styles that can't be utility classes
  &--outlined {
    border: var(--border-1) solid var(--color-border-medium);
    box-shadow: none;
  }
  
  &--elevated {
    box-shadow: var(--shadow-xl);
    
    &:hover {
      box-shadow: var(--shadow-xl);
      transform: translateY(-4px);
    }
  }
  
  &--glass {
    background: var(--color-glass-heavy);
    backdrop-filter: blur(var(--blur-md));
    -webkit-backdrop-filter: blur(var(--blur-md));
    border: var(--border-1) solid var(--color-border-light);
  }
  
  &--frosted {
    background: var(--color-glass-medium);
    backdrop-filter: blur(var(--blur-lg)) saturate(180%);
    -webkit-backdrop-filter: blur(var(--blur-lg)) saturate(180%);
    border: var(--border-1) solid var(--color-border-medium);
    border-radius: var(--radius-xl);
    box-shadow: var(--shadow-xl);
    color: var(--color-text-primary);
    
    [data-theme="dark"] & {
      background: var(--color-overlay-dark);
      border-color: var(--color-border-light);
      box-shadow: var(--shadow-xl);
    }
  }
  
  &--flat {
    box-shadow: none;
    border: none;
  }
  
  // Interactive cards
  &--clickable {
    cursor: pointer;
    
    &.card--hoverable:hover {
      transform: translateY(-1px);
      box-shadow: var(--shadow-md);
    }
    
    &.card--hoverable:active {
      transform: translateY(0);
    }
  }
  
  // Status and priority states
  &--urgent {
    animation: pulseSoft var(--duration-slow) infinite alternate;
    border-color: var(--color-warning);
  }
  
  &--priority-high {
    box-shadow: var(--shadow-lg);
    border-left: 4px solid var(--color-error);
  }
  
  &--priority-medium {
    box-shadow: var(--shadow-md);
    border-left: 4px solid var(--color-warning);
  }
  
  &--priority-low {
    box-shadow: var(--shadow-sm);
    border-left: 4px solid var(--color-info);
  }
  
  // Notification indicator
  .notification__count {
    position: absolute;
    top: -2px;
    right: -2px;
    background: var(--color-error);
    color: white;
    font-size: 10px;
    font-weight: 600;
    line-height: 1;
    padding: 2px 4px;
    border-radius: 6px;
    min-width: 14px;
    text-align: center;
  }
  
  // Tags styling
  &__tag {
    font-size: 10px;
    font-weight: 500;
    padding: 2px 6px;
    background: var(--color-secondary-10);
    color: var(--color-secondary);
    border-radius: var(--radius-sm);
    white-space: nowrap;
    
    &--overflow {
      background: var(--color-primary-10);
      color: var(--color-primary);
    }
  }
  
  // Loading state
  &--loading {
    position: relative;
    overflow: hidden;
    
    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: var(--gradient-shimmer);
      animation: shimmer 1.5s infinite;
    }
  }
  
}


// Animation imported from abstracts/_animations.scss
