// RR.Blazor Card Component Styles
// Utility-first card styling with minimal component-specific CSS

@use '../abstracts' as *;

// Card base extends
%card-base {
  display: flex;
  flex-direction: column;
  background: linear-gradient(145deg, var(--color-background-elevated) 0%, var(--color-background-secondary) 100%);
  border-radius: var(--radius-xl);
  border: 1px solid rgba(var(--color-border-light-rgb), 0.5);
  box-shadow: 
    0 4px 20px -4px var(--shadow-color-10),
    0 2px 4px -1px var(--overlay-dark-5),
    inset 0 1px 0 var(--overlay-white-5);
  transition: all var(--duration-slow) var(--ease-out);
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(90deg, 
      transparent 0%, 
      var(--overlay-white-8) 50%, 
      transparent 100%);
    opacity: 0.6;
  }
}

// Card component (minimal - most styling via utilities)
.card {
  @extend %card-base;
  
  // Variant-specific styles that can't be utility classes
  &--outlined {
    border: var(--border-1) solid var(--color-border-medium);
    box-shadow: none;
  }
  
  &--elevated {
    box-shadow: 
      0 10px 40px -10px var(--shadow-color-15),
      0 4px 10px -2px var(--overlay-dark-5),
      inset 0 1px 0 var(--overlay-white-8);
    
    &:hover {
      box-shadow: 
        0 20px 50px -12px var(--shadow-color-20),
        0 8px 16px -4px var(--shadow-color-10),
        inset 0 1px 0 var(--overlay-white-10);
      transform: translateY(-4px);
    }
  }
  
  &--glass {
    background-color: rgba(var(--color-background-elevated-rgb), 0.8);
    backdrop-filter: blur(var(--blur-md));
    border: var(--border-1) solid rgba(var(--color-border-light-rgb), 0.3);
  }
  
  &--frosted {
    background: var(--overlay-white-15);
    backdrop-filter: blur(var(--blur-lg));
    border: var(--border-1) solid var(--overlay-white-25);
    border-radius: var(--radius-xl);
    box-shadow: 0 8px 32px var(--shadow-color-10);
    color: var(--color-text-primary);
    
    [data-theme="dark"] & {
      background: var(--overlay-dark-30);
      border-color: var(--overlay-white-10);
      box-shadow: 0 8px 32px var(--shadow-color-30);
    }
  }
  
  &--flat {
    box-shadow: none;
    border: none;
  }
  
  // Interactive cards
  &--clickable {
    cursor: pointer;
    
    &.card--hoverable:hover {
      transform: translateY(-1px);
      box-shadow: var(--shadow-md);
    }
    
    &.card--hoverable:active {
      transform: translateY(0);
    }
  }
  
  // Loading state
  &--loading {
    position: relative;
    overflow: hidden;
    
    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: var(--gradient-shimmer);
      animation: shimmer 1.5s infinite;
    }
  }
  
}


// Animation imported from abstracts/_animations.scss