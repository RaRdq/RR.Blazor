
@use '../abstracts' as *;

%card-base {
  display: flex;
  flex-direction: column;
  height: 100%; // Take full height of container
  background: var(--color-surface-elevated);
  border: 1px solid var(--color-border);
  position: relative;
  overflow: hidden;
  @include φ-sizes(padding, var(--space-3));
  @include φ-sizes(margin, var(--space-1));
  @include φ-radius(var(--radius-lg));
  @include φ-elevation(var(--shadow-md));
  transition: all var(--duration-normal) var(--ease-out);
  @include interactive-a11y(card);
}

.card {
  @extend %card-base;
  
  &-outlined {
    @include φ-elevation(none);
    background: transparent;
    border-style: solid;
  }
  
  &-elevated { @include φ-elevation(var(--shadow-xl)); }
  &-floating { @include φ-elevation(var(--shadow-2xl)); }
  &-flat { 
    @include φ-elevation(none);
    border: none;
  }
  
  &-glass { @include semantic-glass(primary); }
  
  &-clickable,
  &-interactive {
    cursor: pointer;
    @include interactive-base(card);
    @include interactive-touch(card, true);
    
    button, input, select, textarea, a, [role="button"] {
      pointer-events: auto;
    }
  }
  
  &-background {
    pointer-events: none;
    
    * { pointer-events: auto; }
    
    &:hover {
      transform: none;
      box-shadow: var(--shadow-md);
      filter: none;
    }
  }
  
  &-urgent {
    animation: pulse var(--duration-slow) infinite alternate;
    border-color: var(--color-warning);
  }
  
  @include semantic-variants((primary, success, warning, error, info), (outlined, ghost));
  
  &-primary,
  &-success,
  &-warning,
  &-error,
  &-info {
    border-left-width: var(--space-1);
    
    &.card-outlined {
      border-left-width: 1px;
    }
  }
  
  &-ghost {
    background: transparent;
    border-style: dashed;
    border-width: calc(var(--border-1) * 1.618);
    @include φ-elevation(none);
    
    &:hover {
      background: var(--color-surface-elevated);
      border-style: solid;
    }
  }
  
  &-neutral {
    background: var(--color-surface);
    border-color: var(--color-border);
  }
  
  .notification-count {
    @include badge-position-top-right(-6px);
    @extend .badge !optional;
    @extend .badge-error !optional;
    @extend .badge-compact !optional;
    min-width: 16px;
    z-index: 1;
  }
  
  &-tag {
    font-size: 10px;
    font-weight: 500;
    padding: var(--space-0-5) var(--space-1-5);
    background: var(--color-primary-light);
    color: var(--color-primary);
    border-radius: var(--radius-sm);
    white-space: nowrap;
    
    &-overflow {
      background: var(--color-primary-10);
      color: var(--color-primary);
    }
  }
  
  &-loading {
    position: relative;
    overflow: hidden;
    
    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, 
        transparent 0%, 
        var(--color-surface) 50%, 
        transparent 100%);
      animation: shimmer 1.5s infinite;
    }
  }
  
  // Stats card icon and value styling
  .rounded-lg[style*="--icon-size"] {
    width: var(--icon-size);
    height: var(--icon-size);
    background: var(--icon-color);
    
    .material-symbols-rounded {
      color: var(--color-text-inverse);
      font-size: var(--icon-font-size);
    }
  }
  
  span[style*="--value-color"] {
    color: var(--value-color);
  }
  
  // Notification card variants
  &-notification {
    display: flex;
    gap: var(--space-4);
    
    &-unread {
      border-left: 4px solid var(--color-primary);
    }
    
    &-icon {
      width: 2.5rem;
      height: 2.5rem;
      border-radius: var(--radius-full);
      display: flex;
      align-items: center;
      justify-content: center;
      flex-shrink: 0;
      background: var(--color-surface);
    }
    
    &-content {
      flex: 1;
      min-width: 0;
    }
    
    &-title {
      font-size: var(--text-sm);
      font-weight: var(--font-semibold);
      color: var(--color-text);
      margin-bottom: var(--space-1);
    }
    
    &-message {
      font-size: var(--text-sm);
      color: var(--color-text-muted);
      margin-bottom: var(--space-2);
    }
    
    &-time {
      font-size: var(--text-xs);
      color: var(--color-text-subtle);
    }
    
    &-actions {
      display: flex;
      gap: var(--space-2);
      margin-top: var(--space-3);
    }
  }
  
  // Card layout patterns (moved from utilities/_layout.scss)
  &-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: var(--space-4);
    
    @include responsive-max(md) {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-2);
    }
  }
  
  &-title {
    font-size: var(--text-lg);
    font-weight: var(--font-semibold);
    color: var(--color-text);
    margin: 0;
    line-height: var(--leading-tight);
  }
  
  &-body {
    flex: 1;
    display: flex;
    flex-direction: column;
  }
  
  &-actions {
    display: flex;
    gap: var(--space-3);
    margin-top: auto;
    padding-top: var(--space-4);
    border-top: var(--border-1) solid var(--color-border);
    
    &-center {
      justify-content: center;
    }
    
    &-end {
      justify-content: flex-end;
    }
    
    &-between {
      justify-content: space-between;
    }
    
    &-vertical {
      flex-direction: column;
    }
    
    @include responsive-max(md) {
      flex-direction: column;
      
      &-center,
      &-end,
      &-between {
        justify-content: stretch;
      }
    }
  }
}

