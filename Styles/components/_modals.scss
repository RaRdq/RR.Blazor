@use '../abstracts' as *;

.modal-provider,
.modal-backdrop-container {
  // OVERRIDE ALL CONTAINER CONSTRAINTS - Full viewport mandatory
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  width: 100vw !important;
  height: 100vh !important;
  z-index: var(--z-modal-container) !important;
  pointer-events: auto !important;
  
  // Force above all layout containers
  min-width: 100vw !important;
  min-height: 100vh !important;
  
  // Smooth fade transition for provider
  transition: opacity 0.2s ease-out, visibility 0.2s ease-out;
  
  // Active state - covers entire viewport
  &.active {
    pointer-events: auto !important;
    opacity: 1 !important;
    visibility: visible !important;
  }
}

// Modal - Individual modal styling - FORCE full viewport
.modal {
  // CRITICAL: Override ANY container positioning constraints
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  width: 100vw !important;
  height: 100vh !important;
  z-index: var(--z-modal) !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  padding: var(--space-4);
  
  // Hidden by default
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  
  // Animation will be applied via class
  
  // Critical mobile safety for 375px viewport
  @include responsive-max(sm) {
    // Ensure modal doesn't extend beyond viewport on small screens
    padding: var(--space-2);
    // Force safe positioning within viewport bounds
    align-items: safe center;
    justify-content: safe center;
  }
  
  // Visible state with customizable animation
  &--visible {
    opacity: 1 !important;
    visibility: visible !important;
    transform: scale(1) !important;
    pointer-events: auto !important;
    
    // Apply modal animation based on CSS custom property
    animation: var(--modal-animation, scaleIn) var(--modal-duration, 0.3s) var(--modal-timing, ease-out);
  }
  
  // Hidden state
  &--hidden {
    opacity: 0 !important;
    visibility: hidden !important;
    transform: scale(0.95) !important;
    pointer-events: none !important;
  }
  
  // Backdrop - CRITICAL: Force full viewport coverage
  &-backdrop {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    bottom: 0 !important;
    width: 100vw !important;
    height: 100vh !important;
    z-index: var(--z-modal-backdrop) !important;
    background: rgba(15, 23, 42, 0.7);
    backdrop-filter: blur(8px);
    cursor: pointer;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    
    // Subtle backdrop fade with customizable duration
    animation: modalBackdropFadeIn var(--modal-backdrop-duration, 0.2s) ease-out;
  }

  // Modal Content Wrapper - Prevents event bubbling to backdrop
  &-content-wrapper {
    pointer-events: auto;
    cursor: auto;
    display: flex;
    align-items: center;
    justify-content: center;
    outline: none; // Remove focus outline on wrapper
    
    // Allow natural height - no max-height constraint
    height: auto;
    overflow: visible; // Remove wrapper scrolling - allow body scrolling
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    
    // Focus management for keyboard navigation
    &:focus {
      outline: none;
    }
    
    &:focus-visible {
      outline: 2px solid var(--color-primary);
      outline-offset: 4px;
      border-radius: var(--radius-lg);
    }
  }
  
  // Modal Content - Uses CSS custom properties for flexible sizing
  &-content {
    position: relative;
    z-index: var(--z-modal-content);
    background: var(--color-surface-elevated);
    border-radius: var(--radius-2xl);
    border: 1px solid var(--color-border);
    width: 100%;
    max-width: var(--modal-width, 45.5rem); // Default medium: φ^6 ≈ 45.5rem
    height: auto; // Allow natural height
    max-height: calc(100vh - var(--space-8)); // Limit height to viewport with padding
    overflow: hidden; // Hide overflow on content container
    display: flex;
    flex-direction: column;
    box-shadow: 
      0 32px 64px rgba(0, 0, 0, 0.24),
      0 16px 32px rgba(0, 0, 0, 0.16),
      0 8px 16px rgba(0, 0, 0, 0.12);
    
    // WCAG 1.4.10 - Zoom level support for 200%-400% browser zoom
    @media (min-resolution: 2dppx), (min-zoom: 200%) {
      width: 90%;
      overflow: auto;
      font-size: clamp(0.875rem, 2.5vw, 1rem); // Responsive text sizing
    }
    
    @media (min-zoom: 300%) {
      width: 95%;
      border-radius: var(--radius-lg); // Reduced border radius at high zoom
    }
    
    @media (min-zoom: 400%) {
      width: 98%;
      border-radius: var(--radius-md); // Further reduced border radius
      padding: var(--space-2); // Reduced padding at extreme zoom
    }
  }
  
  // Modal Size Variants - Override CSS custom properties
  &-small { 
    --modal-width: 28rem; // φ^5 ≈ 28rem (448px)
    --modal-height: 61.8vh; // φ^-1 ≈ 61.8vh
    
    @include responsive-max(md) {
      --modal-width: 90vw;
      --modal-height: 70vh;
    }
  }
  
  &-medium {
    --modal-width: 45.5rem; // φ^6 ≈ 45.5rem (728px)
    --modal-height: 70vh; // Standard height
    
    @include responsive-max(md) {
      --modal-width: 95vw;
      --modal-height: 75vh;
    }
  }
  
  &-large { 
    --modal-width: 80vw; // 80% of viewport width
    --modal-height: 80.9vh; // φ * 50vh ≈ 80.9vh
    
    @include responsive-max(md) {
      --modal-width: 95vw;
      --modal-height: 85vh;
    }
  }
  
  &-xlarge { 
    --modal-width: 95vw;
    --modal-height: 90vh;
    
    @include responsive-max(md) {
      --modal-width: 100vw;
      --modal-height: 95vh;
      border-radius: var(--radius-lg);
    }
  }
  
  &-wide { 
    --modal-width: 80vw;
    --modal-height: 70vh;
      
    @include responsive-max(md) {
      --modal-width: 95vw;
      --modal-height: 80vh;
    }
  }
  
  &-full { 
    --modal-width: 95vw;
    --modal-height: 95vh;
    
    @include responsive-max(md) {
      --modal-width: 100vw;
      --modal-height: 100vh;
      border-radius: 0; // True full-screen on mobile
    }
  }
  
  // Glass variant
  &-glass {
    background: var(--glass-bg-strong);
    backdrop-filter: blur(var(--blur-xl));
    border: var(--border-1) solid var(--glass-border-strong);
  }
  
  // Mobile-first responsive - Enhanced for JavaScript repositioning compatibility
  @include responsive-max(sm) {
    // Ensure padding respects safe area and viewport bounds
    padding: max(var(--space-2), env(safe-area-inset-top)) max(var(--space-2), env(safe-area-inset-right)) max(var(--space-2), env(safe-area-inset-bottom)) max(var(--space-2), env(safe-area-inset-left));
    align-items: safe center; // Safe centering for mobile browsers
    justify-content: safe center; // Safe centering for mobile browsers
    
    // Override JavaScript forcing with !important when needed for mobile safety
    &[style*="position: fixed"] {
      // Allow JavaScript positioning but ensure mobile viewport safety
      align-items: safe center !important;
      justify-content: safe center !important;
      // Ensure content doesn't extend beyond safe viewport bounds
      overflow: auto !important;
    }
    
    .modal-content {
      // Enhanced mobile content sizing to prevent viewport overflow
      max-height: calc(100vh - var(--space-4) - env(safe-area-inset-top) - env(safe-area-inset-bottom));
      max-width: calc(100vw - var(--space-4) - env(safe-area-inset-left) - env(safe-area-inset-right));
      min-height: 200px;
      width: 100%;
      border-radius: var(--radius-lg); // Slightly reduced for mobile
      margin: auto; // Center within available space
      
      // Override JavaScript forced styles when they conflict with mobile safety
      &[style*="position: fixed"] {
        position: relative !important; // Force relative positioning within modal for mobile
        width: 100% !important;
        height: auto !important;
        top: auto !important;
        left: auto !important;
        right: auto !important;
        bottom: auto !important;
        transform: none !important;
      }
      
      // Ensure modal content animation works properly on mobile
      transition: opacity 0.3s ease-out, transform 0.3s ease-out;
    }
  }
  
  // Enhanced visible state for mobile compatibility
  &--visible {
    @include responsive-max(sm) {
      .modal-content {
        // Ensure visibility and proper positioning regardless of JavaScript interference
        opacity: 1 !important;
        transform: none !important;
        visibility: visible !important;
      }
    }
  }
  
  // Desktop scale-in animation
  @include responsive-min(md) {
    .modal-content {
      // Scale animation handled by parent .modal class
    }
  }
}

// Modal Header
.modal-header {
  padding: var(--space-6);
  border-bottom: 1px solid var(--color-border);
  flex-shrink: 0;
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  background: linear-gradient(135deg, var(--color-surface-elevated) 0%, var(--color-surface) 100%);
  border-top-left-radius: var(--radius-2xl);
  border-top-right-radius: var(--radius-2xl);
  
  // Density-based padding variations
  &.modal-header-compact {
    padding: var(--space-2);
  }
  
  &.modal-header-dense {
    padding: var(--space-3);
  }
  
  &.modal-header-spacious {
    padding: var(--space-8);
  }
  
  @include responsive-max(sm) {
    // Enhanced mobile header layout - ensures close button always accessible
    padding: var(--space-3);
    min-height: 60px; // Increased for better touch targets
    width: 100%;
    max-width: 100%;
    box-sizing: border-box;
    
    // Critical fix: Ensure flexbox layout works within mobile viewport bounds
    display: flex !important;
    flex-direction: row !important;
    gap: var(--space-2);
    align-items: center;
    justify-content: space-between;
    
    // Prevent any JavaScript or inherited styles from breaking mobile layout
    &[style] {
      display: flex !important;
      flex-direction: row !important;
      justify-content: space-between !important;
    }
    
    .header-actions {
      // Critical mobile fix: Ensure close button stays within 375px viewport
      flex-shrink: 0 !important;
      display: flex !important;
      align-items: center !important;
      justify-content: center !important;
      width: 48px !important; // Fixed width to fit within mobile viewport
      min-width: 48px !important;
      max-width: 48px !important;
      height: 48px !important;
      overflow: visible !important;
      z-index: calc(var(--z-modal-content) + 10) !important;
      
      // Override any inherited styles that might hide the button
      opacity: 1 !important;
      visibility: visible !important;
      pointer-events: auto !important;
      position: relative !important;
      margin-left: auto !important; // Push to right within viewport bounds
    }
    
    // Enhanced title section that respects close button space within 375px viewport
    .d-flex.align-center {
      flex: 1 1 auto !important;
      min-width: 0 !important; // Force shrinking when needed
      max-width: calc(100% - 56px) !important; // Always leave room for close button + margin
      overflow: hidden;
      
      .d-flex.flex-col {
        min-width: 0 !important;
        max-width: 100% !important;
        overflow: hidden;
        
        .modal-title {
          // Critical fix for 375px viewport - conservative sizing
          max-width: calc(375px - 140px) !important; // 375px viewport - padding - button - margins
          word-wrap: break-word;
          overflow-wrap: break-word;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap; // Force single line on mobile for predictable layout
          line-height: 1.3;
          font-size: var(--text-base); // Slightly smaller on mobile
        }
        
        .modal-subtitle {
          max-width: calc(375px - 140px) !important; // Match title constraints
          word-wrap: break-word;
          overflow-wrap: break-word;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap; // Force single line for predictable layout
          font-size: var(--text-sm);
        }
      }
    }
  }
}

.modal-title {
  font-size: var(--text-xl);
  font-weight: var(--font-semibold);
  color: var(--color-text);
  margin: 0;
  display: flex;
  align-items: center;
  gap: var(--space-3);
}

.modal-subtitle {
  font-size: var(--text-sm);
  color: var(--color-text-muted);
  margin: var(--space-2) 0 0 0;
  line-height: var(--leading-relaxed);
}

.modal-close {
  // WCAG 2.5.5 Level AA - Minimum 48px touch target on all devices
  min-width: 48px !important;
  min-height: 48px !important;
  width: 48px;
  height: 48px;
  border-radius: var(--radius-full);
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  display: flex !important; // Force display to prevent hiding
  align-items: center;
  justify-content: center;
  cursor: pointer;
  color: var(--color-text-muted);
  transition: all var(--duration-fast) var(--ease-out);
  flex-shrink: 0 !important; // Prevent button from shrinking under any circumstances
  z-index: calc(var(--z-modal-content) + 10) !important; // Ensure button is above all content including overlays
  position: relative !important; // Ensure proper stacking context
  
  // Ensure button is always interactive
  pointer-events: auto !important;
  opacity: 1 !important;
  visibility: visible !important;
  
  // WCAG 1.4.10 - Zoom level support
  @media (min-zoom: 200%) {
    min-width: 56px !important;
    min-height: 56px !important;
    width: 56px;
    height: 56px;
    font-size: 1.25rem; // Larger icon at high zoom
  }
  
  @media (min-zoom: 300%) {
    min-width: 64px !important;
    min-height: 64px !important;
    width: 64px;
    height: 64px;
    font-size: 1.5rem; // Even larger icon
  }
  
  @media (min-zoom: 400%) {
    min-width: 72px !important;
    min-height: 72px !important;
    width: 72px;
    height: 72px;
    font-size: 1.75rem; // Maximum icon size
  }
  
  @include responsive-min(md) {
    // Desktop still needs minimum 48px for WCAG compliance
    min-width: 48px !important;
    min-height: 48px !important;
    width: 48px;
    height: 48px;
  }
  
  @include responsive-max(sm) {
    // Enhanced mobile accessibility - WCAG 2.1 AA compliance
    min-width: 48px !important; // Increased for better accessibility
    min-height: 48px !important;
    width: 48px !important;
    height: 48px !important;
    margin: 0 !important; // Remove any margin that could cause layout issues
    padding: 0 !important; // Ensure consistent sizing
    
    // Positioning to ensure always visible and accessible
    position: relative !important;
    z-index: calc(var(--z-modal-content) + 20) !important; // Maximum priority on mobile
    flex-shrink: 0 !important;
    
    // Grid positioning for mobile layout
    justify-self: end !important;
    align-self: center !important;
    
    // Ensure button stays within viewport bounds
    box-sizing: border-box !important;
    
    // Override any external styles that might interfere
    right: auto !important;
    left: auto !important;
    top: auto !important;
    bottom: auto !important;
    transform: none !important;
    
    // Enhanced contrast for mobile visibility
    background: var(--color-surface-elevated) !important;
    border: 2px solid var(--color-border) !important;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;
    
    // Ensure icon is properly sized for touch
    .material-symbols-rounded, i {
      font-size: 20px !important;
      line-height: 1 !important;
    }
  }
  
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      background: var(--color-surface);
      border-color: var(--color-border);
      color: var(--color-text);
      transform: scale(1.05);
    }
  }
  
  &:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }
  
  // Ensure button is always accessible
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }
}

// Modal Body
.modal-body {
  flex: 1;
  padding: var(--space-6);
  overflow-x: hidden; // Prevent horizontal scrollbar
  overflow-y: auto; // Enable vertical scrolling when content exceeds modal height
  // Content wrapping and sizing
  word-wrap: break-word;
  overflow-wrap: break-word;
  max-width: 100%;
  box-sizing: border-box;
  // Smooth scrolling
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
  overscroll-behavior: contain;
  
  // Density-based padding variations
  &-compact {
    padding: var(--space-2);
  }
  
  &-dense {
    padding: var(--space-3);
  }
  
  &-spacious {
    padding: var(--space-8);
  }
  
  @include responsive-max(sm) {
    padding: var(--space-4);
  }
  
  // WCAG 1.4.10 - Enhanced zoom level support
  @media (min-zoom: 200%) {
    padding: var(--space-4);
    font-size: clamp(0.875rem, 2.5vw, 1rem);
    line-height: 1.6; // Better readability at zoom
  }
  
  @media (min-zoom: 300%) {
    padding: var(--space-3);
    font-size: clamp(1rem, 3vw, 1.125rem);
    line-height: 1.7;
  }
  
  @media (min-zoom: 400%) {
    padding: var(--space-2);
    font-size: clamp(1.125rem, 3.5vw, 1.25rem);
    line-height: 1.8;
  }
}

// Modal Footer
.modal-footer {
  // Base layout and styling - must come before nested rules
  padding: var(--space-4);
  border-top: 1px solid var(--color-border);
  background: var(--color-surface);
  flex-shrink: 0;
  border-bottom-left-radius: var(--radius-2xl);
  border-bottom-right-radius: var(--radius-2xl);
  
  // Default button layout for FooterContent
  display: flex;
  gap: var(--space-3);
  justify-content: flex-end;
  align-items: center;
  
  // Dynamic height scaling with button size
  container-type: inline-size;
  min-height: calc(var(--button-height, 40px) + var(--space-4) * 2);
  
  // Density-based variations with reduced base padding
  &-compact {
    padding: var(--space-1);
    min-height: calc(var(--button-height, 32px) + var(--space-1) * 2);
  }
  
  &-dense {
    padding: var(--space-2);
    min-height: calc(var(--button-height, 36px) + var(--space-2) * 2);
  }
  
  &-spacious {
    padding: var(--space-6);
    min-height: calc(var(--button-height, 48px) + var(--space-6) * 2);
  }
  
  // Button size awareness - dynamically adjust based on contained buttons
  &:has(.button-sm) {
    --button-height: 32px;
  }
  
  &:has(.button-md) {
    --button-height: 40px;
  }
  
  &:has(.button-lg) {
    --button-height: 48px;
  }
  
  &:has(.button-xl) {
    --button-height: 56px;
  }
  
  @include responsive-max(sm) {
    padding: var(--space-4);
  }
  
  // WCAG 1.4.10 - Enhanced zoom level support
  @media (min-zoom: 200%) {
    padding: var(--space-4);
  }
  
  @media (min-zoom: 300%) {
    padding: var(--space-3);
  }
  
  @media (min-zoom: 400%) {
    padding: var(--space-2);
  }
  
  // Button layout
  .button-group,
  .modal-actions {
    display: flex;
    gap: var(--space-3);
    justify-content: flex-end;
    
    @include responsive-max(sm) {
      flex-direction: column-reverse;
      
      .button {
        width: 100%;
        min-height: 48px; // WCAG 2.5.5 compliance
        justify-content: center;
      }
    }
    
    // Enhanced button sizing at zoom levels
    @media (min-zoom: 200%) {
      gap: var(--space-2);
      
      .button {
        min-height: 56px; // Larger touch targets at zoom
        font-size: 1.125rem;
      }
    }
    
    @media (min-zoom: 300%) {
      flex-direction: column;
      
      .button {
        min-height: 64px;
        font-size: 1.25rem;
      }
    }
    
    @media (min-zoom: 400%) {
      .button {
        min-height: 72px;
        font-size: 1.375rem;
      }
    }
  }
}

// Body scroll behavior when modal is open - allow scrolling
body.modal-open {
  // Remove overflow hidden to allow body scrolling when modal content is long
  overflow: auto;
  
  // Prevent layout shift when scrollbar appears/disappears
  padding-right: var(--scrollbar-width, 0);
  
  // Fix for mobile: ensure natural scrolling behavior
  @include responsive-max(sm) {
    position: static !important; // Override JavaScript fixed positioning
    top: auto !important; // Override JavaScript top positioning
    overflow: auto !important; // Allow scrolling on mobile
  }
}

// Keyframe animations
@keyframes backdropFade {
  from { opacity: 0; }
  to { opacity: 1; }
}

// Confirm Modal - Special styling for confirmation dialogs
.confirm-modal {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  gap: var(--space-4);
  padding: var(--space-6);
  
  &-icon {
    width: 4rem;
    height: 4rem;
    border-radius: var(--radius-full);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2rem;
    margin-bottom: var(--space-2);
    
    &-info {
      background: color-mix(in srgb, var(--color-info) 10%, var(--color-surface));
      color: var(--color-info);
    }
    
    &-danger {
      background: color-mix(in srgb, var(--color-error) 10%, var(--color-surface));
      color: var(--color-error);
    }
    
    &-warning {
      background: color-mix(in srgb, var(--color-warning) 10%, var(--color-surface));
      color: var(--color-warning);
    }
    
    &-success {
      background: color-mix(in srgb, var(--color-success) 10%, var(--color-surface));
      color: var(--color-success);
    }
  }
  
  &-message {
    font-size: var(--text-base);
    color: var(--color-text);
    margin: 0 0 var(--space-3) 0;
    line-height: var(--leading-relaxed);
  }
}

