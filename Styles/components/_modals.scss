@use '../abstracts' as *;

.modal-provider,
.modal-backdrop-container {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100vw;
  height: 100vh;
  z-index: var(--z-modal);
  pointer-events: auto;
  
  min-width: 100vw;
  min-height: 100vh;
  
  transition: opacity 0.2s ease-out, visibility 0.2s ease-out;
  
  &.active {
    pointer-events: auto;
    opacity: 1;
    visibility: visible;
  }
}

.modal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100vw;
  height: 100vh;
  z-index: var(--z-modal);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--space-4);
  
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  
  @include responsive-max(sm) {
    padding: var(--space-2);
    align-items: safe center;
    justify-content: safe center;
  }
  
  &--visible {
    opacity: 1;
    visibility: visible;
    transform: scale(1);
    pointer-events: auto;
    animation: var(--modal-animation, scaleIn var(--duration-normal) var(--ease-out));
  }
  
  &--hidden {
    opacity: 0;
    visibility: hidden;
    transform: scale(0.95);
    pointer-events: none;
  }
  
  // Backdrop variants
  &-backdrop {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100vw;
    height: 100vh;
    z-index: var(--z-modal);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    animation: fadeIn var(--modal-backdrop-duration, var(--duration-fast)) var(--ease-out);
    
    &-dark {
      background: rgba(15, 23, 42, 0.7);
      backdrop-filter: blur(8px);
    }
    
    &-glass {
      background: rgba(15, 23, 42, 0.5);
      backdrop-filter: blur(12px) saturate(180%);
      -webkit-backdrop-filter: blur(12px) saturate(180%);
    }
    
    &-protected {
      background: rgba(220, 38, 38, 0.15);
      backdrop-filter: blur(8px);
    }
  }

  &-content-wrapper {
    pointer-events: auto;
    cursor: auto;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    position: relative;
  }
  
  &-content {
    @extend %card-base-enhanced;
    position: relative;
    z-index: var(--z-modal);
    max-width: 90vw;
    max-height: 90vh;
    width: auto;
    height: auto;
    display: flex;
    flex-direction: column;
    overflow: visible;
    
    // Size variants
    &--sm {
      max-width: min(400px, 90vw);
    }
    
    &--md {
      max-width: min(600px, 90vw);
    }
    
    &--lg {
      max-width: min(800px, 90vw);
    }
    
    &--xl {
      max-width: min(1200px, 90vw);
    }
    
    &--full {
      width: 100vw;
      height: 100vh;
      max-width: 100vw;
      max-height: 100vh;
      border-radius: 0;
    }
    
    &--auto {
      width: auto;
      max-width: 90vw;
      max-height: 90vh;
    }
    
    // Mobile adjustments
    @include responsive-max(sm) {
      max-width: calc(100vw - var(--space-4));
      max-height: calc(100vh - var(--space-4));
      margin: 0;
      
      &--full {
        border-radius: 0;
        width: 100vw;
        height: 100vh;
      }
    }
  }
  
  // Header
  &-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--space-4);
    border-bottom: 1px solid var(--color-border);
    flex-shrink: 0;
    min-height: 64px;
    
    @include responsive-max(sm) {
      padding: var(--space-3);
      min-height: 56px;
      position: relative;
      width: 100%;
      overflow: auto;
    }
  }
  
  // Body with proper scrolling
  &-body {
    flex: 1 1 auto;
    padding: var(--space-4);
    overflow-y: auto;
    overflow-x: hidden;
    
    @include responsive-max(sm) {
      padding: var(--space-3);
      max-height: calc(100vh - 180px);
      overflow-y: auto;
      -webkit-overflow-scrolling: touch;
    }
  }
  
  // Footer
  &-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--space-4);
    border-top: 1px solid var(--color-border);
    flex-shrink: 0;
    gap: var(--space-2);
    
    @include responsive-max(sm) {
      padding: var(--space-3);
      flex-direction: column-reverse;
      
      > * {
        width: 100%;
      }
    }
  }
  
  // Title
  &-title {
    font-size: var(--text-lg);
    font-weight: 600;
    color: var(--color-text);
    margin: 0;
    flex: 1 1 auto;
    min-width: 0;
    
    @include responsive-max(sm) {
      font-size: var(--text-base);
      max-width: calc(100% - 56px);
      word-wrap: break-word;
      overflow-wrap: break-word;
      hyphens: auto;
    }
  }
  
  // Subtitle
  &-subtitle {
    font-size: var(--text-sm);
    color: var(--color-text-muted);
    margin-top: var(--space-1);
    
    @include responsive-max(sm) {
      max-width: calc(100% - 56px);
      word-wrap: break-word;
      overflow-wrap: break-word;
    }
  }
}

.modal-close {
  min-width: 48px;
  min-height: 48px;
  width: 48px;
  height: 48px;
  padding: 0;
  background: var(--color-surface-elevated);
  border: 1px solid var(--color-border);
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--radius-md);
  cursor: pointer;
  transition: all var(--duration-fast) var(--ease-out);
  flex-shrink: 0;
  z-index: var(--z-modal);
  position: relative;
  pointer-events: auto;
  opacity: 1;
  visibility: visible;
  
  &:hover {
    background: var(--color-error-bg);
    border-color: var(--color-error);
    transform: scale(1.05);
  }
  
  &:active {
    transform: scale(0.95);
  }
  
  .material-symbols-rounded, i {
    font-size: 20px;
    line-height: 1;
    color: var(--color-text-muted);
  }
  
  &:hover .material-symbols-rounded,
  &:hover i {
    color: var(--color-error);
  }
  
  // Touch device adjustments
  @media (pointer: coarse) {
    min-width: 48px;
    min-height: 48px;
  }
  
  @include responsive-max(sm) {
    min-width: 48px;
    min-height: 48px;
    width: 48px;
    height: 48px;
    margin: 0;
    padding: 0;
    position: relative;
    z-index: var(--z-modal);
    flex-shrink: 0;
    justify-self: end;
    align-self: center;
    box-sizing: border-box;
    background: var(--color-surface-elevated);
    border: 2px solid var(--color-border);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
}

// Nested modal support and dropdown elevation
.modal-popup {
  z-index: var(--z-modal-popup);
  
  .modal-backdrop {
    z-index: var(--z-modal-popup);
  }
  
}

.modal-content {
  .dropdown-menu,
  .dropdown-portal,
  .choice-portal,
  .autosuggest-portal,
  .datepicker-portal,
  .popover-portal {
    z-index: 10;
    position: relative;
  }
  
  .choice-dropdown,
  .select-dropdown,
  .autosuggest-dropdown {
    z-index: 10;
    position: relative;
  }
  
  .tooltip {
    z-index: 20;
    position: relative;
  }
}

.modal-content .modal-content {
  
  .dropdown-menu,
  .dropdown-portal {
    z-index: calc(var(--z-modal-popup) + 60);
  }
}

// Modal state machine animations
.modal-animating {
  transition: all var(--modal-duration, 200ms) var(--modal-timing, ease-out);
}

.modal-scale {
  &.modal-in {
    opacity: 1;
    transform: scale(1);
  }
  &.modal-out {
    opacity: 0;
    transform: scale(0.95);
  }
}

.modal-fade {
  &.modal-in {
    opacity: 1;
  }
  &.modal-out {
    opacity: 0;
  }
}

.modal-slide {
  &.modal-in {
    opacity: 1;
    transform: translateY(0);
  }
  &.modal-out {
    opacity: 0;
    transform: translateY(20px);
  }
}

// Animation speed classes
.modal-speed-fast {
  --modal-duration: var(--duration-fast);
}

.modal-speed-normal {
  --modal-duration: var(--duration-normal);
}

.modal-speed-slow {
  --modal-duration: var(--duration-slow);
}

// Glass morphism variant
.modal-glass {
  background: rgba(255, 255, 255, 0.85);
  backdrop-filter: blur(20px) saturate(180%);
  -webkit-backdrop-filter: blur(20px) saturate(180%);
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.15);
  
  @media (prefers-color-scheme: dark) {
    background: rgba(30, 41, 59, 0.85);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
}

// Animations - Use existing keyframes from abstracts/_animations.scss

// Utility classes for modal control
.modal-open {
  overflow: hidden;
}

.modal-static {
  animation: shake 0.5s;
}

// Use existing shake animation from abstracts/_animations.scss

// Scrollbar styling for modal body
.modal-body {
  &::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }
  
  &::-webkit-scrollbar-track {
    background: var(--color-surface);
    border-radius: var(--radius-sm);
  }
  
  &::-webkit-scrollbar-thumb {
    background: var(--color-border);
    border-radius: var(--radius-sm);
    
    &:hover {
      background: var(--color-text-muted);
    }
  }
}

// Focus trap styling
.modal-focus-trap {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Modal variants
.modal {
  &--error {
    .modal-header {
      background: var(--color-error-bg);
      border-color: var(--color-error);
    }
    
    .modal-title {
      color: var(--color-error);
    }
  }
  
  &--warning {
    .modal-header {
      background: var(--color-warning-bg);
      border-color: var(--color-warning);
    }
    
    .modal-title {
      color: var(--color-warning-dark);
    }
  }
  
  &--success {
    .modal-header {
      background: var(--color-success-bg);
      border-color: var(--color-success);
    }
    
    .modal-title {
      color: var(--color-success-dark);
    }
  }
  
  &--info {
    .modal-header {
      background: var(--color-info-bg);
      border-color: var(--color-info);
    }
    
    .modal-title {
      color: var(--color-info-dark);
    }
  }
}

// Header alignment utilities
.modal-header {
  &-actions {
    display: flex;
    gap: var(--space-2);
    align-items: center;
    margin-left: auto;
    flex-shrink: 0;
  }
  
  &-compact {
    min-height: 48px;
    padding: var(--space-3);
  }
  
  &-large {
    min-height: 80px;
    padding: var(--space-5) var(--space-4);
  }
}

// Responsive behavior for nested content
.modal-responsive {
  @include responsive-max(sm) {
    position: static;
    top: auto;
    overflow: auto;
  }
}