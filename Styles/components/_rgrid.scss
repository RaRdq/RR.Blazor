@use '../abstracts' as *;

// RGrid - Smart CSS Grid component
.rgrid {
  --rgrid-gap: var(--space-4);
  --rgrid-columns: var(--grid-columns-md, 3);
  
  display: grid;
  gap: var(--rgrid-gap);
  width: 100%;
  grid-template-columns: repeat(var(--rgrid-columns), 1fr);
  align-items: stretch;
  
  // Responsive column system
  @include responsive-max(sm) {
    --rgrid-columns: var(--grid-columns-xs, 1);
  }
  
  @include responsive-min(sm) {
    --rgrid-columns: var(--grid-columns-sm, 2);
  }
  
  @include responsive-min(md) {
    --rgrid-columns: var(--grid-columns-md, 3);
  }
  
  @include responsive-min(lg) {
    --rgrid-columns: var(--grid-columns-lg, 4);
  }
  
  @include responsive-min(xl) {
    --rgrid-columns: var(--grid-columns-xl, 6);
  }
  
  // Mode-specific layouts
  &-cards {
    // Default CSS Grid - already configured above
  }
  
  &-list {
    // Single column for list mode
    grid-template-columns: 1fr;
    --rgrid-columns: 1;
  }
  
  &-gallery {
    // Gallery mode with image optimization
    grid-auto-flow: row dense;
    
    .card {
      overflow: hidden;
      
      img {
        width: 100%;
        height: 200px;
        object-fit: cover;
        transition: transform var(--duration-normal) var(--ease-out);
        
        &:hover {
          transform: scale(1.05);
        }
      }
    }
  }
  
  &-masonry {
    // Masonry layout (experimental)
    grid-template-rows: masonry;
    grid-auto-flow: column;
  }
  
  &-tiles {
    // Uniform tile sizes
    grid-auto-rows: minmax(200px, auto);
    
    > * {
      height: 100%;
    }
  }
  
  // Density variants
  &-compact {
    --rgrid-gap: var(--space-2);
    font-size: var(--text-sm);
  }
  
  &-dense {
    --rgrid-gap: var(--space-3);
  }
  
  &-spacious {
    --rgrid-gap: var(--space-6);
  }
  
  // Responsive mode overrides
  @include responsive-max(sm) {
    &-xs-list {
      grid-template-columns: 1fr;
    }
    
    &-xs-cards {
      --rgrid-columns: 1;
    }
  }
  
  @include responsive-min(sm) {
    &-sm-list {
      grid-template-columns: 1fr;
    }
    
    &-sm-cards {
      --rgrid-columns: 2;
    }
  }
  
  @include responsive-min(md) {
    &-md-list {
      grid-template-columns: 1fr;
    }
    
    &-md-cards {
      --rgrid-columns: 3;
    }
  }
  
  @include responsive-min(lg) {
    &-lg-cards {
      --rgrid-columns: 4;
    }
  }
  
  @include responsive-min(xl) {
    &-xl-cards {
      --rgrid-columns: 6;
    }
  }
}

// Toolbar for RGrid
.rgrid-toolbar {
  @extend %flex-between;
  padding: var(--space-4) 0 var(--space-4) 0;
  margin-bottom: var(--space-4);
  
  &-title {
    flex: 1;
    
    .rgrid-title {
      margin: 0 0 var(--space-1) 0;
      font-size: var(--text-xl);
      font-weight: var(--font-semibold);
      color: var(--color-text);
    }
    
    .rgrid-subtitle {
      margin: 0;
      font-size: var(--text-sm);
      color: var(--color-text-muted);
    }
  }
  
  &-actions {
    @extend %flex-center;
    gap: var(--space-2);
    
    .rgrid-quick-search {
      padding: var(--space-2) var(--space-3);
      background: var(--color-surface);
      border: 1px solid var(--color-border);
      border-radius: var(--radius-md);
      color: var(--color-text-muted);
      font-size: var(--text-sm);
      cursor: pointer;
      transition: all var(--duration-fast) var(--ease-out);
      
      &:hover {
        background: var(--color-surface-elevated);
        border-color: var(--color-border-hover);
      }
    }
    
    .rgrid-filter-btn {
      @include button-base();
      @include button-variant(
        var(--color-secondary),
        var(--color-on-secondary),
        transparent,
        var(--color-secondary-hover),
        var(--color-secondary-active)
      );
      & {
        font-size: var(--text-sm);
      }
    }
  }
}

// Empty state
.rgrid-empty {
  @extend %empty-state-base;
  grid-column: 1 / -1;
  padding: var(--space-12) var(--space-4);
  text-align: center;
  color: var(--color-text-muted);
  
  .icon {
    font-size: 48px;
    margin-bottom: var(--space-4);
    opacity: 0.5;
  }
}

// Not implemented mode placeholder
.rgrid-not-implemented {
  grid-column: 1 / -1;
  padding: var(--space-4);
  background: var(--color-warning-light);
  border: 1px solid var(--color-warning);
  border-radius: var(--radius-md);
  color: var(--color-warning-dark);
  font-size: var(--text-sm);
  text-align: center;
}

// List item fallback (when RListItem not available)
.rgrid-list-item {
  padding: var(--space-3) var(--space-4);
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-md);
  transition: all var(--duration-fast) var(--ease-out);
  
  &:hover {
    background: var(--color-surface-elevated);
    transform: translateY(-1px);
    box-shadow: var(--shadow-sm);
  }
}

// Performance optimizations
.rgrid {
  // GPU acceleration for smooth animations
  will-change: transform, opacity;
  
  // Containment for better performance
  contain: layout style;
  
  // Enable hardware acceleration for child elements
  > * {
    will-change: transform;
    backface-visibility: hidden;
  }
}

// Print styles
@media print {
  .rgrid {
    // Force single column for print
    grid-template-columns: 1fr !important;
    --rgrid-columns: 1;
    gap: var(--space-2);
    
    &-toolbar {
      display: none;
    }
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  .rgrid {
    * {
      transition: none !important;
      animation: none !important;
    }
  }
}

// High contrast mode
@media (prefers-contrast: high) {
  .rgrid {
    .rgrid-list-item,
    .card {
      border-width: 2px;
    }
  }
}