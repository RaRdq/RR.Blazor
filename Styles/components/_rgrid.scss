@use '../abstracts' as *;

// =============================================================================
// RGrid Component - Modern SCSS with BEM &- pattern
// =============================================================================

// Base grid container
.grid {
  &-container {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
    background: var(--color-surface);
    border-radius: var(--radius-lg);
    overflow: hidden;
    
    &.disabled {
      opacity: 0.6;
      pointer-events: none;
    }
    
    &.fixed-height {
      height: var(--grid-height);
    }
  }

  &-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: var(--space-4);
    border-bottom: 1px solid var(--color-border);
    background: var(--color-surface);
    
    &-content {
      flex: 1;
      min-width: 0;
    }
    
    &-actions {
      display: flex;
      gap: var(--space-2);
      align-items: center;
    }
  }

  &-subtitle {
    margin-top: var(--space-1);
    color: var(--color-text-muted);
    font-size: var(--text-sm);
  }

  &-toolbar {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: var(--space-3) var(--space-4);
    border-bottom: 1px solid var(--color-border);
    background: var(--color-surface-elevated);
    gap: var(--space-3);
    
    &-left {
      display: flex;
      align-items: center;
      gap: var(--space-3);
      flex: 1;
      min-width: 0;
    }
    
    &-right {
      display: flex;
      align-items: center;
      gap: var(--space-2);
    }
  }

  &-search {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    padding: var(--space-2) var(--space-3);
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-md);
    min-width: 240px;
    
    &:focus-within {
      border-color: var(--color-primary);
      box-shadow: 0 0 0 2px var(--color-primary-light);
    }
    
    &-icon {
      color: var(--color-text-muted);
      font-size: 20px;
    }
    
    &-input {
      flex: 1;
      background: transparent;
      border: none;
      outline: none;
      color: var(--color-text);
      font-size: var(--text-sm);
      
      &::placeholder {
        color: var(--color-text-muted);
      }
      
      &:disabled {
        cursor: not-allowed;
      }
    }
  }

  &-filters {
    display: flex;
    align-items: center;
    gap: var(--space-2);
  }

  &-filter {
    &-panel {
      padding: var(--space-4);
      background: var(--color-surface-elevated);
      border-bottom: 1px solid var(--color-border);
    }
  }

  &-content {
    &-container {
      flex: 1;
      overflow: visible;
      padding: var(--space-4);
      background: var(--color-background);
      min-height: 300px;
      position: relative;
      
      &:not([style*="height"]) {
        height: auto;
      }
      
      &.virtualized {
        overflow-y: auto;
        overflow-x: hidden;
      }
    }
  }

  &-loading {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: var(--space-8);
    gap: var(--space-3);
    min-height: 300px;
    
    p {
      color: var(--color-text-muted);
      font-size: var(--text-sm);
    }
  }
}

// Empty state component
.empty {
  &-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: var(--space-8);
    text-align: center;
    min-height: 300px;
    
    &-icon {
      font-size: 64px;
      color: var(--color-text-muted);
      opacity: 0.3;
      margin-bottom: var(--space-4);
    }
    
    &-description {
      color: var(--color-text-muted);
      font-size: var(--text-base);
    }
  }
}

// =============================================================================
// RGrid Main Component
// =============================================================================
.rgrid {
  // CSS Custom Properties
  --rgrid-gap: var(--space-4);
  
  // Base grid layout
  display: grid;
  gap: var(--rgrid-gap);
  width: 100%;
  align-items: stretch;
  min-height: 200px;
  
  // Performance optimizations
  will-change: transform, opacity;
  contain: layout style;
  
  // Responsive breakpoints - use actual CSS variables from component
  grid-template-columns: repeat(var(--grid-columns-xs, 1), 1fr);
  
  > * {
    will-change: transform;
    backface-visibility: hidden;
  }
  
  @include responsive-min(sm) {
    grid-template-columns: repeat(var(--grid-columns-sm, 2), 1fr);
  }
  
  @include responsive-min(md) {
    grid-template-columns: repeat(var(--grid-columns-md, 3), 1fr);
  }
  
  @include responsive-min(lg) {
    grid-template-columns: repeat(var(--grid-columns-lg, 4), 1fr);
  }
  
  @include responsive-min(xl) {
    grid-template-columns: repeat(var(--grid-columns-xl, 6), 1fr);
  }

  // =============================================================================
  // Grid Mode Variants
  // =============================================================================
  
  &-cards {
    > * {
      min-height: 150px;
      height: 100%;
    }
    
    .card {
      height: 100%;
      display: flex;
      flex-direction: column;
    }
  }
  
  &-list {
    grid-template-columns: 1fr !important;
  }
  
  &-gallery {
    grid-auto-flow: row dense;
    
    .card {
      overflow: hidden;
      
      img {
        width: 100%;
        height: 200px;
        object-fit: cover;
        transition: transform var(--duration-normal) var(--ease-out);
        
        &:hover {
          transform: scale(1.05);
        }
      }
    }
  }
  
  &-masonry {
    grid-template-rows: masonry;
    grid-auto-flow: column;
  }
  
  &-tiles {
    grid-auto-rows: minmax(200px, auto);
    align-items: stretch;
    
    .rtile {
      height: 100%;
      min-height: 200px;
      display: flex;
      flex-direction: column;
      
      &-media {
        flex-shrink: 0;
        height: 150px;
        padding-bottom: 0; // Override aspect ratio padding
      }
      
      &-image {
        object-fit: contain; // Show full image without cropping
        background: var(--color-surface-elevated);
      }
      
      &-content {
        padding: var(--space-3);
        flex: 1;
      }
    }
  }

  // =============================================================================
  // Density Variants
  // =============================================================================
  
  &-compact {
    --rgrid-gap: var(--space-2);
    font-size: var(--text-sm);
  }
  
  &-dense {
    --rgrid-gap: var(--space-3);
  }
  
  &-spacious {
    --rgrid-gap: var(--space-6);
  }

  // =============================================================================
  // Responsive Mode Overrides
  // =============================================================================
  
  @include responsive-max(sm) {
    &-xs {
      &-list {
        grid-template-columns: 1fr;
      }
      
      &-cards {
        --rgrid-columns: 1;
      }
    }
  }
  
  @include responsive-min(sm) {
    &-sm {
      &-list {
        grid-template-columns: 1fr;
      }
      
      &-cards {
        --rgrid-columns: 2;
      }
    }
  }
  
  @include responsive-min(md) {
    &-md {
      &-list {
        grid-template-columns: 1fr;
      }
      
      &-cards {
        --rgrid-columns: 3;
      }
    }
  }
  
  @include responsive-min(lg) {
    &-lg {
      &-cards {
        --rgrid-columns: 4;
      }
    }
  }
  
  @include responsive-min(xl) {
    &-xl {
      &-cards {
        --rgrid-columns: 6;
      }
    }
  }

  // =============================================================================
  // Toolbar Component
  // =============================================================================
  
  &-toolbar {
    @extend %flex-between;
    padding: var(--space-4) 0;
    margin-bottom: var(--space-4);
    
    &-title {
      flex: 1;
    }
    
    &-actions {
      @extend %flex-center;
      gap: var(--space-2);
    }
  }
  
  &-title {
    margin: 0 0 var(--space-1) 0;
    font-size: var(--text-xl);
    font-weight: var(--font-semibold);
    color: var(--color-text);
  }
  
  &-subtitle {
    margin: 0;
    font-size: var(--text-sm);
    color: var(--color-text-muted);
  }
  
  &-quick {
    &-search {
      padding: var(--space-2) var(--space-3);
      background: var(--color-surface);
      border: 1px solid var(--color-border);
      border-radius: var(--radius-md);
      color: var(--color-text-muted);
      font-size: var(--text-sm);
      cursor: pointer;
      transition: all var(--duration-fast) var(--ease-out);
      
      &:hover {
        background: var(--color-surface-elevated);
        border-color: var(--color-border-hover);
      }
    }
  }
  
  &-filter {
    &-btn {
      font-size: var(--text-sm);
      @include button-base();
      @include button-variant(
        var(--color-secondary),
        var(--color-on-secondary),
        transparent,
        var(--color-secondary-hover),
        var(--color-secondary-active)
      );
    }
  }

  // =============================================================================
  // State Components
  // =============================================================================
  
  &-empty {
    @extend %empty-state-base;
    grid-column: 1 / -1;
    padding: var(--space-12) var(--space-4);
    text-align: center;
    color: var(--color-text-muted);
    
    &-icon {
      font-size: 48px;
      margin-bottom: var(--space-4);
      opacity: 0.5;
    }
  }
  
  &-not {
    &-implemented {
      grid-column: 1 / -1;
      padding: var(--space-4);
      background: var(--color-warning-light);
      border: 1px solid var(--color-warning);
      border-radius: var(--radius-md);
      color: var(--color-warning-dark);
      font-size: var(--text-sm);
      text-align: center;
    }
  }

  // =============================================================================
  // List Item Fallback
  // =============================================================================
  
  &-list {
    &-item {
      padding: var(--space-3) var(--space-4);
      background: var(--color-surface);
      border: 1px solid var(--color-border);
      border-radius: var(--radius-md);
      transition: all var(--duration-fast) var(--ease-out);
      
      &:hover {
        background: var(--color-surface-elevated);
        transform: translateY(-1px);
        box-shadow: var(--shadow-sm);
      }
    }
  }
}

// =============================================================================
// Media Queries & Accessibility
// =============================================================================

@media print {
  .rgrid {
    grid-template-columns: 1fr !important;
    --rgrid-columns: 1;
    gap: var(--space-2);
    
    &-toolbar {
      display: none;
    }
  }
}

@media (prefers-reduced-motion: reduce) {
  .rgrid * {
    transition: none !important;
    animation: none !important;
  }
}

@media (prefers-contrast: high) {
  .rgrid {
    &-list-item,
    .card {
      border-width: 2px;
    }
  }
}