@use '../abstracts' as *;

// ============================================
// RFormField Styles - Utility-First with Extends
// ============================================

// Form container
.form {
  @extend %form-base;
  
  // Density variants using extends
  &.form-comfortable {
    @extend %form-container-comfortable;
  }
  
  &.form-dense {
    @extend %form-container-dense;
  }
  
  &.form-ultra-dense {
    @extend %form-container-ultra-dense;
  }
  
  &.form-glass {
    .form-field {
      background: var(--glass-bg-light);
      backdrop-filter: blur(var(--glass-blur-md));
      
      &:hover {
        background: var(--glass-bg-medium);
      }
      
      &:focus-within {
        background: var(--glass-bg-heavy);
        backdrop-filter: blur(var(--glass-blur-lg));
      }
    }
  }
}

// Form field container
.form-field {
  @extend %form-group-base;
  
  // Density variants using extends
  &.form-field-comfortable {
    @extend %form-field-comfortable;
  }
  
  &.form-field-dense {
    @extend %form-field-dense;
  }
  
  &.form-field-ultra-dense {
    @extend %form-field-ultra-dense;
  }
  
  // Floating label wrapper styles - RFormField specific with CSS-driven state detection
  .form-field-wrapper.form-field-floating-label {
    position: relative;
    
    .form-field-input {
      padding-top: var(--space-5); // Extra space for floating label
      padding-bottom: var(--space-4);
      
      // Floating label specific placeholder handling
      &::placeholder {
        opacity: 0; // Hide placeholder when floating label is used
        transition: opacity 0.2s ease-in-out;
      }
      
      // Show placeholder when focused and label is floating
      &:focus::placeholder {
        opacity: 0.6;
        transition-delay: 0.2s;
      }
    }
    
    .form-field-label {
      position: absolute;
      left: var(--space-3);
      top: 50%;
      transform: translateY(-50%);
      color: var(--color-text-secondary);
      font-size: var(--text-base);
      font-weight: var(--font-normal);
      pointer-events: none;
      transition: all var(--transition-fast) var(--ease-out);
      z-index: 10;
      background: var(--color-background-primary);
      padding: 0 var(--space-1);
      border-radius: var(--radius-sm);
    }
    
    // CSS-driven floating state detection - much more reliable
    .form-field-input:focus ~ .form-field-label,
    .form-field-input:not(:placeholder-shown) ~ .form-field-label {
      top: 0;
      transform: translateY(-50%);
      font-size: var(--text-sm);
      color: var(--color-text-primary);
      font-weight: var(--font-medium);
    }
    
    // Enhanced focused state styling
    .form-field-input:focus ~ .form-field-label {
      color: var(--color-interactive-primary);
      text-shadow: 0 0 0 var(--color-background-primary);
    }
    
    // Legacy JavaScript-managed classes for backwards compatibility
    &.form-field-floating .form-field-label,
    &.form-field-has-value .form-field-label {
      top: 0;
      transform: translateY(-50%);
      font-size: var(--text-sm);
      color: var(--color-text-primary);
      font-weight: var(--font-medium);
    }
    
    &.form-field-floating .form-field-label {
      color: var(--color-interactive-primary);
    }
    
    // Icon positioning adjustments for different field sizes
    .form-field-input.form-field-input-with-start-icon ~ .form-field-label {
      left: var(--space-12); // Match input padding for standard size
    }
    
    // Size-specific icon adjustments - use RR.Blazor semantic variables
    &[data-field-size="small"] {
      .form-field-input.form-field-input-with-start-icon ~ .form-field-label {
        left: var(--space-10);
      }
    }
    
    &[data-field-size="large"] {
      .form-field-input.form-field-input-with-start-icon ~ .form-field-label {
        left: var(--space-14);
      }
    }
  }
  
  // Form field wrapper - use the definition from _inputs.scss
  // Removed duplicate definition to prevent conflicts
  
  // Form field icon - use RR.Blazor utility-first system
  .form-field-icon {
    @extend %icon-base;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 2;
    color: var(--color-text-secondary);
    pointer-events: none;
    
    &.icon-interactive {
      &.clickable {
        @extend %icon-interactive;
      }
    }
    
    &.icon-muted {
      color: var(--color-text-muted);
    }
    
    // Position for start icon
    &:first-child {
      left: var(--space-3);
    }
    
    // Position for end icon
    &:last-child {
      right: var(--space-3);
    }
  }
  
  // Size variants - use RR.Blazor semantic variables
  &.form-field-sm .form-field-input {
    height: 2.5rem;
    padding: var(--space-2) var(--space-3);
    font-size: var(--text-sm);
  }
  
  &.form-field-lg .form-field-input {
    height: 3.5rem;
    padding: var(--space-4) var(--space-5);
    font-size: var(--text-lg);
  }
  
  // Valid state styling
  &.form-field-valid .form-field-input {
    border-color: var(--color-success);
  }
  
  // Help text
  &-help {
    font-size: var(--text-xs);
    color: var(--color-text-secondary);
    margin-top: var(--space-1);
    padding: var(--space-2) var(--space-3);
    background: var(--color-background-secondary);
    border-radius: var(--radius-sm);
    border: var(--border-1) solid var(--color-border-light);
    
    &-error {
      color: var(--color-error);
    }
    
    &-warning {
      color: var(--color-warning);
    }
  }
}

// Form label
.form-field-label {
  display: block;
  font-size: var(--text-sm);
  font-weight: var(--font-medium);
  color: var(--color-text-primary);
  margin-bottom: var(--space-2);
  
  &.form-field-label-required::after {
    content: '*';
    color: var(--color-error);
    margin-left: var(--space-1);
  }
  
  &.form-field-label-optional::after {
    content: ' (optional)';
    color: var(--color-text-secondary);
    font-weight: var(--font-normal);
  }
  
  // Size variants
  &.form-field-label-sm {
    font-size: var(--text-xs);
  }
  
  &.form-field-label-lg {
    font-size: var(--text-base);
  }
}

// Standalone form-label utility for compatibility
.form-label {
  @extend .form-field-label;
}

// Form input
.form-field-input {
  @extend %input-base-style;
  display: block;
  width: 100%;
  min-height: 3.5rem;
  padding: var(--space-4) var(--space-4);
  font-size: var(--text-base);
  font-weight: var(--font-normal);
  color: var(--color-text-primary);
  background: var(--color-background-elevated);
  border: var(--border-1) solid var(--color-border-medium);
  border-radius: var(--radius-lg);
  outline: none;
  transition: all var(--duration-normal) var(--ease-out);
  line-height: 1.5;
  
  // Mobile-first responsive design
  @include responsive-max(md) {
    min-height: 2.75rem; // 44px WCAG touch target
    font-size: var(--text-base); // Prevent iOS zoom
    padding: var(--space-3) var(--space-4);
  }
  
  // Placeholder styling
  &::placeholder {
    color: var(--color-text-tertiary);
    opacity: 1;
  }
  
  // Enhanced focus state
  &:focus {
    border-color: var(--color-interactive-primary);
    background: var(--color-background-elevated);
    box-shadow: 0 0 0 3px var(--color-interactive-focus);
    transform: translateY(-1px);
  }
  
  // Enhanced hover state
  &:hover:not(:focus):not(:disabled) {
    border-color: var(--color-border-strong);
    transform: translateY(-1px);
    box-shadow: var(--shadow-sm);
  }
  
  // Enhanced disabled state
  &:disabled {
    background: var(--color-background-secondary);
    color: var(--color-text-disabled);
    border-color: var(--color-border-light);
    cursor: not-allowed;
    opacity: var(--opacity-disabled);
    transform: none;
    box-shadow: none;
  }
  
  // Error states with improved visual feedback
  &.form-field-input-error,
  &:invalid {
    border-color: var(--color-error);
    background: var(--color-error-bg);
    
    &:focus {
      border-color: var(--color-error);
      background: var(--color-background-elevated);
      box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
    }
    
    &:hover:not(:focus) {
      border-color: var(--color-error);
      background: var(--color-error-bg);
    }
  }
  
  // Valid state styling with improved feedback
  &:valid:not(:placeholder-shown):not(.form-field-input-error) {
    border-color: var(--color-success);
    
    &:focus {
      border-color: var(--color-success);
      box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1);
    }
  }
  
  // Floating label variant
  &.form-field-input-floating-label {
    // Use placeholder for CSS selector detection
    &::placeholder {
      opacity: 0;
    }
  }
  
  // Size variants
  &.form-field-input-sm {
    height: 2.5rem;
    padding: var(--space-2) var(--space-3);
    font-size: var(--text-sm);
  }
  
  &.form-field-input-lg {
    height: 3.5rem;
    padding: var(--space-4) var(--space-5);
    font-size: var(--text-lg);
  }
  
  // Icon spacing - use RR.Blazor semantic variables
  &.form-field-input-with-start-icon {
    padding-left: var(--space-12);
  }
  
  &.form-field-input-with-end-icon {
    padding-right: var(--space-12);
  }
  
  // Autofill styling
  &:-webkit-autofill,
  &:-webkit-autofill:hover,
  &:-webkit-autofill:focus {
    -webkit-box-shadow: 0 0 0 30px var(--color-background-elevated) inset;
    -webkit-text-fill-color: var(--color-text-primary);
    border-color: var(--color-border-light);
    transition: background-color 5000s ease-in-out 0s;
  }
}

// Error display
.form-field-input-error {
  display: flex;
  align-items: flex-start;
  gap: var(--space-1);
  margin-top: var(--space-1);
  font-size: var(--text-xs);
  color: var(--color-error);
  word-wrap: break-word;
  overflow-wrap: break-word;
  max-width: 100%;
  
  i {
    font-size: var(--text-sm);
    flex-shrink: 0;
    margin-top: 0.1em;
  }
}

// Form layout utilities
.form-grid {
  @extend %responsive-grid-base;
  
  &-3 {
    @extend %responsive-grid-base;
    grid-template-columns: repeat(3, 1fr);
    
    @include responsive-max(md) {
      grid-template-columns: 1fr;
    }
  }
  
  &-4 {
    @extend %responsive-grid-base;
    grid-template-columns: repeat(4, 1fr);
    
    @include responsive-max(lg) {
      grid-template-columns: repeat(2, 1fr);
    }
    
    @include responsive-max(md) {
      grid-template-columns: 1fr;
    }
  }
  
  &-auto {
    @extend %responsive-grid-auto-fit;
  }
}

// Form actions
.form-actions {
  display: flex;
  justify-content: flex-end;
  gap: var(--space-3);
  margin-top: var(--space-6);
  padding-top: var(--space-4);
  border-top: var(--border-1) solid var(--color-border-light);
  
  @include responsive-max(sm) {
    flex-direction: column;
    gap: var(--space-3);
  }
}