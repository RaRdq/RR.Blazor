@use '../abstracts' as *;


// Base foundation for all form components
%component-foundation {
  @extend %touch-target;
  position: relative;
  width: 100%;
  transition: all var(--duration-normal) var(--ease-out);
  
  // Focus management
  &:focus-within {
    @include focus-ring();
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
  }
  
  // Hover effects
  &:hover:not(:focus-within) {
    @include hover-lift();
  }
}

// Input foundation for text inputs, textareas, selects
%input-foundation {
  @extend %input-base-style;
  @extend %touch-target;
  
  // Base styling
  border: var(--border-1) solid var(--color-border-medium);
  border-radius: var(--radius-xl);
  background: var(--color-background-elevated);
  color: var(--color-text-primary);
  font-size: var(--text-base);
  font-weight: var(--font-medium);
  line-height: 1.5;
  padding: var(--space-4) var(--space-5);
  min-height: 3.5rem;
  width: 100%;
  
  // Superior micro-interactions
  transition: all var(--duration-normal) var(--ease-out),
              box-shadow var(--duration-fast) var(--ease-out),
              transform var(--duration-fast) var(--ease-out);
  
  // Enhanced placeholder styling
  &::placeholder {
    color: var(--color-text-tertiary);
    opacity: 0.8;
    font-weight: var(--font-normal);
    transition: opacity var(--duration-fast) var(--ease-out);
  }
  
  // PRO hover state with elevation
  &:hover:not(:focus):not(:disabled) {
    border-color: var(--color-border-strong);
    background: var(--color-background-hover);
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
    
    &::placeholder {
      opacity: 0.9;
    }
  }
  
  // Superior focus state
  &:focus {
    outline: none;
    border-color: var(--color-interactive-primary);
    background: var(--color-background-elevated);
    transform: translateY(-1px);
    box-shadow: 
      var(--shadow-xl),
      0 0 0 4px var(--color-interactive-focus);
    
    &::placeholder {
      opacity: 0.6;
      transform: translateY(-1px);
    }
  }
  
  // Enhanced validation states
  &:invalid:not(:focus):not(:placeholder-shown) {
    border-color: var(--color-error);
    background: var(--color-error-bg);
    animation: shake var(--duration-normal) var(--ease-in-out);
    box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.1);
  }
  
  &:valid:not(:placeholder-shown):not(:focus) {
    border-color: var(--color-success);
    box-shadow: 0 0 0 1px var(--color-success);
  }
  
  // Mobile optimization
  @include responsive-max(md) {
    font-size: 16px; // Prevent iOS zoom
    min-height: 3.25rem;
    padding: var(--space-4);
  }
  
  // Disabled state
  &:disabled {
    background: var(--color-background-secondary);
    color: var(--color-text-disabled);
    border-color: var(--color-border-light);
    cursor: not-allowed;
    opacity: var(--opacity-disabled);
    transform: none;
    box-shadow: none;
  }
}

// Checkbox/radio foundation
%checkbox-foundation {
  flex-shrink: 0;
  width: 1.25rem;
  height: 1.25rem;
  border: var(--border-2) solid var(--color-border-medium);
  background: var(--color-background-elevated);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all var(--duration-fast) var(--ease-out);
  position: relative;
  cursor: pointer;
  
  // Ripple effect
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background: var(--color-interactive-primary);
    border-radius: inherit;
    transform: scale(0);
    opacity: 0;
    transition: all var(--duration-normal) var(--ease-out);
  }
  
  &:hover {
    @include hover-lift();
    border-color: var(--color-border-strong);
  }
  
  &:focus {
    @include focus-ring();
  }
}

// Glass variants for components
%glass-light-variant {
  @include glass-morphism(light);
  border: var(--border-1) solid var(--glass-border-light);
  
  &:hover {
    @include glass-morphism(medium);
    border-color: var(--glass-border-medium);
  }
  
  &:focus {
    @include glass-morphism(heavy);
    border-color: var(--color-interactive-primary);
  }
}

%glass-medium-variant {
  @include glass-morphism(medium);
  border: var(--border-1) solid var(--glass-border-medium);
  
  &:hover {
    @include glass-morphism(heavy);
    border-color: var(--glass-border-heavy);
  }
  
  &:focus {
    @include glass-morphism(frost);
    border-color: var(--color-interactive-primary);
  }
}

%glass-heavy-variant {
  @include glass-morphism(heavy);
  border: var(--border-1) solid var(--glass-border-heavy);
  
  &:hover {
    @include glass-morphism(frost);
    border-color: var(--glass-border-frost);
  }
  
  &:focus {
    backdrop-filter: blur(var(--glass-blur-xl)) saturate(180%);
    border-color: var(--color-interactive-primary);
  }
}

// ============================================
// Form Layout Utilities
// ============================================

.form {
  @extend %form-base;
  
  // Glass enhanced forms
  &.glass-enhanced {
    background: var(--glass-bg-frost);
    backdrop-filter: blur(var(--glass-blur-lg)) saturate(120%);
    border: var(--border-1) solid var(--glass-border-frost);
    box-shadow: var(--shadow-lg), inset 0 1px 0 var(--glass-border-light);
    transition: all var(--duration-normal) var(--ease-out);
    
    &:hover {
      backdrop-filter: blur(var(--glass-blur-xl)) saturate(140%);
      box-shadow: var(--shadow-xl), inset 0 1px 0 var(--glass-border-light);
    }
  }
}

.form-grid {
  @extend %responsive-grid-base;
  
  &.grid-2 {
    grid-template-columns: repeat(2, 1fr);
    
    @include responsive-max(md) {
      grid-template-columns: 1fr;
    }
  }
  
  &.grid-auto {
    @extend %responsive-grid-auto-fit;
  }
}

.form-row {
  @extend %form-row-base;
}

.form-actions {
  display: flex;
  justify-content: flex-end;
  gap: var(--space-3);
  margin-top: var(--space-6);
  padding-top: var(--space-4);
  border-top: var(--border-1) solid var(--color-border-light);
  
  @include responsive-max(sm) {
    flex-direction: column;
    gap: var(--space-3);
  }
}

.form-header {
  margin-bottom: var(--space-6);
  
  .form-title {
    @extend %section-title;
  }
  
  .form-description {
    @include text-body;
    color: var(--color-text-secondary);
    margin: 0;
  }
}

// Form Validation & States

.field-help {
  @include text-caption;
  color: var(--color-text-secondary);
  margin-top: var(--space-2);
}

.field-error {
  @include text-caption;
  color: var(--color-error);
  background: var(--color-error-bg);
  border-left: 3px solid var(--color-error);
  border-radius: var(--radius-md);
  padding: var(--space-2) var(--space-3);
  margin-top: var(--space-2);
  animation: shake var(--duration-normal) var(--ease-in-out);
}

.form-success {
  @extend %status-indicator-base;
  background: var(--color-success-bg);
  color: var(--color-success);
  border: var(--border-1) solid var(--color-success);
  margin-top: var(--space-4);
  padding: var(--space-4);
  border-radius: var(--radius-md);
  animation: fadeIn var(--duration-normal) var(--ease-out);
}

.form-error {
  @extend %status-indicator-base;
  background: var(--color-error-bg);
  color: var(--color-error);
  border: var(--border-1) solid var(--color-error);
  margin-top: var(--space-4);
  padding: var(--space-4);
  border-radius: var(--radius-md);
  animation: shake var(--duration-normal) var(--ease-in-out), fadeIn var(--duration-normal) var(--ease-out);
}

// Form States

.form-field-success {
  @include interactive-states(var(--color-success));
  animation: successFadeIn var(--duration-normal) var(--ease-out);
}

.form-field-error {
  @include interactive-states(var(--color-error));
  animation: shake var(--duration-normal) var(--ease-in-out);
}

.form-field-warning {
  @include interactive-states(var(--color-warning));
}

// Loading States

.form-loading {
  position: relative;
  
  &::before {
    content: '';
    @extend %fixed-full;
    background: var(--color-background-elevated);
    opacity: 0.8;
    z-index: 10;
    border-radius: inherit;
  }
  
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 1.5rem;
    height: 1.5rem;
    border: 2px solid var(--color-border-light);
    border-top: 2px solid var(--color-interactive-primary);
    border-radius: var(--radius-full);
    animation: spin var(--duration-very-slow) linear infinite;
    z-index: var(--z-floating);
  }
}

// Accessibility & Mobile

.form-field-group {
  &:focus-within {
    .field-label {
      color: var(--color-interactive-primary);
    }
  }
}

.form-navigation {
  display: flex;
  gap: var(--space-2);
  margin-top: var(--space-4);
  
  .nav-button {
    @include focus-ring();
  }
}

.sr-only {
  @extend %sr-only;
}

.form-announcements {
  @extend %sr-only;
  left: -10000px;
}