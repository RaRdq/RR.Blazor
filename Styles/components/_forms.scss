// RR.Blazor Forms - Comprehensive Form Styling System
// Professional form components, layouts, and patterns
@use '../abstracts' as *;

// ============================================
// Base Extends & Placeholders
// ============================================

%form-field-base {
  display: flex;
  flex-direction: column;
  gap: var(--space-1);
}

%input-base {
  width: 100%;
  border: var(--border-1) solid var(--color-border-medium);
  border-radius: var(--radius-md);
  background-color: var(--color-background-elevated);
  color: var(--color-text-primary);
  transition: all var(--duration-200) var(--ease-out);
  
  &:focus {
    outline: none;
    border-color: var(--color-interactive-primary);
    box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb), 0.1);
  }
  
  &:disabled {
    background-color: var(--color-background-disabled);
    color: var(--color-text-disabled);
    cursor: not-allowed;
  }
  
  &:read-only {
    background-color: var(--color-background-secondary);
    cursor: default;
  }
}

// ============================================
// Form Components - Complex form elements
// ============================================
// Note: Basic input, select, textarea styles are in _inputs.scss
// This file contains form-specific components and layouts
  
  &--no-resize {
    resize: none;
  }
  
  &--auto-resize {
    resize: none;
    overflow: hidden;
  }
}

// ============================================
// Custom Controls
// ============================================

// Checkbox - Professional custom checkbox
.checkbox {
  position: relative;
  display: inline-flex;
  align-items: center;
  gap: var(--space-3);
  cursor: pointer;
  font-size: var(--text-sm);
  color: var(--color-text-primary);
  
  input[type="checkbox"] {
    position: absolute;
    opacity: 0;
    pointer-events: none;
  }
  
  &__box {
    width: 1.25rem;
    height: 1.25rem;
    border: var(--border-2) solid var(--color-border-medium);
    border-radius: var(--radius-sm);
    background: var(--color-background-elevated);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all var(--duration-200) var(--ease-out);
    flex-shrink: 0;
    
    &::after {
      content: '';
      width: 0.75rem;
      height: 0.75rem;
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='m13.854 3.646-7.5 7.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6 10.293l7.146-7.147a.5.5 0 0 1 .708.708z'/%3e%3c/svg%3e");
      background-size: contain;
      background-repeat: no-repeat;
      background-position: center;
      opacity: 0;
      transform: scale(0.8);
      transition: all var(--duration-200) var(--ease-out);
    }
  }
  
  &:hover .checkbox__box {
    border-color: var(--color-border-strong);
    box-shadow: 0 2px 4px var(--shadow-color-5);
  }
  
  input:checked + .checkbox__box {
    background: var(--gradient-primary);
    border-color: var(--color-interactive-primary);
    
    &::after {
      opacity: 1;
      transform: scale(1);
    }
  }
  
  input:focus + .checkbox__box {
    box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb), 0.12);
  }
  
  input:disabled + .checkbox__box {
    background: var(--color-background-secondary);
    border-color: var(--color-border-light);
    opacity: var(--disabled-opacity);
  }
  
  // Size variants
  &--sm {
    font-size: var(--text-xs);
    gap: var(--space-2);
    
    .checkbox__box {
      width: 1rem;
      height: 1rem;
      
      &::after {
        width: 0.625rem;
        height: 0.625rem;
      }
    }
  }
  
  &--lg {
    font-size: var(--text-base);
    gap: var(--space-4);
    
    .checkbox__box {
      width: 1.5rem;
      height: 1.5rem;
      
      &::after {
        width: 1rem;
        height: 1rem;
      }
    }
  }
}

// Radio - Professional custom radio
.radio {
  position: relative;
  display: inline-flex;
  align-items: center;
  gap: var(--space-3);
  cursor: pointer;
  font-size: var(--text-sm);
  color: var(--color-text-primary);
  
  input[type="radio"] {
    position: absolute;
    opacity: 0;
    pointer-events: none;
  }
  
  &__circle {
    width: 1.25rem;
    height: 1.25rem;
    border: var(--border-2) solid var(--color-border-medium);
    border-radius: 50%;
    background: var(--color-background-elevated);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all var(--duration-200) var(--ease-out);
    flex-shrink: 0;
    
    &::after {
      content: '';
      width: 0.5rem;
      height: 0.5rem;
      background: var(--color-interactive-primary);
      border-radius: 50%;
      opacity: 0;
      transform: scale(0.5);
      transition: all var(--duration-200) var(--ease-out);
    }
  }
  
  &:hover .radio__circle {
    border-color: var(--color-border-strong);
    box-shadow: 0 2px 4px var(--shadow-color-5);
  }
  
  input:checked + .radio__circle {
    border-color: var(--color-interactive-primary);
    
    &::after {
      opacity: 1;
      transform: scale(1);
    }
  }
  
  input:focus + .radio__circle {
    box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb), 0.12);
  }
  
  input:disabled + .radio__circle {
    background: var(--color-background-secondary);
    border-color: var(--color-border-light);
    opacity: var(--disabled-opacity);
  }
  
  // Size variants
  &--sm {
    font-size: var(--text-xs);
    gap: var(--space-2);
    
    .radio__circle {
      width: 1rem;
      height: 1rem;
      
      &::after {
        width: 0.375rem;
        height: 0.375rem;
      }
    }
  }
  
  &--lg {
    font-size: var(--text-base);
    gap: var(--space-4);
    
    .radio__circle {
      width: 1.5rem;
      height: 1.5rem;
      
      &::after {
        width: 0.75rem;
        height: 0.75rem;
      }
    }
  }
}

// Switch - Professional toggle
.switch {
  position: relative;
  display: inline-flex;
  align-items: center;
  gap: var(--space-3);
  cursor: pointer;
  font-size: var(--text-sm);
  color: var(--color-text-primary);
  
  input[type="checkbox"] {
    position: absolute;
    opacity: 0;
    pointer-events: none;
  }
  
  &__track {
    width: 3rem;
    height: 1.5rem;
    background: var(--color-background-secondary);
    border: var(--border-1) solid var(--color-border-medium);
    border-radius: var(--radius-full);
    transition: all var(--duration-200) var(--ease-out);
    position: relative;
    flex-shrink: 0;
    
    &::after {
      content: '';
      position: absolute;
      top: 2px;
      left: 2px;
      width: 1.25rem;
      height: 1.25rem;
      background: var(--color-background-elevated);
      border-radius: 50%;
      transition: all var(--duration-200) var(--ease-out);
      box-shadow: 0 1px 3px var(--shadow-color-10);
    }
  }
  
  &:hover .switch__track {
    border-color: var(--color-border-strong);
  }
  
  input:checked + .switch__track {
    background: var(--gradient-primary);
    border-color: var(--color-interactive-primary);
    
    &::after {
      transform: translateX(1.5rem);
      background: var(--color-background-elevated);
    }
  }
  
  input:focus + .switch__track {
    box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb), 0.12);
  }
  
  input:disabled + .switch__track {
    opacity: var(--disabled-opacity);
    cursor: not-allowed;
  }
  
  // Size variants
  &--sm {
    font-size: var(--text-xs);
    gap: var(--space-2);
    
    .switch__track {
      width: 2.5rem;
      height: 1.25rem;
      
      &::after {
        width: 1rem;
        height: 1rem;
      }
    }
    
    input:checked + .switch__track::after {
      transform: translateX(1.25rem);
    }
  }
  
  &--lg {
    font-size: var(--text-base);
    gap: var(--space-4);
    
    .switch__track {
      width: 3.5rem;
      height: 1.75rem;
      
      &::after {
        width: 1.5rem;
        height: 1.5rem;
      }
    }
    
    input:checked + .switch__track::after {
      transform: translateX(1.75rem);
    }
  }
}

// ============================================
// Form Field Component
// ============================================

.form-field {
  @extend %form-field-base;
  margin-bottom: var(--space-4); // Add default spacing between form fields
  
  &__label {
    font-size: var(--text-sm);
    font-weight: var(--font-medium);
    color: var(--color-text-primary);
    margin-bottom: var(--space-1);
    
    &--required::after {
      content: ' *';
      color: var(--color-error);
    }
  }
  
  &__wrapper {
    position: relative;
    display: flex;
    align-items: center;
  }
  
  &__icon-container {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--color-text-tertiary);
    pointer-events: none;
    z-index: 1;
    
    &--start {
      left: var(--space-3);
    }
    
    &--end {
      right: var(--space-3);
    }
  }
  
  &__input {
    @extend %input-base;
    padding: var(--space-3) var(--space-4);
    min-height: 2.5rem; // 40px
    
    // Padding adjustments for icons
    &--with-start-icon {
      padding-left: var(--space-10); // 40px
    }
    
    &--with-end-icon {
      padding-right: var(--space-10); // 40px
    }
    
    // Size variants
    &--sm {
      padding: var(--space-2) var(--space-3);
      font-size: var(--text-sm);
      min-height: 2rem; // 32px
      
      &.form-field__input--with-start-icon {
        padding-left: var(--space-8); // 32px
      }
      
      &.form-field__input--with-end-icon {
        padding-right: var(--space-8); // 32px
      }
    }
    
    &--lg {
      padding: var(--space-4) var(--space-5);
      font-size: var(--text-base);
      min-height: 3rem; // 48px
      
      &.form-field__input--with-start-icon {
        padding-left: var(--space-12); // 48px
      }
      
      &.form-field__input--with-end-icon {
        padding-right: var(--space-12); // 48px
      }
    }
    
    // Fix autofill overlap
    &:-webkit-autofill {
      -webkit-box-shadow: 0 0 0 30px var(--color-background-elevated) inset !important;
      -webkit-text-fill-color: var(--color-text-primary) !important;
      transition: background-color 5000s ease-in-out 0s;
    }
    
    &:-webkit-autofill:hover,
    &:-webkit-autofill:focus {
      -webkit-box-shadow: 0 0 0 30px var(--color-background-elevated) inset !important;
      -webkit-text-fill-color: var(--color-text-primary) !important;
    }
  }
  
  &__textarea {
    @extend %input-base;
    resize: vertical;
    min-height: var(--space-20);
    
    &--auto-resize {
      resize: none;
    }
  }
  
  &__select {
    @extend %input-base;
    cursor: pointer;
    
    &:disabled {
      cursor: not-allowed;
    }
  }
  
  &__checkbox {
    width: var(--space-5);
    height: var(--space-5);
    border: var(--border-2) solid var(--color-border-medium);
    border-radius: var(--radius-sm);
    cursor: pointer;
    
    &:focus {
      outline: none;
      border-color: var(--color-interactive-primary);
      box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb), 0.1);
    }
    
    &:disabled {
      cursor: not-allowed;
      opacity: 0.5;
    }
  }
  
  &__range {
    width: 100%;
    height: var(--space-2);
    background: var(--color-background-secondary);
    border-radius: var(--radius-lg);
    appearance: none;
    cursor: pointer;
    
    &::-webkit-slider-thumb {
      appearance: none;
      width: var(--space-5);
      height: var(--space-5);
      border-radius: var(--radius-full);
      background: var(--color-interactive-primary);
      cursor: pointer;
      box-shadow: var(--shadow-sm);
      
      &:hover {
        background: var(--color-interactive-hover);
      }
    }
    
    &::-moz-range-thumb {
      width: var(--space-5);
      height: var(--space-5);
      border-radius: var(--radius-full);
      background: var(--color-interactive-primary);
      cursor: pointer;
      border: none;
      box-shadow: var(--shadow-sm);
      
      &:hover {
        background: var(--color-interactive-hover);
      }
    }
    
    &:disabled {
      cursor: not-allowed;
      opacity: 0.5;
    }
  }
  
  &__file {
    width: 100%;
    font-size: var(--text-sm);
    color: var(--color-text-secondary);
    
    &::file-selector-button {
      margin-right: var(--space-4);
      padding: var(--space-2) var(--space-4);
      border: none;
      border-radius: var(--radius-md);
      background: var(--color-interactive-primary);
      color: var(--color-text-inverse);
      font-size: var(--text-sm);
      font-weight: var(--font-medium);
      cursor: pointer;
      transition: background-color var(--duration-200) var(--ease-out);
      
      &:hover {
        background: var(--color-interactive-hover);
      }
    }
    
    &:disabled {
      cursor: not-allowed;
      opacity: 0.5;
      
      &::file-selector-button {
        cursor: not-allowed;
      }
    }
  }
  
  // Error & validation messages
  &__error {
    display: flex;
    align-items: center;
    gap: var(--space-1);
    margin-top: var(--space-1);
    font-size: var(--text-xs);
    color: var(--color-error);
    
    i {
      font-size: var(--text-sm);
    }
  }
  
  &__help {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: var(--space-1);
    font-size: var(--text-xs);
    color: var(--color-text-tertiary);
  }
  
  &__character-count {
    font-size: var(--text-xs);
    color: var(--color-text-tertiary);
    
    &--warning {
      color: var(--color-warning);
    }
    
    &--error {
      color: var(--color-error);
    }
  }
  
  // Error states
  &--error {
    .form-field__input,
    .form-field__textarea,
    .form-field__select,
    .form-field__checkbox {
      border-color: var(--color-error);
      
      &:focus {
        border-color: var(--color-error);
        box-shadow: 0 0 0 3px rgba(var(--color-error-rgb), 0.1);
      }
    }
  }
  
  // Icon positioning
  &__icon-container {
    position: absolute;
    top: 0;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    pointer-events: none;
    color: var(--color-text-secondary);
    
    &--start {
      left: var(--space-3);
    }
    
    &--end {
      right: var(--space-3);
    }
  }
}

// ============================================
// Form Groups & Wrappers
// ============================================

// Form Group - Professional field grouping
.form-group {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
  margin-bottom: var(--space-4);
  
  &__label {
    font-size: var(--text-sm);
    font-weight: var(--font-medium);
    color: var(--color-text-primary);
    margin-bottom: var(--space-1);
    
    &--required::after {
      content: ' *';
      color: var(--color-error);
    }
  }
  
  &__help {
    font-size: var(--text-xs);
    color: var(--color-text-tertiary);
    margin-top: var(--space-1);
  }
  
  &__error {
    font-size: var(--text-xs);
    color: var(--color-error);
    margin-top: var(--space-1);
    display: flex;
    align-items: center;
    gap: var(--space-1);
  }
  
  &__success {
    font-size: var(--text-xs);
    color: var(--color-success);
    margin-top: var(--space-1);
    display: flex;
    align-items: center;
    gap: var(--space-1);
  }
  
  // Horizontal layout
  &--horizontal {
    flex-direction: row;
    align-items: center;
    gap: var(--space-4);
    
    .form-group__label {
      min-width: 8rem;
      margin-bottom: 0;
    }
    
    @include responsive-max(md) {
      flex-direction: column;
      align-items: stretch;
      
      .form-group__label {
        min-width: auto;
      }
    }
  }
  
  // Compact variant
  &--compact {
    margin-bottom: var(--space-3);
    gap: var(--space-1);
  }
}

// ============================================
// Form Layouts & Patterns
// ============================================

// Form container patterns
.form-container {
  max-width: var(--container-sm);
  margin: 0 auto;
  padding: var(--space-6);
  
  @include responsive-max(md) {
    padding: var(--space-4);
  }
  
  @include responsive-max(sm) {
    padding: var(--space-3);
  }
  
  &--narrow {
    max-width: var(--container-xs);
  }
  
  &--wide {
    max-width: var(--container-md);
  }
  
  &--full {
    max-width: none;
    padding: 0;
  }
}

// Form section patterns
.form-section {
  padding: var(--space-4);
  background: var(--color-background-secondary);
  border-radius: var(--radius-md);
  margin-bottom: var(--space-6);

  &__title {
    font-size: var(--text-lg);
    font-weight: var(--font-semibold);
    color: var(--color-text-primary);
    margin: 0 0 var(--space-4) 0;
  }
  
  &--compact {
    padding: var(--space-3);
    margin-bottom: var(--space-4);
  }
  
  &--elevated {
    background: var(--color-background-elevated);
    border: var(--border-1) solid var(--color-border-light);
    box-shadow: var(--shadow-sm);
  }
}

// Form grid patterns
.form-grid {
  display: grid;
  gap: var(--space-4);
  
  &--2 {
    grid-template-columns: repeat(2, 1fr);
    
    @include responsive-max(md) {
      grid-template-columns: 1fr;
    }
  }
  
  &--3 {
    grid-template-columns: repeat(3, 1fr);
    
    @include responsive-max(lg) {
      grid-template-columns: repeat(2, 1fr);
    }
    
    @include responsive-max(md) {
      grid-template-columns: 1fr;
    }
  }
  
  &--auto {
    grid-template-columns: repeat(auto-fit, minmax(15.625rem, 1fr));
    
    @include responsive-max(sm) {
      grid-template-columns: 1fr;
    }
  }
  
  &--compact {
    gap: var(--space-3);
  }
}

// Form row patterns
.form-row {
  display: flex;
  gap: var(--space-4);

  @include responsive-max(sm) {
    flex-direction: column;
  }

  &--equal {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(15.625rem, 1fr));
    gap: var(--space-4);
    
    @include responsive-max(sm) {
      grid-template-columns: 1fr;
    }
  }
  
  &--thirds {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: var(--space-4);

    @include responsive-max(sm) {
      grid-template-columns: 1fr;
    }
  }
}

// Form actions patterns
.form-actions {
  display: flex;
  gap: var(--space-3);
  justify-content: flex-end;
  margin-top: var(--space-6);
  padding-top: var(--space-4);
  border-top: var(--border-1) solid var(--color-border-light);

  @include responsive-max(sm) {
    flex-direction: column-reverse;
  }
  
  &--start {
    justify-content: flex-start;
  }
  
  &--center {
    justify-content: center;
  }
  
  &--between {
    justify-content: space-between;
  }
}

// ============================================
// Validation & Helper Patterns
// ============================================

// Form validation patterns
.form-error {
  color: var(--color-error);
  font-size: var(--text-xs);
  margin-top: var(--space-1);
  font-weight: var(--font-medium);
}

.form-help {
  color: var(--color-text-tertiary);
  font-size: var(--text-xs);
  margin-top: var(--space-1);

  &--with-count {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
}

.form-character-count {
  font-size: var(--text-xs);
  font-weight: var(--font-medium);
  color: var(--color-text-tertiary);

  &--near {
    color: var(--color-warning);
  }

  &--warning {
    color: var(--color-warning);
    font-weight: var(--font-semibold);
  }

  &--over {
    color: var(--color-error);
    font-weight: var(--font-bold);
  }
}

// ============================================
// Legacy Patterns (for compatibility)
// ============================================

// Legacy form group
.form-group {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
  margin-bottom: var(--space-4);

  &--required {
    .form-label::after {
      content: ' *';
      color: var(--color-error);
    }
  }

  &--horizontal {
    flex-direction: row;
    align-items: center;
    gap: var(--space-3);

    .form-label {
      margin-bottom: 0;
      min-width: 7.5rem;
    }
  }

  &--error {
    .form-input,
    .form-select,
    .form-textarea {
      border-color: var(--color-error);

      &:focus {
        border-color: var(--color-error);
        box-shadow: 0 0 0 0.1875rem hsla(0, 84%, 60%, 0.1);
      }
    }
  }
  
  &--compact {
    margin-bottom: var(--space-3);
    gap: var(--space-1);
  }
}

// Legacy form inputs
.form-input,
.form-select,
.form-textarea {
  width: 100%;
  padding: var(--space-3) var(--space-4);
  border: var(--border-1) solid var(--color-border-light);
  border-radius: var(--radius-md);
  background: var(--color-background-primary);
  color: var(--color-text-primary);
  font-size: var(--text-sm);
  transition: all 0.2s ease;

  &:focus {
    outline: none;
    border-color: var(--color-interactive-primary);
    box-shadow: 0 0 0 0.1875rem hsla(221, 83%, 53%, 0.1);
  }

  &:disabled {
    background: var(--color-background-disabled);
    color: var(--color-text-disabled);
    cursor: not-allowed;
    opacity: 0.6;
  }

  &--small {
    padding: var(--space-2) var(--space-3);
    font-size: var(--text-xs);
  }

  &--large {
    padding: var(--space-4) var(--space-5);
    font-size: var(--text-base);
  }
  
  &--error {
    border-color: var(--color-error);

    &:focus {
      border-color: var(--color-error);
      box-shadow: 0 0 0 0.1875rem hsla(0, 84%, 60%, 0.1);
    }
  }

  &--success {
    border-color: var(--color-success);

    &:focus {
      border-color: var(--color-success);
      box-shadow: 0 0 0 0.1875rem hsla(142, 76%, 36%, 0.1);
    }
  }
}

.form-textarea {
  min-height: 6.25rem;
  resize: vertical;
}

.form-select {
  cursor: pointer;
  appearance: none;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3c/polyline%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right var(--space-3) center;
  background-size: var(--space-4);
  padding-right: var(--space-8);
}

// Legacy form label
.form-label {
  font-weight: var(--font-semibold);
  color: var(--color-text-primary);
  font-size: var(--text-sm);
  margin-bottom: var(--space-2);
  
  &--uppercase {
    text-transform: uppercase;
    letter-spacing: var(--tracking-wide);
    font-size: var(--text-xs);
  }
}

// Legacy checkbox/radio patterns
.form-checkbox,
.form-radio {
  display: flex;
  align-items: center;
  gap: var(--space-2);
  cursor: pointer;

  input {
    width: var(--space-5);
    height: var(--space-5);
    accent-color: var(--color-interactive-primary);
    margin: 0;
  }

  &__label {
    font-size: var(--text-sm);
    color: var(--color-text-primary);
    cursor: pointer;
  }
}

.checkbox-group,
.radio-group {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
  
  &--inline {
    flex-direction: row;
    gap: var(--space-4);
    
    @include responsive-max(sm) {
      flex-direction: column;
      gap: var(--space-2);
    }
  }
}

// Field group patterns  
.field-group {
  margin-bottom: var(--space-4);
  
  &__label {
    display: block;
    font-weight: var(--font-semibold);
    color: var(--color-text-primary);
    margin-bottom: var(--space-2);
    font-size: var(--text-sm);
  }
  
  &__input {
    width: 100%;
  }
  
  &__help {
    margin-top: var(--space-2);
    font-size: var(--text-sm);
    color: var(--color-text-tertiary);
    line-height: var(--leading-relaxed);
  }
  
  &__error {
    margin-top: var(--space-2);
    font-size: var(--text-sm);
    color: var(--color-error);
    font-weight: var(--font-medium);
  }
  
  &--required {
    .field-group__label::after {
      content: ' *';
      color: var(--color-error);
    }
  }
  
  &--inline {
    display: flex;
    align-items: center;
    gap: var(--space-3);

    .field-group__input {
      flex: 1;
    }
  }
}

// Content grid patterns for forms
.content-grid {
  display: grid;
  gap: var(--space-6);
  
  &--2col {
    grid-template-columns: repeat(2, 1fr);
    
    @include responsive-max(md) {
      grid-template-columns: 1fr;
      gap: var(--space-4);
    }
  }
  
  &--3col {
    grid-template-columns: repeat(3, 1fr);
    
    @include responsive-max(lg) {
      grid-template-columns: repeat(2, 1fr);
    }
    
    @include responsive-max(md) {
      grid-template-columns: 1fr;
      gap: var(--space-4);
    }
  }
  
  &--auto {
    grid-template-columns: repeat(auto-fit, minmax(18.75rem, 1fr));
    
    @include responsive-max(md) {
      grid-template-columns: 1fr;
      gap: var(--space-4);
    }
  }
}