
@use '../abstracts' as *;

.progress-container {
  display: flex;
  flex-direction: column;
  width: 100%;

  gap: var(--space-3);

  @include responsive-min(md) {
    gap: var(--space-2);
  }
}

.progress-label {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-weight: var(--font-medium);
  color: var(--color-text);

  font-size: var(--text-base);

  @include responsive-min(md) {
    font-size: var(--text-sm);
  }
}

.progress-value {
  color: var(--color-text-muted);

  font-size: var(--text-sm);
  font-weight: var(--font-semibold);

  @include responsive-min(md) {
    font-size: var(--text-xs);
    font-weight: var(--font-medium);
  }
}

.progress {
  width: 100%;
  background: var(--color-surface);
  border-radius: var(--radius-full);
  overflow: hidden;
  position: relative;

  height: var(--space-3);

  @include responsive-min(md) {
    height: var(--space-2);
  }

  &-bar {
    height: 100%;
    background: var(--color-primary);
    border-radius: inherit;
    position: relative;
    width: var(--progress-width, 0%);
    transition: width var(--duration-normal) var(--ease-out);
    will-change: width;
    display: flex;
    align-items: center;
    justify-content: center;

    @media (prefers-reduced-motion: reduce) {
      transition: width var(--duration-fast) ease-out;
    }

    // Label inside the progress bar
    .progress-bar-label {
      color: var(--color-text-inverse);
      font-size: var(--text-xs);
      font-weight: var(--font-semibold);
      white-space: nowrap;
      position: relative;
      z-index: var(--z-base);
    }
  }

  &-density-compact {
    .progress-label {
      font-size: var(--text-xs);
      margin-bottom: var(--space-1);
    }
    .progress-value {
      font-size: var(--text-2xs);
    }
  }
  
  &-density-dense {
    .progress-label {
      font-size: var(--text-sm);
      margin-bottom: var(--space-2);
    }
    .progress-value {
      font-size: var(--text-xs);
    }
  }
  
  &-density-spacious {
    .progress-label {
      font-size: var(--text-lg);
      margin-bottom: var(--space-4);
    }
    .progress-value {
      font-size: var(--text-base);
    }
  }
  
  &-sm {
    height: var(--space-2);
  }

  &-lg {
    height: var(--space-4);
  }

  &-xl {
    height: var(--space-5);
  }

  &-primary &-bar {
    background: var(--gradient-primary, var(--color-primary));
  }
  
  &-success &-bar {
    background: var(--gradient-success, var(--color-success));
  }

  &-warning &-bar {
    background: var(--gradient-warning, var(--color-warning));
  }

  &-error &-bar {
    background: var(--gradient-error, var(--color-error));
  }
  
  &-info &-bar {
    background: var(--gradient-info, var(--color-info));
  }

  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg,
      transparent 0%,
      color-mix(in srgb, var(--color-text-inverse) 15%, transparent) 50%,
      transparent 100%);
    background-size: 200% 100%;
    background-position: -200% center;
    animation: shimmer 2s infinite;
    will-change: background-position;
    border-radius: inherit;
    pointer-events: none;
    mask: linear-gradient(to right, 
      white 0%, 
      white var(--progress-width, 0%), 
      transparent var(--progress-width, 0%));
    -webkit-mask: linear-gradient(to right, 
      white 0%, 
      white var(--progress-width, 0%), 
      transparent var(--progress-width, 0%));

    @media (prefers-reduced-motion: reduce) {
      animation: none;
    }
  }
  
  &:has(.progress-bar-label)::after,
  &:has(.progress-bar-no-shimmer)::after {
    display: none;
  }

  &-bar-striped {
    background-image: linear-gradient(45deg,
      color-mix(in srgb, var(--color-text-inverse) 25%, transparent) 25%,
      transparent 25%,
      transparent 50%,
      color-mix(in srgb, var(--color-text-inverse) 25%, transparent) 50%,
      color-mix(in srgb, var(--color-text-inverse) 25%, transparent) 75%,
      transparent 75%);
    background-size: 2rem 2rem;
  }

  &:has(.progress-bar-animated)::after {
    background: linear-gradient(45deg,
      color-mix(in srgb, var(--color-text-inverse) 25%, transparent) 25%,
      transparent 25%,
      transparent 50%,
      color-mix(in srgb, var(--color-text-inverse) 25%, transparent) 50%,
      color-mix(in srgb, var(--color-text-inverse) 25%, transparent) 75%,
      transparent 75%);
    background-size: 2rem 2rem;
    animation: progress-stripes 1s linear infinite;
  }

&-indeterminate {
    .progress-bar {
      width: 0;
      background: transparent;
    }
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: var(--color-primary);
      border-radius: inherit;
      animation: progress-slide-right 2s infinite ease-in-out;
      will-change: transform;
    }

    @media (prefers-reduced-motion: reduce) {
      &::before {
        animation: progress-slide-right 1s ease-in-out;
      }
    }
  }
  
  // Direction variants for indeterminate progress
  &-indeterminate-left::before {
    animation: progress-slide-left 2s infinite ease-in-out;
  }
  
  &-indeterminate-right::before {
    animation: progress-slide-right 2s infinite ease-in-out;
  }
  
  // Vertical progress bars for up/down directions
  &-indeterminate-up,
  &-indeterminate-down {
    width: var(--space-3);
    height: var(--space-32);
    position: relative;
    overflow: hidden;
    
    @include responsive-min(md) {
      width: var(--space-2);
      height: var(--space-24);
    }
    
    .progress-bar {
      width: 0;
      background: transparent;
    }
    
    &::before {
      content: '';
      position: absolute;
      background: var(--color-primary);
      border-radius: inherit;
      will-change: transform;
    }
  }
  
  &-indeterminate-up::before {
    animation: progress-slide-up 2s infinite ease-in-out;
    left: 0;
    top: 100%;
    width: 100%;
    height: 100%;
  }
  
  &-indeterminate-down::before {
    animation: progress-slide-down 2s infinite ease-in-out;
    left: 0;
    top: -100%;
    width: 100%;
    height: 100%;
  }

}

.progress-circle {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;

  width: var(--space-16);
  height: var(--space-16);

  @include responsive-min(md) {
    width: var(--space-12);
    height: var(--space-12);
  }

  &-svg {
    transform: rotate(-90deg);
    width: 100%;
    height: 100%;
  }

  &-track {
    fill: none;
    stroke: var(--color-surface);
    stroke-width: var(--stroke-width, var(--border-4));
  }

  &-bar {
    fill: none;
    stroke: var(--color-primary);
    stroke-width: var(--stroke-width, var(--border-4));
    stroke-linecap: round;
    transition: stroke-dashoffset var(--duration-slow) var(--ease-out);
    will-change: stroke-dashoffset;

    @media (prefers-reduced-motion: reduce) {
      transition: none;
    }
  }

  &-text {
    position: absolute;
    font-size: var(--text-xs);
    font-weight: var(--font-semibold);
    color: var(--color-text);
  }

  // Unified density system for circular progress
  &-density-compact {
    width: density-calc(8, compact);
    height: density-calc(8, compact);
    @include apply-density(compact, sm);
    
    .progress-circle {
      &-track,
      &-bar {
        stroke-width: var(--border-2);
      }

      &-text {
        font-size: var(--text-2xs);
      }
    }
  }
  
  &-density-dense {
    width: density-calc(12, dense);
    height: density-calc(12, dense);
    @include apply-density(dense, sm);
    
    .progress-circle {
      &-track,
      &-bar {
        stroke-width: var(--border-3);
      }

      &-text {
        font-size: var(--text-xs);
      }
    }
  }
  
  &-density-spacious {
    width: density-calc(20, spacious);
    height: density-calc(20, spacious);
    @include apply-density(spacious, lg);
    
    .progress-circle {
      &-track,
      &-bar {
        stroke-width: var(--border-5);
      }

      &-text {
        font-size: var(--text-lg);
      }
    }
  }
  
  &-sm {
    width: var(--space-8);
    height: var(--space-8);

    .progress-circle-text {
      font-size: var(--text-2xs);
    }
  }

  &-lg {
    width: var(--space-20);
    height: var(--space-20);

    .progress-circle-text {
      font-size: var(--text-lg);
    }
  }

  &-xl {
    width: var(--space-24);
    height: var(--space-24);

    .progress-circle-text {
      font-size: var(--text-xl);
    }
  }

  // Semantic variants for circular progress
  &-primary &-bar {
    stroke: var(--color-primary);
  }
  
  &-success &-bar {
    stroke: var(--color-success);
  }

  &-warning &-bar {
    stroke: var(--color-warning);
  }

  &-error &-bar {
    stroke: var(--color-error);
  }
  
  &-info &-bar {
    stroke: var(--color-info);
  }

  // Indeterminate animation for circular progress
  &-indeterminate &-bar {
    animation: progress-circle-spin 2s linear infinite;
    transform-origin: center;
    
    @media (prefers-reduced-motion: reduce) {
      animation: progress-circle-spin 1s ease-in-out;
    }
  }
}

.progress-steps {
  display: flex;
  align-items: center;

  flex-direction: column;
  gap: var(--space-4);

  @include responsive-min(md) {
    flex-direction: row;
    gap: var(--space-2);
  }

  &-step {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    flex: 1;

    &:last-child .progress-steps-line {
      display: none;
    }
  }

  &-circle {
    border-radius: var(--radius-full);
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: var(--font-semibold);
    border: var(--border-2) solid var(--color-border);
    background: var(--color-surface-elevated);
    color: var(--color-text-muted);
    flex-shrink: 0;

    width: var(--space-12);
    height: var(--space-12);
    font-size: var(--text-sm);

    @include responsive-min(md) {
      width: var(--space-8);
      height: var(--space-8);
      font-size: var(--text-xs);
    }

&-completed {
      background: var(--color-primary);
      border-color: var(--color-primary);
      color: var(--color-text-inverse);
    }

    &-active {
      border-color: var(--color-primary);
      color: var(--color-primary);
    }
  }

  &-line {
    flex: 1;
    height: var(--border-2);
    background: var(--color-border);
    margin: 0 var(--space-2);

    @include responsive-max(sm) {
      width: var(--border-2);
      height: var(--space-8);
      margin: 0;
    }

    &-completed {
      background: var(--color-primary);
    }
  }

  &-label {
    color: var(--color-text-muted);
    text-align: center;
    margin-top: var(--space-1);

    font-size: var(--text-sm);

    @include responsive-min(md) {
      font-size: var(--text-xs);
    }

&-active {
      color: var(--color-primary);
      font-weight: var(--font-medium);
    }

    &-completed {
      color: var(--color-text);
    }
  }
}

.rating-container {
  &-enhanced {
    .rating-star {
      transition: color var(--duration-fast) var(--ease-out), transform var(--duration-fast) var(--ease-out);

      &:hover {
        transform: scale(1.1);
      }

      &-highlight {
        color: var(--color-warning) !important;
        transform: scale(1.05);
      }
    }
  }

  &-interactive {
    .rating-star {
      cursor: pointer;

      &:hover {
        color: var(--color-warning);
      }
    }
  }
}

.rating-value {
  font-variant-numeric: tabular-nums;
  margin-left: var(--space-1);
}
