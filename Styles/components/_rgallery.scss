@use '../abstracts' as *;

// RGallery Component Styles
.rgallery {
  width: 100%;
  
  // Grid layout (default)
  &-grid {
    display: grid;
    grid-template-columns: repeat(var(--gallery-columns, 3), 1fr);
    gap: var(--gallery-gap, var(--space-4));
    
    @include responsive-max(sm) {
      grid-template-columns: repeat(2, 1fr);
    }
    
    @include responsive-max(xs) {
      grid-template-columns: 1fr;
    }
  }
  
  // Gallery item
  &-item {
    position: relative;
    overflow: hidden;
    border-radius: var(--radius-md);
    background: var(--color-surface-elevated);
    cursor: pointer;
    transition: all var(--transition-normal);
    
    &:hover {
      transform: scale(1.02);
      box-shadow: var(--shadow-4);
      
      .rgallery-caption {
        opacity: 1;
        transform: translateY(0);
      }
    }
  }
  
  &-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    aspect-ratio: 1;
  }
  
  &-caption {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: var(--space-3);
    background: linear-gradient(to top, rgba(0,0,0,0.8), transparent);
    color: white;
    @include text-sm();
    opacity: 0;
    transform: translateY(100%);
    transition: all var(--transition-normal);
  }
  
  // Carousel layout
  &-carousel {
    display: flex;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    gap: var(--space-4);
    padding: var(--space-2) 0;
    
    .rgallery-item {
      flex: 0 0 auto;
      width: 300px;
      scroll-snap-align: start;
    }
  }
  
  // List layout
  &-list {
    display: flex;
    flex-direction: column;
    gap: var(--space-4);
    
    .rgallery-item {
      display: flex;
      align-items: center;
      padding: var(--space-3);
      background: var(--color-surface);
      
      .rgallery-image {
        width: 120px;
        height: 120px;
        margin-right: var(--space-4);
      }
    }
  }
  
  // Masonry layout (uses RMasonry internally)
  &-masonry {
    column-count: var(--gallery-columns, 3);
    column-gap: var(--gallery-gap, var(--space-4));
    
    .rgallery-item {
      break-inside: avoid;
      margin-bottom: var(--gallery-gap, var(--space-4));
      
      .rgallery-image {
        aspect-ratio: auto;
      }
    }
    
    @include responsive-max(md) {
      column-count: 2;
    }
    
    @include responsive-max(sm) {
      column-count: 1;
    }
  }
  
  // Empty state
  &-empty {
    padding: var(--space-8);
    text-align: center;
    color: var(--color-text-secondary);
    background: var(--color-surface-elevated);
    border-radius: var(--radius-md);
  }
}