@use '../abstracts' as *;
@use '../abstracts/mixins/design-modes' as design;
@use '../abstracts/mixins/density' as density;

@mixin skeleton-base() {
  display: block;
  position: relative;
  overflow: hidden;
  background: linear-gradient(
    105deg,
    color-mix(in srgb, var(--color-surface-elevated) 96%, var(--color-neutral-300)) 0%,
    color-mix(in srgb, var(--color-surface-elevated) 94%, var(--color-neutral-200)) 20%,
    color-mix(in srgb, var(--color-surface-elevated) 88%, var(--color-neutral-100)) 40%,
    color-mix(in srgb, var(--color-surface-elevated) 82%, transparent) 50%,
    color-mix(in srgb, var(--color-surface-elevated) 88%, var(--color-neutral-100)) 60%,
    color-mix(in srgb, var(--color-surface-elevated) 94%, var(--color-neutral-200)) 80%,
    color-mix(in srgb, var(--color-surface-elevated) 96%, var(--color-neutral-300)) 100%
  );
  background-size: 400% 100%;
  border-radius: var(--radius-sm);
  color: transparent;
  user-select: none;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.04);
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.08),
      rgba(255, 255, 255, 0.15),
      rgba(255, 255, 255, 0.08),
      transparent
    );
    animation: skeleton-wave 2.5s cubic-bezier(0.4, 0, 0.2, 1) infinite;
  }
}

@mixin skeleton-size($width: 100%, $height: auto, $min-height: 1rem) {
  width: $width;
  height: $height;
  min-height: $min-height;
}

.skeleton {
  @include skeleton-base();
  @include skeleton-size(var(--skeleton-width, 100%), var(--skeleton-height, auto));

  &-text {
    height: 0.875rem;
    margin-bottom: var(--space-2);
    background: linear-gradient(
      90deg,
      color-mix(in srgb, var(--color-surface-elevated) 92%, var(--color-neutral-200)),
      color-mix(in srgb, var(--color-surface-elevated) 88%, var(--color-neutral-100)),
      color-mix(in srgb, var(--color-surface-elevated) 92%, var(--color-neutral-200))
    );
    background-size: 300% 100%;
    
    &:last-child {
      margin-bottom: 0;
      width: 60%;
      opacity: 0.7;
    }
    
    &:nth-child(odd) {
      animation-delay: 0.15s;
    }
  }

  &-title {
    height: 1.75rem;
    margin-bottom: var(--space-3);
    width: 45%;
    background: linear-gradient(
      90deg,
      color-mix(in srgb, var(--color-surface-elevated) 90%, var(--color-primary) 5%),
      color-mix(in srgb, var(--color-surface-elevated) 85%, var(--color-primary) 8%),
      color-mix(in srgb, var(--color-surface-elevated) 90%, var(--color-primary) 5%)
    );
    background-size: 300% 100%;
    font-weight: 600;
    opacity: 0.9;
  }

  &-paragraph {
    .skeleton-text {
      &:nth-child(1) { width: 100%; }
      &:nth-child(2) { width: 95%; }
      &:nth-child(3) { width: 85%; }
      &:nth-child(4) { width: 60%; }
    }
  }

  &-avatar {
    @include skeleton-size(3rem, 3rem);
    border-radius: var(--radius-full);
    flex-shrink: 0;
    background: radial-gradient(
      circle at 30% 30%,
      color-mix(in srgb, var(--color-surface-elevated) 85%, var(--color-neutral-100)),
      color-mix(in srgb, var(--color-surface-elevated) 95%, var(--color-neutral-200))
    );
    box-shadow: 
      inset 0 2px 4px rgba(0, 0, 0, 0.06),
      0 1px 2px rgba(0, 0, 0, 0.04);
  }

  &-button {
    @include skeleton-size(6rem, 2.25rem);
    border-radius: var(--radius-md);
    background: linear-gradient(
      135deg,
      color-mix(in srgb, var(--color-surface-elevated) 88%, var(--color-primary) 3%),
      color-mix(in srgb, var(--color-surface-elevated) 94%, var(--color-primary) 2%)
    );
    box-shadow: 
      inset 0 1px 2px rgba(0, 0, 0, 0.05),
      0 1px 3px rgba(0, 0, 0, 0.03);
  }

  &-badge {
    @include skeleton-size(3.5rem, 1.375rem);
    border-radius: var(--radius-full);
    background: linear-gradient(
      90deg,
      color-mix(in srgb, var(--color-surface-elevated) 90%, var(--color-info) 3%),
      color-mix(in srgb, var(--color-surface-elevated) 85%, var(--color-info) 5%),
      color-mix(in srgb, var(--color-surface-elevated) 90%, var(--color-info) 3%)
    );
    background-size: 250% 100%;
    opacity: 0.8;
  }

  &-input {
    @include skeleton-size(100%, 2.375rem);
    border-radius: var(--radius-md);
    background: linear-gradient(
      90deg,
      var(--color-surface-elevated),
      color-mix(in srgb, var(--color-surface-elevated) 96%, var(--color-neutral-100))
    );
    border: 1px solid color-mix(in srgb, var(--color-border) 30%, transparent);
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.02);
  }

  &-card {
    height: 10rem;
    border-radius: var(--radius-xl);
    background: linear-gradient(
      135deg,
      var(--color-surface-elevated),
      color-mix(in srgb, var(--color-surface-elevated) 98%, var(--color-neutral-50))
    );
    box-shadow: 
      0 2px 8px rgba(0, 0, 0, 0.04),
      0 1px 2px rgba(0, 0, 0, 0.06);
    border: 1px solid color-mix(in srgb, var(--color-border) 20%, transparent);
  }

  &-smart {
    &-wrapper {
      position: relative;
      display: block;
      width: 100%;
      min-height: inherit;
    }

    &-container {
      display: block;
      
      &.skeleton-hidden-container {
        visibility: hidden;
        opacity: 0;
        pointer-events: none;
        height: 0;
        overflow: hidden;
      }
    }

    &-overlay {
      position: relative;
      z-index: var(--z-loading, 10);
      background: linear-gradient(
        to bottom,
        color-mix(in srgb, var(--color-surface) 98%, var(--color-surface-elevated)),
        var(--color-surface)
      );
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: stretch;
      padding: var(--space-3);
      min-height: 3rem;
      border-radius: var(--radius-lg);
      backdrop-filter: blur(8px);

      &.skeleton-glass {
        @include design.design-glass(primary, light);
        background: linear-gradient(
          135deg,
          rgba(255, 255, 255, 0.05),
          rgba(255, 255, 255, 0.02)
        );
        backdrop-filter: blur(12px) saturate(1.2);
        border: 1px solid rgba(255, 255, 255, 0.08);
        box-shadow: 
          0 8px 32px rgba(0, 0, 0, 0.06),
          inset 0 1px 0 rgba(255, 255, 255, 0.1);
      }
    }

    &-auto {
      display: flex;
      flex-direction: column;
      gap: var(--space-2);
      width: 100%;

      .skeleton {
        @include skeleton-base();
        border-radius: var(--radius-md);
        flex-shrink: 0;
        
        // Modern subtle animation
        &::after {
          content: '';
          position: absolute;
          top: 0;
          left: -100%;
          width: 100%;
          height: 100%;
          background: linear-gradient(
            90deg,
            transparent,
            rgba(255, 255, 255, 0.06),
            transparent
          );
          animation: skeleton-wave 2.5s cubic-bezier(0.4, 0, 0.2, 1) infinite;
        }

        &:first-child {
          @include skeleton-size(40%, 1.5rem);
          margin-bottom: var(--space-2);
          background: linear-gradient(
            90deg,
            var(--color-surface-elevated) 25%,
            color-mix(in srgb, var(--color-surface-elevated) 40%, var(--color-primary)) 50%,
            var(--color-surface-elevated) 75%
          );
          background-size: 200% 100%;
        }

        &:not(:first-child):not(:last-child) {
          @include skeleton-size(85%, 1rem);
          margin-bottom: var(--space-2);

          &:nth-child(2) { width: 95%; }
          &:nth-child(3) { width: 90%; }
        }

        &:last-child:not(:first-child) {
          @include skeleton-size(60%, 1rem);
          margin-bottom: 0;
        }

        &:only-child {
          @include skeleton-size(100%, 1.5rem);
        }
      }
    }
  }

  &-shimmer {
    animation: shimmer 2s ease-in-out infinite;
  }

  &-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  &-density {
    &-compact {
      @include density.apply-density(compact, sm);
    }
    &-dense {
      @include density.apply-density(dense, md);
    }
    &-normal {
      @include density.apply-density(normal, md);
    }
    &-spacious {
      @include density.apply-density(spacious, lg);
    }
  }
}

@media (prefers-reduced-motion: reduce) {
  .skeleton {
    animation: none;
  }
}

@media (prefers-contrast: high) {
  .skeleton {
    background: repeating-linear-gradient(
      90deg,
      var(--color-surface),
      var(--color-surface) 10px,
      var(--color-surface-elevated) 10px,
      var(--color-surface-elevated) 20px
    );
    animation: none;
  }
}