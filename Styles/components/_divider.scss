@use '../abstracts' as *;
@use '../utilities/icons' as *;

@mixin divider-icon-sizes($size-multiplier: 1) {
  i.icon {
    &.icon-xs { 
      font-size: calc(0.625rem * #{$size-multiplier}); 
      width: calc(0.625rem * #{$size-multiplier}); 
      height: calc(0.625rem * #{$size-multiplier}); 
    }
    &.icon-sm { 
      font-size: calc(0.75rem * #{$size-multiplier}); 
      width: calc(0.75rem * #{$size-multiplier}); 
      height: calc(0.75rem * #{$size-multiplier}); 
    }
    &.icon-base { 
      font-size: calc(0.875rem * #{$size-multiplier}); 
      width: calc(0.875rem * #{$size-multiplier}); 
      height: calc(0.875rem * #{$size-multiplier}); 
    }
    &.icon-lg { 
      font-size: calc(1rem * #{$size-multiplier}); 
      width: calc(1rem * #{$size-multiplier}); 
      height: calc(1rem * #{$size-multiplier}); 
    }
    &.icon-xl { 
      font-size: calc(1.25rem * #{$size-multiplier}); 
      width: calc(1.25rem * #{$size-multiplier}); 
      height: calc(1.25rem * #{$size-multiplier}); 
    }
    &.icon-2xl { 
      font-size: calc(1.5rem * #{$size-multiplier}); 
      width: calc(1.5rem * #{$size-multiplier}); 
      height: calc(1.5rem * #{$size-multiplier}); 
    }
  }
}

@mixin divider-style($style: dashed, $direction: horizontal, $color: border-dark) {
  $border-property: if($direction == vertical, border-left, border-top);
  $color-value: if($color == border-dark, var(--color-border-dark), var(--color-#{$color}));
  
  &::before,
  &::after {
    background: transparent;
    
    @if $direction == vertical {
      width: 0;
      border-top: none;
    } @else {
      height: 0;
    }
    
    #{$border-property}: 2px #{$style} #{$color-value};
  }
}

// Convenience mixins for backward compatibility
@mixin divider-dashed($color: border-dark) {
  @include divider-style(dashed, horizontal, $color);
}

@mixin divider-dotted($color: border-dark) {
  @include divider-style(dotted, horizontal, $color);
}

@mixin divider-vertical-dashed($color: border-dark) {
  @include divider-style(dashed, vertical, $color);
}

@mixin divider-vertical-dotted($color: border-dark) {
  @include divider-style(dotted, vertical, $color);
}

.divider {
  display: flex;
  align-items: center;
  position: relative;
  color: var(--color-text-muted);
  font-size: var(--text-sm);
  font-weight: var(--font-medium);

  &::before,
  &::after {
    content: '';
    flex: 1;
    height: 1px;
    background: var(--color-border-dark);
    transition: background var(--duration-normal) var(--ease-out);
  }

  .divider-content {
    display: inline-flex;
    align-items: center;
    gap: var(--space-2);
    padding: 0 var(--space-4);
    background: transparent;
    white-space: nowrap;
    position: relative;
    z-index: var(--z-base);
    width: auto;
    flex: 0 0 auto;

    .icon,
    i {
      color: currentColor;
      flex-shrink: 0;
    }
    
    &-stacked {
      flex-direction: column;
      align-items: center;
      justify-content: center;
      gap: var(--space-1);
      text-align: center;
      
      .divider-text-group {
        align-items: center;
        text-align: center;
        width: 100%;
      }
      
      i.icon {
        margin-bottom: var(--space-1);
      }
    }
    
    .divider-text-group {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-0);
      line-height: 1.2;
    }
    
    .divider-subtitle {
      color: var(--color-text-muted);
      opacity: 0.8;
      font-size: var(--text-xs);
      font-weight: var(--font-normal);
      margin-top: var(--space-0-5);
    }

    i.icon {
      line-height: 1;
      vertical-align: middle;
      flex-shrink: 0;
      
      &.icon-xs {
        font-size: var(--text-xs);
        width: 0.75rem;
        height: 0.75rem;
      }
      
      &.icon-sm {
        font-size: var(--text-sm);
        width: 1rem;
        height: 1rem;
      }
      
      &.icon-base {
        font-size: var(--text-base);
        width: 1.25rem;
        height: 1.25rem;
      }
      
      &.icon-lg {
        font-size: var(--text-lg);
        width: 1.5rem;
        height: 1.5rem;
      }
      
      &.icon-xl {
        font-size: var(--text-xl);
        width: 2rem;
        height: 2rem;
      }
      
      &.icon-2xl {
        font-size: var(--text-2xl);
        width: 2.5rem;
        height: 2.5rem;
      }
    }
    
    .font-semibold {
      font-weight: var(--font-semibold);
    }
    
    .text-muted {
      color: var(--color-text-muted);
      opacity: 0.8;
    }
  }

  // Base dashed/dotted styles
  &-dashed {
    @include divider-dashed;
  }

  &-dotted {
    @include divider-dotted;
  }

  // Semantic variants using standard patterns
  @each $color in (primary, success, warning, error, info) {
    &-#{$color} {
      .divider-content { 
        color: var(--color-#{$color}); 
      }
      
      &:not(.divider-dashed):not(.divider-dotted) {
        &::before,
        &::after {
          background: var(--color-#{$color});
        }
      }
    }

    // Dashed variants with semantic colors
    &-dashed-#{$color} {
      @include divider-dashed($color);
    }

    // Dotted variants with semantic colors  
    &-dotted-#{$color} {
      @include divider-dotted($color);
    }
  }

  // Vertical Layout
  &-vertical {
    display: inline-flex;
    flex-direction: column;
    height: 100%;
    min-height: var(--space-6);
    width: auto;
    margin: 0 var(--space-2);
    align-items: center;
    align-self: stretch;

    &::before,
    &::after {
      width: var(--divider-width, 1px);
      height: var(--divider-height, auto);
      flex: 1;
      background: var(--divider-background, var(--color-border-dark));
      border-left: var(--divider-border-left, none);
      border-top: var(--divider-border-top, none);
      min-height: var(--space-2);
    }

    .divider-content {
      padding: var(--space-2) 0;
      writing-mode: vertical-lr;
      text-orientation: mixed;
      flex-shrink: 0;

      .icon,
      .icon-filled {
        writing-mode: initial;
        text-orientation: initial;
      }
    }

    &-compact {
      height: var(--space-4);
      margin: 0 var(--space-1);
      .divider-content { padding: var(--space-1) 0; }
    }

    &-spacious {
      height: var(--space-8);
      margin: 0 var(--space-3);
      .divider-content { padding: var(--space-3) 0; }
    }

    &-empty {
      &::before {
        flex: 1;
        margin: 0;
      }
      &::after {
        display: none;
      }
    }

    // Vertical dashed/dotted
    &.divider-dashed {
      @include divider-vertical-dashed;
    }

    &.divider-dotted {
      @include divider-vertical-dotted;
    }

    // Vertical semantic variants
    @each $color in (primary, success, warning, error, info) {
      &-dashed-#{$color} {
        @include divider-vertical-dashed($color);
      }

      &-dotted-#{$color} {
        @include divider-vertical-dotted($color);
      }
    }
  }

  // Text Alignment
  &-text-center {
    &::before,
    &::after {
      flex: 1;
    }
    .divider-content {
      padding: 0 var(--space-4);
      flex-shrink: 0;
      text-align: center;
      align-items: center;
      justify-content: center;
      
      .divider-text-group {
        align-items: center;
        text-align: center;
      }
    }
  }

  &-text-left {
    &::before { 
      display: none; 
    }
    &::after {
      flex: 1;
      margin-left: var(--space-4);
    }
    .divider-content {
      padding-left: 0;
      padding-right: var(--space-4);
      flex-shrink: 0;
      flex-grow: 0;
    }
  }

  &-text-right {
    &::before {
      flex: 1;
      margin-right: var(--space-4);
    }
    &::after { 
      display: none; 
    }
    .divider-content {
      padding-right: 0;
      padding-left: var(--space-4);
      flex-shrink: 0;
      flex-grow: 0;
    }
  }

  // Empty State
  &-empty {
    &::before { margin: 0; }
    &::after { display: none; }
  }

  &-normal {
    margin: var(--space-4) 0;
  }
  
  &-compact {
    margin: var(--space-2) 0;
    font-size: var(--text-xs);

    .divider-content {
      padding: 0 var(--space-3);
      font-size: var(--text-xs);
      gap: var(--space-1);
      
      @include divider-icon-sizes(0.8);
    }
  }

  &-spacious {
    margin: var(--space-8) 0;
    font-size: var(--text-base);

    .divider-content {
      padding: 0 var(--space-5);
      font-size: var(--text-base);
      gap: var(--space-3);
      
      @include divider-icon-sizes(1.6);
    }
  }

  // No Line
  &-no-line {
    &::before,
    &::after { display: none; }
    .divider-content { padding: 0; }
  }
}

.menu-list-divider {
  height: 1px;
  background: var(--color-border);
  margin: var(--space-1) var(--space-3);
  border: none;
}

.hr {
  @extend .divider;
  @extend .divider-empty;
  @extend .divider-normal;
}