// RR.Blazor Tooltip Component
@use '../abstracts' as *;

// Tooltip base
.tooltip {
  position: relative;
  display: inline-block;
  
  // Tooltip content
  &-content {
    position: absolute;
    background: var(--color-surface-elevated);
    color: var(--color-text);
    padding: var(--space-2) var(--space-3);
    border-radius: var(--radius-md);
    font-size: var(--text-xs);
    font-weight: var(--font-medium);
    white-space: nowrap;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
    border: var(--border-1) solid var(--color-border);
    z-index: var(--z-tooltip);
    opacity: 0;
    visibility: hidden;
    transition: all var(--duration-fast) var(--ease-out);
    pointer-events: none;
    
    // Arrow
    &::before {
      content: '';
      position: absolute;
      width: 8px;
      height: 8px;
      background: var(--color-surface-elevated);
      border: var(--border-1) solid var(--color-border);
      transform: rotate(45deg);
    }
  }
  
  // Show tooltip on hover
  &:hover &-content {
    opacity: 1;
    visibility: visible;
  }
  
  // Semantic color variants
  &-primary &-content {
    background: var(--color-primary);
    color: var(--color-text-inverse);
    border-color: var(--color-primary);
    
    &::before {
      background: var(--color-primary);
      border-color: var(--color-primary);
    }
  }
  
  &-success &-content {
    background: var(--color-success);
    color: var(--color-text-inverse);
    border-color: var(--color-success);
    
    &::before {
      background: var(--color-success);
      border-color: var(--color-success);
    }
  }
  
  &-warning &-content {
    background: var(--color-warning);
    color: var(--color-text-inverse);
    border-color: var(--color-warning);
    
    &::before {
      background: var(--color-warning);
      border-color: var(--color-warning);
    }
  }
  
  &-error &-content {
    background: var(--color-error);
    color: var(--color-text-inverse);
    border-color: var(--color-error);
    
    &::before {
      background: var(--color-error);
      border-color: var(--color-error);
    }
  }
  
  &-info &-content {
    background: var(--color-info);
    color: var(--color-text-inverse);
    border-color: var(--color-info);
    
    &::before {
      background: var(--color-info);
      border-color: var(--color-info);
    }
  }
  
  &-ghost &-content {
    background: transparent;
    color: var(--color-text);
    border: var(--border-2) dashed var(--color-border);
    backdrop-filter: blur(8px);
    
    &::before {
      background: transparent;
      border-color: var(--color-border);
    }
  }
  
  &-neutral &-content {
    background: var(--color-text-muted);
    color: var(--color-text-inverse);
    border-color: var(--color-text-muted);
    
    &::before {
      background: var(--color-text-muted);
      border-color: var(--color-text-muted);
    }
  }
  
  // Position variants
  &-top &-content {
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%) translateY(-8px);
    margin-bottom: 8px;
    
    &::before {
      top: 100%;
      left: 50%;
      transform: translateX(-50%) rotate(45deg);
      border-top: none;
      border-left: none;
    }
  }
  
  &-bottom &-content {
    top: 100%;
    left: 50%;
    transform: translateX(-50%) translateY(8px);
    margin-top: 8px;
    
    &::before {
      bottom: 100%;
      left: 50%;
      transform: translateX(-50%) rotate(45deg);
      border-bottom: none;
      border-right: none;
    }
  }
  
  &-left &-content {
    right: 100%;
    top: 50%;
    transform: translateY(-50%) translateX(-8px);
    margin-right: 8px;
    
    &::before {
      left: 100%;
      top: 50%;
      transform: translateY(-50%) rotate(45deg);
      border-left: none;
      border-bottom: none;
    }
  }
  
  &-right &-content {
    left: 100%;
    top: 50%;
    transform: translateY(-50%) translateX(8px);
    margin-left: 8px;
    
    &::before {
      right: 100%;
      top: 50%;
      transform: translateY(-50%) rotate(45deg);
      border-right: none;
      border-top: none;
    }
  }
  
  // Dark variant
  &-dark &-content {
    background: var(--color-text);
    color: var(--color-canvas);
    border-color: var(--color-text);
    
    &::before {
      background: var(--color-text);
      border-color: var(--color-text);
    }
  }
  
  // Large variant
  &-large &-content {
    padding: var(--space-3) var(--space-4);
    font-size: var(--text-sm);
    white-space: normal;
    max-width: 20rem;
  }
}
