@use '../abstracts' as *;
:root {
  --header-height: var(--space-16); // φ^3.6 ≈ 4rem
  --sidebar-width: var(--space-64); // φ^5.3 ≈ 16rem
  --sidebar-width-expanded: var(--space-64); // φ^5.3 ≈ 16rem
  --sidebar-width-collapsed: var(--space-16); // φ^3.6 ≈ 4rem
  --footer-height: 0;
  --app-shell-transition: all var(--duration-normal) var(--ease-out);
  --touch-target-min: 44px;
  --touch-target-lg: 48px;
  --shell-transition-fast: 150ms;
  --shell-transition-normal: 300ms;
  --shell-transition-slow: 500ms;
}

.app-shell {
  display: flex;
  height: 100vh;
  position: relative;
  background: var(--color-canvas);
  width: 100%;
  max-width: 100vw;
  overflow: hidden;
  box-sizing: border-box;
  
  @include responsive-max(lg) {
    flex-direction: column;
  }
  
  &-container {
    container-type: inline-size;
    container-name: app-shell;
    width: 100%;
    max-width: 100vw;
    overflow-x: hidden;
  }
  
  button.touch-target,
  button.touch-friendly,
  [role="button"].touch-target,
  [role="button"].touch-friendly,
  .btn.touch-target,
  .btn.touch-friendly,
  .button.touch-target,
  .button.touch-friendly,
  input[type="button"].touch-target,
  input[type="button"].touch-friendly,
  input[type="submit"].touch-target,
  input[type="submit"].touch-friendly,
  input[type="reset"].touch-target,
  input[type="reset"].touch-friendly,
  a.button.touch-target,
  a.button.touch-friendly {
    min-height: var(--touch-target-min, 44px);
    min-width: var(--touch-target-min, 44px);
    
    & > * {
      min-height: initial;
    }
  }
  
  @include responsive-max(md) {
    flex-direction: column;
    
    // Improved layout for tablet viewports
    .app-header {
      padding-left: var(--space-3);
      padding-right: var(--space-3);
      
      .header-left {
        gap: var(--space-2);
        flex-wrap: nowrap;
        min-width: 0;
      }
      
      .header-right {
        gap: var(--space-1-5);
        flex-wrap: nowrap;
        flex-shrink: 0;
      }
    }
  }
  
  @container app-shell (max-width: 768px) {
    --sidebar-width-expanded: 100vw;
    --sidebar-width-collapsed: 0;
    
    .main-content {
      &-expanded,
      &-collapsed {
        margin-left: 0;
      }
    }
  }
}

.layout {
  display: flex;
  min-height: 100vh;
  position: relative;
  background: var(--color-canvas);
}

.layout-main {
  flex: 1;
  overflow: auto;
  position: relative;
  padding-top: var(--header-height);
  min-height: calc(100vh - var(--header-height));
}

.app-header {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: var(--z-header);
  height: var(--header-height);
  width: 100vw;
  max-width: 100vw;
  background: var(--color-canvas);
  border-bottom: var(--border-1) solid var(--color-border);
  box-shadow: var(--shadow-sm);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 var(--space-4);
  box-sizing: border-box;
  overflow: visible;
  
  .d-flex {
    min-width: 0;
    flex-wrap: nowrap;
    
    &.gap-3,
    &.gap-2,
    &.gap-1 {
      @include responsive-max(sm) {
        gap: var(--space-1);
      }
    }
  }
  
  &-height {
    height: var(--header-height);
  }
  
  hr {
    pointer-events: none;
  }
  
  @include responsive-max(xl) {
    width: 100vw;
    max-width: 100vw;
    left: 0;
    right: 0;
  }
  
  @include responsive-max(md) {
    padding-left: var(--space-2);
    padding-right: var(--space-2);
  }
}

.header-left {
  display: flex;
  align-items: center;
  gap: var(--space-4);
  flex: 1;
  min-width: 0;
  overflow: hidden;
  
  @include responsive-max(lg) {
    gap: var(--space-3);
    flex-wrap: nowrap;
  }
  
  @include responsive-max(md) {
    gap: var(--space-2-5);
    flex-wrap: nowrap;
  }
  
  @include responsive-max(sm) {
    gap: var(--space-2);
    flex-wrap: wrap;
  }
}

.header-right {
  @extend %flex-center;
  gap: var(--space-2);
  flex-shrink: 0;
  
  overflow: visible;
  
  @include responsive-max(lg) {
    gap: var(--space-1-5);
  }
  
  @include responsive-max(md) {
    gap: var(--space-1);
  }
  
  @include responsive-max(sm) {
    gap: var(--space-0-5);
    flex-wrap: wrap;
  }
  
  // Extra small screens (320px) - hide non-essential elements
  @include responsive-max(xs) {
    gap: var(--space-0-25);
    
    // Hide theme toggle on very small screens
    .theme-switcher,
    .theme-toggle {
      display: none;
    }
    
    // Hide non-essential quick actions
    .quick-actions > *:not(:first-child) {
      display: none;
    }
    
    // Compact user menu - avatar only
    .user-display-name {
      display: none;
    }
  }
  
  // Ensure search button always remains visible at small screens
  @media (max-width: 413px) {
    .app-search {
      flex-shrink: 0;
      min-width: auto;
      
      .search-container.collapsed {
        width: auto;
        min-width: var(--touch-target-min, 44px);
      }
    }
  }
  
  // Modal-aware containment reset
  .modal-open & {
    isolation: auto;
  }
}

.app-logo {
  @extend %flex-center;
  gap: var(--space-2);
  flex-shrink: 0;
  min-width: 0;
  height: calc(var(--header-height) - var(--space-3));
  padding: var(--space-1-5) 0;
  
  img {
    height: auto;
    width: auto;
    flex-shrink: 0;
    object-fit: contain;
    
    &:not(.h-8):not(.h-12):not(.h-16):not(.h-20):not(.h-24) {
      max-height: var(--space-8);
      max-width: var(--space-32);
    }
    
    &.h-8 { max-height: var(--space-8); }
    &.h-12 { max-height: var(--space-10); }
    &.h-16 { max-height: calc(var(--base-unit) * var(--φ) * 1.73); }
    &.h-20 { max-height: var(--space-12); }
    &.h-24 { max-height: calc(var(--base-unit) * var(--φ) * 1.98); }
  }
  
  span {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    flex-shrink: 1;
    min-width: 0;
  }
}

// Page Header Content Styles
.page-header-content {
  min-width: 0;
  flex: 1;
  align-items: flex-start;
  justify-content: center;
  overflow: hidden;
}

.page-header-row {
  @extend %flex-row;
  align-items: center;
  justify-content: flex-start;
  gap: var(--space-2);
  flex-wrap: nowrap;
  min-width: 0;
  width: 100%;
  
  @media (min-width: 1025px) {
    gap: var(--space-2);
  }
  
  // Tablet: reduce spacing, no breadcrumbs
  @include responsive-max(lg) {
    gap: var(--space-1-5);
  }
  
  // Small tablet/large mobile: tighter spacing
  @include responsive-max(md) {
    gap: var(--space-1);
  }
  
  @include responsive-max(sm) {
    flex-wrap: wrap;
    gap: var(--space-0-5);
  }
  
  // Very small mobile: minimal spacing
  @include responsive-max(xs) {
    gap: var(--space-0-25);
    flex-wrap: wrap;
  }
}

.page-title-subtitle {
  @extend %flex-column;
  gap: var(--space-0-25);
  min-width: 0;
  flex: 1;
  align-items: flex-start;
  
  @include responsive-max(md) {
    gap: var(--space-0-125);
  }
  
  @include responsive-max(sm) {
    gap: var(--space-0-125);
    // Ensure title doesn't get too cramped
    min-width: 200px;
  }
  
  @include responsive-max(xs) {
    min-width: 150px;
  }
}

.page-title {
  margin: 0;
  font-size: var(--text-lg);
  font-weight: var(--font-semibold);
  color: var(--color-text);
  line-height: 1.25;
  flex-shrink: 0;
  
  @include responsive-max(md) {
    font-size: var(--text-base);
  }
}


.page-subtitle {
  margin: 0;
  font-size: var(--text-sm);
  color: var(--color-text-secondary);
  line-height: 1.4;
  
  @include responsive-max(md) {
    font-size: var(--text-xs);
  }
}

// App Shell Breadcrumbs Integration
.app-shell-breadcrumbs {
  flex-shrink: 0;
  margin: 0;
  
  // Adaptive hiding priority: breadcrumbs are low priority on smaller screens
  @include responsive-max(lg) {
    display: none; // Hide on tablets and smaller (<=1024px)
  }
  
  // Show on desktop only (>1024px)
  @media (min-width: 1025px) {
    display: flex;
  }
  
  // Compact spacing for app shell breadcrumbs
  &.compact-spacing {
    ol {
      gap: var(--space-0-5);
    }
    
    li {
      gap: var(--space-0-25);
    }
    
    .breadcrumb-sep,
    [aria-hidden="true"] {
      margin: 0 var(--space-0-125);
    }
  }
}



.app-sidebar {
  position: fixed;
  top: var(--header-height);
  left: 0;
  bottom: 0;
  width: var(--sidebar-width, var(--space-64)); // φ^5.3 ≈ 16rem
  max-width: calc(100vw - var(--space-4));
  height: calc(100vh - var(--header-height));
  background: var(--color-surface-elevated);
  border-right: var(--border-1) solid var(--color-border);
  z-index: var(--z-sidebar);
  display: flex;
  flex-direction: column;
  transition: all var(--duration-normal) var(--ease-out);
  box-sizing: border-box;
  overflow-x: hidden;
  overflow-y: hidden;
  
  // Auto-collapse on tablets (still visible but collapsed)
  @include responsive-max(lg) {
    width: var(--sidebar-width-collapsed, var(--space-16)); // φ^3.6 ≈ 4rem
    
    // Force collapsed state for better UX
    &:not(.open) {
      width: var(--sidebar-width-collapsed, var(--space-16)); // φ^3.6 ≈ 4rem
    }
  }
  
  // Ensure all children respect sidebar width constraints
  > * {
    max-width: 100%;
    box-sizing: border-box;
    overflow-x: hidden;
    min-width: 0;
  }
  
  // Specific fix for navigation content wrapper
  .flex-1 {
    overflow-x: hidden;
    min-width: 0;
    max-width: 100%;
    
    // Ensure any nested navigation components don't overflow
    * {
      max-width: 100%;
      box-sizing: border-box;
      min-width: 0;
    }
  }
  
  &.collapsed {
    width: var(--sidebar-width-collapsed, var(--space-16));
  }
  
  @include responsive-max(md) {
    transform: translateX(-100%);
    width: 85%;
    max-width: 320px;
    z-index: calc(var(--z-header) + 10);
    border-right: none;
    box-shadow: var(--shadow-xl);
    pointer-events: none;
    
    // Disable transform when modal is open to prevent stacking context issues
    body.modal-open & {
      transform: none;
      visibility: hidden;
      
      &.open {
        visibility: visible;
      }
    }
    
    &.open {
      transform: translateX(0);
      pointer-events: auto;
      
      body.modal-open & {
        transform: none;
      }
    }
  }
  
  @include responsive-max(sm) {
    width: 90%;
    max-width: 280px;
  }
  
  @include responsive-max(xs) {
    width: 95%;
    max-width: 260px;
  }
  
  > .flex-1 {
    min-height: 0;
    overflow-y: auto;
    flex: 1 1 0%;
  }
  
  > .shrink-0 {
    flex-shrink: 0;
    overflow: visible; // Allow dropdowns to overflow footer container
    max-width: 100%;
    box-sizing: border-box;
    
    // Ensure sidebar footer content respects width
    * {
      max-width: 100%;
      box-sizing: border-box;
    }
  }
}

.app-main {
  position: relative;
  height: 100vh;
  padding-top: var(--header-height);
  margin-left: 0;
  width: 100%;
  overflow-y: auto;
  box-sizing: border-box;
  flex: 1;
  
  @include responsive-max(md) {
    margin-left: 0;
    width: 100vw;
    max-width: 100vw;
  }
  
  &.auto-wrap-content {
    display: flex;
    flex-direction: column;
  }
  
  &.full-width-content {
    width: 100vw;
    max-width: 100vw;
    margin-left: 0;
    overflow-x: hidden;
    overflow-y: visible;
    box-sizing: border-box;
  }
}

.mobile-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--overlay-medium);
  z-index: calc(var(--z-sidebar) - 1);
  opacity: 0;
  visibility: hidden;
  transition: all var(--duration-normal) var(--ease-out);
  
  &.active {
    opacity: 1;
    visibility: visible;
  }
}

.shell-sticky-header {
  position: sticky;
  top: var(--header-height);
  z-index: var(--z-sticky);
  background: var(--color-canvas);
  border-bottom: var(--border-1) solid var(--color-border);
  backdrop-filter: blur(8px);
  
  @include responsive-max(md) {
    position: relative;
    backdrop-filter: none;
  }
}

.page-content {
  padding: var(--space-6);
  max-width: 100%;
  
  &-constrained {
    max-width: 1200px;
    margin: 0 auto;
  }
  
  &-wide {
    max-width: 1400px;
    margin: 0 auto;
  }
  
  &-full {
    max-width: none;
    padding: var(--space-4);
  }
  
  &-centered {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    max-width: 600px;
    margin: 0 auto;
  }
  
  @include responsive-max(lg) {
    padding: var(--space-4);
  }
  
  @include responsive-max(md) {
    padding: var(--space-3);
  }
}

.shell-split {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--space-6);
  
  @include responsive-max(lg) {
    grid-template-columns: 1fr;
    gap: var(--space-4);
  }
  
  &-with-sidebar {
    // Simplified: let app-main handle sidebar positioning
    
    @include responsive-max(lg) {
      margin-left: 0;
    }
  }
}

// RChoiceGeneric User Menu
.user-menu-choice {
  .choice-trigger {
    // Clean integration with header styling
    background: transparent !important;
    border: none !important;
    box-shadow: none !important;
    padding: var(--space-2) !important;
    border-radius: var(--radius-full);
    transition: all var(--duration-fast) var(--ease-out);
    overflow: visible !important; // Ensure avatar status indicators are visible
    
    &:hover,
    &:focus,
    &:focus-visible {
      background: var(--color-surface-hover) !important;
      transform: translateY(-1px);
      box-shadow: var(--shadow-sm) !important;
    }
    
    &:active {
      transform: translateY(0);
      background: var(--color-surface-pressed) !important;
    }
    
    // User info styling
    .d-flex {
      align-items: center;
      gap: var(--space-2);
      overflow: visible;
      
      .avatar {
        position: relative;
      }
    }
    
    .text-sm {
      font-weight: var(--font-medium);
      color: var(--color-text);
      transition: color var(--duration-fast) var(--ease-out);
    }
    
    .material-symbols-rounded {
      transition: transform var(--duration-fast) var(--ease-out);
      color: var(--color-text-secondary);
    }
  }
  
  .choice-viewport {
    @extend %glass-medium;
    background: var(--glass-bg-medium) !important;
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-xl);
    padding: var(--space-2);
    min-width: var(--space-56); // 14rem
    
    // Smooth entrance animation using existing keyframe
    animation: dropdownSlideIn var(--duration-normal) var(--ease-out);
    
    // Premium scrolling for long menus
    max-height: 80vh;
    overflow-y: auto;
    scrollbar-width: thin;
    scrollbar-color: var(--color-border) transparent;
    
    &::-webkit-scrollbar {
      width: 4px;
    }
    
    &::-webkit-scrollbar-track {
      background: transparent;
    }
    
    &::-webkit-scrollbar-thumb {
      background: var(--color-border);
      border-radius: var(--radius-full);
    }
    
    @include responsive-max(sm) {
      min-width: var(--space-48);
      right: -var(--space-2);
    }
    
    @include responsive-max(xs) {
      min-width: var(--space-40); // 10rem
      right: -var(--space-1);
    }
  }
  
  // Choice items styling
  .choice-item {
    padding: var(--space-2-5) var(--space-3);
    border-radius: var(--radius-md);
    transition: all var(--duration-fast) var(--ease-out);
    color: var(--color-text);
    font-size: var(--text-sm);
    font-weight: var(--font-medium);
    
    &:hover {
      background: var(--color-surface-hover);
      transform: translateX(2px);
      color: var(--color-text) !important;
    }
    
    &:active {
      transform: translateX(0);
      background: var(--color-surface-pressed);
    }
    
    .material-symbols-rounded {
      color: var(--color-text-secondary);
      transition: color var(--duration-fast) var(--ease-out);
    }
    
    &:hover .material-symbols-rounded {
      color: var(--color-primary);
    }
    
    // Special styling for dividers
    &[data-item="divider"] {
      margin: var(--space-1) 0;
      padding: 0;
      border-bottom: var(--border-1) solid var(--color-border);
      background: none !important;
      cursor: default;
      
      &:hover {
        transform: none;
      }
    }
    
    // Danger zone for logout
    &[data-item="logout"] {
      &:hover {
        background: var(--color-error-bg);
        color: var(--color-error);
        
        .material-symbols-rounded {
          color: var(--color-error);
        }
      }
    }
  }
}

