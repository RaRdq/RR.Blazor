@use '../abstracts' as *;

// Core app shell layout

// Layout-specific CSS custom properties
:root {
  --header-height: 4rem;
  --sidebar-width: 16rem;
  --sidebar-width-expanded: 16rem;
  --sidebar-width-collapsed: 4rem;
  --footer-height: 0;
  
  // App shell variables
  --app-shell-transition: all var(--duration-normal) var(--ease-out);
  --touch-target-min: 44px;
  --touch-target-lg: 48px;
  // Content variables moved to abstracts/_content-architecture.scss to avoid duplication
  
  // Performance timing
  --shell-transition-fast: 150ms;
  --shell-transition-normal: 300ms;
  --shell-transition-slow: 500ms;
}

// Primary app shell layout structure
.app-shell {
  display: flex;
  min-height: 100vh;
  position: relative;
  background: var(--color-background-primary);
  
  &-container {
    container-type: inline-size;
    container-name: app-shell;
  }
  
  // Touch-friendly minimum targets (44px) - only for interactive elements
  button,
  [role="button"],
  .btn,
  .button,
  input[type="button"],
  input[type="submit"],
  input[type="reset"],
  a.button {
    min-height: var(--touch-target-min, 44px);
    min-width: var(--touch-target-min, 44px);
  }
  
  // Mobile-first responsive foundation
  @include responsive-max(md) {
    flex-direction: column;
  }
  
  // Container query support for adaptive layouts
  @container app-shell (max-width: 768px) {
    --sidebar-width-expanded: 100vw;
    --sidebar-width-collapsed: 0;
    
    .main-content {
      &-expanded,
      &-collapsed {
        margin-left: 0;
      }
    }
  }
}

// Layout extensions
.layout {
  display: flex;
  min-height: 100vh;
  position: relative;
  background: var(--color-background-primary);
}

.layout-main {
  flex: 1;
  overflow: auto;
  position: relative;
  padding-top: var(--header-height);
  min-height: calc(100vh - var(--header-height));
}

// App header specific styles
.app-header {
  z-index: var(--z-header);
  height: var(--header-height);
  
  // Ensure header doesn't interfere with clickable elements below
  &-height {
    height: var(--header-height);
  }
  
  // Fix for header blocking clicks on dashboard buttons
  hr {
    pointer-events: none;
  }
  
  @include responsive-max(md) {
    padding-left: var(--space-2);
    padding-right: var(--space-2);
  }
}

// Main content area
.main-content {
  flex: 1;
  min-height: 100vh;
  padding-top: var(--header-height);
  transition: all var(--duration-normal) var(--ease-out);
  
  &-expanded {
    margin-left: var(--sidebar-width-expanded, 16rem);
  }
  
  &-collapsed {
    margin-left: var(--sidebar-width-collapsed, 4rem);
  }
  
  &-centered {
    display: flex;
    flex-direction: column;
    align-items: center;
    max-width: 100%;
  }
  
  @include responsive-max(md) {
    &-expanded,
    &-collapsed {
      margin-left: 0;
      width: 100%;
    }
    
    // Ensure main content takes full width on mobile
    &.mobile-sidebar {
      margin-left: 0 !important;
      width: 100% !important;
      overflow-x: hidden;
    }
  }
}

.main {
  flex: 1;
  display: flex;
  flex-direction: column;
  min-height: 0;
}

// ============================================================================
// ADVANCED CONTENT LAYOUT PATTERNS
// ============================================================================

// App-shell specific sticky header pattern
.shell-sticky-header {
  position: sticky;
  top: var(--header-height);
  z-index: var(--z-sticky);
  background: var(--color-background-primary);
  border-bottom: var(--border-1) solid var(--color-border-light);
  backdrop-filter: blur(8px);
  
  @include responsive-max(md) {
    position: relative;
    backdrop-filter: none;
  }
}

// Page content with optimal reading experience
.page-content {
  flex: 1;
  padding: var(--space-6);
  max-width: 100%;
  
  &-constrained {
    max-width: 1200px;
    margin: 0 auto;
  }
  
  &-wide {
    max-width: 1400px;
    margin: 0 auto;
  }
  
  &-full {
    max-width: none;
    padding: var(--space-4);
  }
  
  &-centered {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    max-width: 600px;
    margin: 0 auto;
  }
  
  @include responsive-max(lg) {
    padding: var(--space-4);
  }
  
  @include responsive-max(md) {
    padding: var(--space-3);
  }
}

// App-shell enhanced split layout with sidebar integration
.shell-split {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--space-6);
  
  @include responsive-max(lg) {
    grid-template-columns: 1fr;
    gap: var(--space-4);
  }
  
  // App-shell specific enhancements
  &-with-sidebar {
    margin-left: calc(var(--sidebar-width) * -1);
    padding-left: var(--sidebar-width);
    
    @include responsive-max(lg) {
      margin-left: 0;
      padding-left: 0;
    }
  }
}

// App-shell enhanced masonry with header compensation
.shell-masonry {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: var(--space-4);
  grid-auto-rows: masonry;
  
  // Account for app shell header
  padding-top: var(--space-4);
  
  &-dense {
    grid-auto-flow: dense;
  }
  
  @include responsive-max(md) {
    grid-template-columns: 1fr;
  }
}