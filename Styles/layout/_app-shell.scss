@use '../abstracts' as *;
:root {
  --header-height: 4rem;
  --sidebar-width: 16rem;
  --sidebar-width-expanded: 16rem;
  --sidebar-width-collapsed: 4rem;
  --footer-height: 0;
  --app-shell-transition: all var(--duration-normal) var(--ease-out);
  --touch-target-min: 44px;
  --touch-target-lg: 48px;
  --shell-transition-fast: 150ms;
  --shell-transition-normal: 300ms;
  --shell-transition-slow: 500ms;
}

.app-shell {
  display: flex;
  height: 100vh;
  position: relative;
  background: var(--color-canvas);
  width: 100%;
  max-width: 100vw;
  overflow: hidden;
  box-sizing: border-box;
  
  @include responsive-max(lg) {
    flex-direction: column;
  }
  
  &-container {
    container-type: inline-size;
    container-name: app-shell;
    width: 100%;
    max-width: 100vw;
    overflow-x: hidden;
  }
  
  button.touch-target,
  button.touch-friendly,
  [role="button"].touch-target,
  [role="button"].touch-friendly,
  .btn.touch-target,
  .btn.touch-friendly,
  .button.touch-target,
  .button.touch-friendly,
  input[type="button"].touch-target,
  input[type="button"].touch-friendly,
  input[type="submit"].touch-target,
  input[type="submit"].touch-friendly,
  input[type="reset"].touch-target,
  input[type="reset"].touch-friendly,
  a.button.touch-target,
  a.button.touch-friendly {
    min-height: var(--touch-target-min, 44px);
    min-width: var(--touch-target-min, 44px);
    
    & > * {
      min-height: initial;
    }
  }
  
  // Enhanced tablet responsiveness
  @include responsive-max(md) {
    flex-direction: column;
    
    // Improved layout for tablet viewports
    .app-header {
      padding-left: var(--space-3);
      padding-right: var(--space-3);
      
      .header-left {
        gap: var(--space-2);
        flex-wrap: nowrap;
        min-width: 0;
      }
      
      .header-right {
        gap: var(--space-1-5);
        flex-wrap: nowrap;
        flex-shrink: 0;
      }
    }
  }
  
  @container app-shell (max-width: 768px) {
    --sidebar-width-expanded: 100vw;
    --sidebar-width-collapsed: 0;
    
    .main-content {
      &-expanded,
      &-collapsed {
        margin-left: 0;
      }
    }
  }
}

.layout {
  display: flex;
  min-height: 100vh;
  position: relative;
  background: var(--color-canvas);
}

.layout-main {
  flex: 1;
  overflow: auto;
  position: relative;
  padding-top: var(--header-height);
  min-height: calc(100vh - var(--header-height));
}

.app-header {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: var(--z-header);
  height: var(--header-height);
  width: 100vw;
  max-width: 100vw;
  background: var(--color-canvas);
  border-bottom: var(--border-1) solid var(--color-border);
  box-shadow: var(--shadow-sm);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 var(--space-4);
  box-sizing: border-box;
  overflow: visible;
  
  .d-flex {
    min-width: 0;
    flex-wrap: nowrap;
    
    &.gap-3,
    &.gap-2,
    &.gap-1 {
      @include responsive-max(sm) {
        gap: var(--space-1);
      }
    }
  }
  
  &-height {
    height: var(--header-height);
  }
  
  hr {
    pointer-events: none;
  }
  
  @include responsive-max(xl) {
    width: 100vw;
    max-width: 100vw;
    left: 0;
    right: 0;
  }
  
  @include responsive-max(md) {
    padding-left: var(--space-2);
    padding-right: var(--space-2);
  }
}

.header-left {
  display: flex;
  align-items: center;
  gap: var(--space-4);
  flex: 1;
  min-width: 0;
  overflow: hidden;
  
  // Enhanced tablet support
  @include responsive-max(lg) {
    gap: var(--space-3);
    flex-wrap: nowrap;
  }
  
  @include responsive-max(md) {
    gap: var(--space-2-5);
    flex-wrap: nowrap;
  }
  
  @include responsive-max(sm) {
    gap: var(--space-2);
    flex-wrap: wrap;
  }
}

.header-right {
  @extend %flex-center;
  gap: var(--space-2);
  flex-shrink: 0;
  
  // Enhanced responsive gaps
  @include responsive-max(lg) {
    gap: var(--space-1-5);
  }
  
  @include responsive-max(md) {
    gap: var(--space-1);
  }
  
  @include responsive-max(sm) {
    gap: var(--space-0-5);
    flex-wrap: wrap;
  }
  
  // Extra small screens (320px) - hide non-essential elements
  @include responsive-max(xs) {
    gap: var(--space-0-25);
    
    // Hide theme toggle on very small screens
    .theme-switcher,
    .theme-toggle {
      display: none;
    }
    
    // Hide non-essential quick actions
    .quick-actions > *:not(:first-child) {
      display: none;
    }
    
    // Compact user menu - avatar only
    .user-display-name {
      display: none !important;
    }
  }
  
  // Ensure search button always remains visible at small screens
  @media (max-width: 413px) {
    .app-search {
      flex-shrink: 0;
      min-width: auto;
      
      .search-container.collapsed {
        width: auto;
        min-width: var(--touch-target-min, 44px);
      }
    }
  }
  
  // Modal-aware containment reset
  .modal-open & {
    isolation: auto;
  }
}

.app-logo {
  @extend %flex-center;
  gap: var(--space-2);
  flex-shrink: 0;
  min-width: 0;
  height: calc(var(--header-height) - var(--space-3));
  padding: var(--space-1-5) 0;
  
  img {
    height: auto;
    width: auto;
    flex-shrink: 0;
    object-fit: contain;
    
    // Default constraints when no utility class is present
    &:not(.h-8):not(.h-12):not(.h-16):not(.h-20):not(.h-24) {
      max-height: 2rem;
      max-width: 8rem;
    }
    
    // Respect LogoComponent utility classes but constrain within header
    &.h-8 { max-height: 2rem; }
    &.h-12 { max-height: 2.5rem; }
    &.h-16 { max-height: 2.8rem; }
    &.h-20 { max-height: 3rem; }
    &.h-24 { max-height: 3.2rem; }
  }
  
  span {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    flex-shrink: 1;
    min-width: 0;
  }
}

// Page Header Content Styles
.page-header-content {
  @extend %flex-column;
  gap: var(--space-0-5);
  min-width: 0;
  flex: 1;
  align-items: flex-start;
  justify-content: center;
  overflow: hidden;
  
  @include responsive-max(sm) {
    gap: var(--space-0-25);
  }
}

.page-title-row {
  @extend %flex-row;
  align-items: baseline;
  gap: var(--space-2);
  flex-wrap: nowrap;
  min-width: 0;
  width: 100%;
  margin-top: 0;
  
  @include responsive-max(md) {
    gap: var(--space-1-5);
  }
  
  @include responsive-max(sm) {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--space-0-5);
  }
}

.page-title {
  margin: 0;
  font-size: var(--text-lg);
  font-weight: var(--font-semibold);
  color: var(--color-text);
  line-height: 1.25;
  flex-shrink: 0;
  
  @include responsive-max(md) {
    font-size: var(--text-base);
  }
}

.page-subtitle-row {
  margin-top: 0;
  width: 100%;
  
  @include responsive-max(sm) {
    margin-top: 0;
  }
}

.page-subtitle {
  margin: 0;
  font-size: var(--text-sm);
  color: var(--color-text-secondary);
  line-height: 1.4;
  
  @include responsive-max(md) {
    font-size: var(--text-xs);
  }
}

// Clean Breadcrumb Styles for Top Bar
.breadcrumbs-nav {
  margin-bottom: var(--space-0-5);
}

.breadcrumbs-list {
  display: flex;
  align-items: center;
  gap: var(--space-0-5);
  margin: 0;
  padding: 0;
  list-style: none;
  flex-wrap: nowrap;
  overflow: hidden;
  min-width: 0;
  
  @include responsive-max(sm) {
    gap: var(--space-0-25);
  }
}

.breadcrumb {
  display: flex;
  align-items: center;
  gap: var(--space-0-25);
  font-size: var(--text-xs);
  line-height: 1;
  flex-shrink: 1;
  min-width: 0;
  max-width: 12rem;
  
  @include responsive-max(sm) {
    gap: var(--space-0-125);
    max-width: 8rem;
    
    // Hide middle items on mobile - smart truncation
    &:not(:first-child):not(:last-child):not(:nth-last-child(2)) {
      display: none;
    }
  }
}

.breadcrumb-icon {
  font-size: var(--text-xs);
  color: var(--color-text-secondary);
  flex-shrink: 0;
}

.breadcrumb-link {
  color: var(--color-text-secondary);
  text-decoration: none;
  transition: color var(--duration-fast) var(--ease-out);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  min-width: 0;
  
  &:hover {
    color: var(--color-text-primary);
    text-decoration: underline;
  }
  
  &:focus {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
    border-radius: var(--radius-xs);
  }
}

.breadcrumb-current {
  color: var(--color-text-primary);
  font-weight: var(--font-medium);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  min-width: 0;
}

.breadcrumb-disabled {
  color: var(--color-text-tertiary);
  cursor: default;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  min-width: 0;
}

.breadcrumb-sep {
  color: var(--color-text-tertiary);
  font-size: var(--text-xs);
  margin: 0 var(--space-0-25);
  user-select: none;
  
  @include responsive-max(sm) {
    margin: 0 var(--space-0-125);
  }
}

// ===== NEW SEARCH IMPLEMENTATION =====
// Unified search styles using RAutosuggest component

.app-search-expanded {
  min-width: 0;
  
  .autosuggest {
    min-width: 200px;
    max-width: 400px;
    
    @include responsive-max(lg) {
      max-width: 300px;
    }
    
    @include responsive-max(md) {
      max-width: 250px;
    }
    
    @include responsive-max(sm) {
      max-width: 200px;
    }
  }
}

.app-search-fixed {
  min-width: 0;
  
  .autosuggest {
    width: 300px;
    
    @include responsive-max(lg) {
      width: 250px;
    }
    
    @include responsive-max(md) {
      width: 200px;
    }
  }
}

// Search result content styling for template
.search-result-content {
  display: flex;
  align-items: center;
  gap: var(--space-2);
  width: 100%;
  min-width: 0;
}

.search-result-icon {
  font-size: var(--text-sm);
  color: var(--color-text-secondary);
  flex-shrink: 0;
}

.search-result-text {
  flex: 1;
  min-width: 0;
}

.search-result-title {
  font-size: var(--text-sm);
  font-weight: 500;
  color: var(--color-text);
  line-height: 1.4;
  @extend %text-truncate;
}

.search-result-description {
  font-size: var(--text-xs);
  color: var(--color-text-secondary);
  line-height: 1.3;
  @extend %text-truncate;
}

.search-result-category {
  font-size: var(--text-xs);
  color: var(--color-text-tertiary);
  flex-shrink: 0;
}

// Legacy search support (deprecated)
.app-search {
  @extend %interactive-base;
  position: relative;
  min-width: 0;
  
  .search-container {
    position: relative;
    display: flex;
    align-items: center;
    transition: var(--transition-normal);
    
    &.collapsed {
      width: auto;
    }
    
    &.expanded {
      width: 16rem;
      
      @include responsive-max(lg) {
        width: 14rem;
      }
      
      @include responsive-max(md) {
        width: 12rem;
      }
      
      @include responsive-max(sm) {
        width: 8rem;
      }
      
      // Critical fix for viewports <414px (iPhone 6/7/8 and smaller)
      @media (max-width: 413px) {
        width: 6rem;
      }
      
      // Extra small screens (iPhone 5/SE at 320px)
      @media (max-width: 350px) {
        width: 4rem;
      }
      
      .search-input-wrapper {
        @extend %form-row-base;
        width: 100%;
        position: relative;
        gap: var(--space-1);
        margin-bottom: 0;
        
        .search-input {
          flex: 1;
          min-width: 0;
        }
        
        .search-close-btn {
          @extend %icon-button;
          flex-shrink: 0;
        }
      }
    }
  }
  
  .search-dropdown {
    @extend %card-base-enhanced;
    position: absolute;
    top: calc(100% + var(--space-1));
    left: 0;
    right: 0;
    max-height: 20rem;
    overflow-y: auto;
    z-index: var(--z-popover);
    padding: var(--space-2) 0;
    animation: dropdownSlideIn var(--duration-fast) var(--ease-out);
    
    .search-result-item {
      @extend %button-state-base;
      @extend %text-truncate;
      width: 100%;
      display: flex;
      align-items: center;
      gap: var(--space-3);
      padding: var(--space-2) var(--space-3);
      background: transparent;
      text-align: left;
      
      &:hover,
      &.selected {
        background: var(--color-surface);
      }
      
      .search-result-icon {
        font-size: var(--text-sm);
        color: var(--color-text-secondary);
        flex-shrink: 0;
        
        .search-result-item:hover & {
          color: var(--color-text);
        }
      }
      
      .search-result-content {
        flex: 1;
        min-width: 0;
        
        .search-result-title {
          font-size: var(--text-sm);
          font-weight: 500;
          color: var(--color-text);
          line-height: 1.4;
        }
        
        .search-result-description {
          font-size: var(--text-xs);
          color: var(--color-text-secondary);
          line-height: 1.3;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }
      }
      
      .search-result-category {
        font-size: var(--text-xs);
        color: var(--color-text-tertiary);
        flex-shrink: 0;
      }
    }
  }
}

// User Menu Container
.user-menu-container {
  @extend %interactive-base;
  position: relative;
  
  .user-menu-trigger {
    @extend %touch-target;
    min-width: auto;
  }
  
  .user-menu-content {
    @extend %form-row-base;
    gap: var(--space-2);
    min-width: 0;
    margin-bottom: 0;
  }
  
  .user-display-name {
    @extend %text-truncate;
    font-size: var(--text-sm);
    font-weight: var(--font-medium);
    color: var(--color-text);
    
    @include responsive-max(md) {
      display: none;
    }
  }
  
  .user-menu-chevron {
    @extend %icon-base;
    font-size: var(--text-sm);
    color: var(--color-text-secondary);
    transition: var(--transition-fast);
  }
  
  .user-menu-dropdown {
    position: absolute;
    top: calc(100% + var(--space-1));
    right: 0;
    z-index: calc(var(--z-header) + 20);
    opacity: 1;
    transform: translateY(0);
    animation: dropdownSlideIn var(--duration-fast) var(--ease-out);
    min-width: 200px;
    
    @include responsive-max(md) {
      right: var(--space-2);
      left: auto;
      transform: translateX(0);
      min-width: 180px;
    }
    
    @include responsive-max(sm) {
      right: var(--space-1);
      min-width: 160px;
    }
  }
}

.app-sidebar {
  position: fixed;
  top: var(--header-height);
  left: 0;
  bottom: 0;
  width: var(--sidebar-width, 16rem);
  max-width: calc(100vw - var(--space-4));
  height: calc(100vh - var(--header-height));
  background: var(--color-surface-elevated);
  border-right: var(--border-1) solid var(--color-border);
  z-index: var(--z-sidebar);
  display: flex;
  flex-direction: column;
  transition: all var(--duration-normal) var(--ease-out);
  box-sizing: border-box;
  overflow-x: hidden;
  overflow-y: hidden;
  
  // Ensure all children respect sidebar width constraints
  > * {
    max-width: 100%;
    box-sizing: border-box;
    overflow-x: hidden;
    min-width: 0;
  }
  
  // Specific fix for navigation content wrapper
  .flex-1 {
    overflow-x: hidden;
    min-width: 0;
    max-width: 100%;
    
    // Ensure any nested navigation components don't overflow
    * {
      max-width: 100%;
      box-sizing: border-box;
      min-width: 0;
    }
  }
  
  &.collapsed {
    width: var(--sidebar-width-collapsed, 4rem);
  }
  
  @include responsive-max(md) {
    transform: translateX(-100%);
    width: 80%;
    max-width: 340px;
    z-index: calc(var(--z-header) + 10);
    border-right: none;
    box-shadow: var(--shadow-xl);
    pointer-events: none;
    
    // Disable transform when modal is open to prevent stacking context issues
    body.modal-open & {
      transform: none !important;
      visibility: hidden;
      
      &.open {
        visibility: visible;
      }
    }
    
    &.open {
      transform: translateX(0);
      pointer-events: auto;
      
      body.modal-open & {
        transform: none !important;
      }
    }
  }
  
  @include responsive-max(md) {
    width: 85%;
    max-width: 300px;
  }
  
  @include responsive-max(sm) {
    width: 92%;
    max-width: 280px;
  }
  
  > .flex-1 {
    min-height: 0;
    overflow-y: auto;
    flex: 1 1 0%;
  }
  
  > .shrink-0 {
    flex-shrink: 0;
    overflow: visible; // Allow dropdowns to overflow footer container
    max-width: 100%;
    box-sizing: border-box;
    
    // Ensure sidebar footer content respects width
    * {
      max-width: 100%;
      box-sizing: border-box;
    }
  }
}

.app-main {
  position: relative;
  height: 100vh;
  padding-top: var(--header-height);
  margin-left: 0;
  width: 100%;
  overflow-y: auto;
  box-sizing: border-box;
  flex: 1;
  
  &.auto-wrap-content {
    display: flex;
    flex-direction: column;
  }
  
  &.full-width-content {
    width: 100vw;
    max-width: 100vw;
    margin-left: 0;
    overflow-x: hidden;
    overflow-y: visible;
    box-sizing: border-box;
    
    @include responsive-max(xl) {
      margin-left: 0;
      width: 100vw;
      max-width: 100vw;
    }
  }
  
  .app-shell.sidebar-collapsed & {
    margin-left: 0;
    width: 100%;
    max-width: 100%;
  }
  
  @include responsive-max(md) {
    margin-left: 0;
    width: 100vw;
    max-width: 100vw;
  }
}

.mobile-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--overlay-medium);
  z-index: calc(var(--z-sidebar) - 1);
  opacity: 0;
  visibility: hidden;
  transition: all var(--duration-normal) var(--ease-out);
  
  &.active {
    opacity: 1;
    visibility: visible;
  }
}

.shell-sticky-header {
  position: sticky;
  top: var(--header-height);
  z-index: var(--z-sticky);
  background: var(--color-canvas);
  border-bottom: var(--border-1) solid var(--color-border);
  backdrop-filter: blur(8px);
  
  @include responsive-max(md) {
    position: relative;
    backdrop-filter: none;
  }
}

.page-content {
  padding: var(--space-6);
  max-width: 100%;
  
  &-constrained {
    max-width: 1200px;
    margin: 0 auto;
  }
  
  &-wide {
    max-width: 1400px;
    margin: 0 auto;
  }
  
  &-full {
    max-width: none;
    padding: var(--space-4);
  }
  
  &-centered {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    max-width: 600px;
    margin: 0 auto;
  }
  
  @include responsive-max(lg) {
    padding: var(--space-4);
  }
  
  @include responsive-max(md) {
    padding: var(--space-3);
  }
}

.shell-split {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--space-6);
  
  @include responsive-max(lg) {
    grid-template-columns: 1fr;
    gap: var(--space-4);
  }
  
  &-with-sidebar {
    // Simplified: let app-main handle sidebar positioning
    
    @include responsive-max(lg) {
      margin-left: 0;
    }
  }
}

.shell-masonry {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: var(--space-4);
  grid-auto-rows: masonry;
  padding-top: var(--space-4);
  
  &-dense {
    grid-auto-flow: dense;
  }
  
  @include responsive-max(md) {
    grid-template-columns: 1fr;
  }
}

// ============================================================================
// SEARCH ANIMATIONS
// ============================================================================

// Use existing keyframe from _animations.scss instead of custom searchSlideIn