@use '../variables' as *;

// ============================================================================
// INTERACTION MIXINS - Hover, Focus, Loading, Animations
// ============================================================================

// Interactive pattern mixin
@mixin layout-interactive($hover-transform: translateY(-1px), $active-transform: translateY(0) scale(0.98)) {
  cursor: pointer;
  transition: all var(--duration-fast) var(--ease-out);
  
  &:hover:not(:disabled) {
    transform: $hover-transform;
  }
  
  &:active:not(:disabled) {
    transform: $active-transform;
  }
  
  &:focus-visible {
    outline: 2px solid var(--color-interactive-primary);
    outline-offset: 2px;
  }
  
  &:disabled {
    opacity: var(--opacity-disabled);
    cursor: not-allowed;
    pointer-events: none;
    transform: none !important;
  }
}

// Focus ring generation
@mixin focus-ring($color: var(--color-interactive-focus), $width: 2px, $offset: 2px) {
  &:focus-visible {
    outline: #{$width} solid color-mix(in srgb, #{$color} 40%, transparent);
    outline-offset: #{$offset};
  }
}

// Hover lift effect
@mixin hover-lift($distance: -2px) {
  transition: var(--transition-fast);
  
  &:hover {
    transform: translateY(#{$distance});
  }
}

// Card hover effect
@mixin card-hover {
  box-shadow: var(--shadow-lg);
  transform: translateY(-0.125rem);
}

// Button hover effect
@mixin button-hover($distance: 0.125rem) {
  transition: var(--transition-transform);
  
  &:hover {
    transform: translateY(-#{$distance});
  }
}

// Generic hover animation
@mixin hover-animation($property: transform, $value: translateY(-0.125rem)) {
  transition: $property 0.2s ease-in-out;
  
  &:hover {
    #{$property}: $value;
  }
}

// Loading skeleton animation
@mixin loading-skeleton {
  background: linear-gradient(90deg, var(--color-background-elevated), var(--color-background-pressed), var(--color-background-elevated));
  background-size: 200% 100%;
  animation: loadingShimmer 1.5s ease-in-out infinite;
}

// Loading spinner
@mixin loading-spinner($size: 1.25rem, $color: var(--color-interactive-primary)) {
  width: $size;
  height: $size;
  border: var(--border-2) solid transparent;
  border-top: var(--space-0-5) solid $color;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

// Interactive states system
@mixin interactive-states($primary-color: var(--color-interactive-primary), $hover-color: var(--color-interactive-hover), $active-color: var(--color-interactive-active)) {
  transition: all var(--duration-normal) var(--ease-out);
  
  &:hover {
    background: $hover-color;
    transform: translateY(-1px);
    box-shadow: var(--theme-shadow-lg);
  }
  
  &:active {
    background: $active-color;
    transform: translateY(0);
    box-shadow: var(--theme-shadow-sm);
  }
  
  &:focus-visible {
    outline: 2px solid $primary-color;
    outline-offset: 2px;
  }
}

// Status variant for different states
@mixin status-variant($color-base) {
  background: var(--color-#{$color-base}-light);
  color: var(--color-#{$color-base}-dark);
  border-color: var(--color-#{$color-base});
  
  & i {
    color: var(--color-#{$color-base});
  }
}