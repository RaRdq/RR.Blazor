@use '../variables' as *;

// ============================================================================
// UTILITY MIXINS - Visually Hidden, Truncate, Helpers
// ============================================================================

// Text truncation utilities
@mixin text-truncate($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: #{$lines};
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// Visually hidden utility
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Reset utilities
@mixin reset-list {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin reset-button {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  text-decoration: none;
  cursor: pointer;
  outline: none;
}

// Clearfix utility
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// Aspect ratio utility
@mixin aspect-ratio($width: 1, $height: 1) {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    display: block;
    width: 100%;
    padding-top: calc(#{$height} / #{$width} * 100%);
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

// Image replacement utility
@mixin image-replacement {
  border: 0;
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
  background-color: transparent;
}

// Hardware acceleration utility
@mixin hardware-acceleration {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

// Smooth scrolling utility
@mixin smooth-scrolling {
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
}

// Safe area utilities for mobile
@mixin safe-area-inset($property: padding, $direction: all) {
  @if $direction == all {
    #{$property}: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left);
  } @else if $direction == top {
    #{$property}-top: env(safe-area-inset-top);
  } @else if $direction == right {
    #{$property}-right: env(safe-area-inset-right);
  } @else if $direction == bottom {
    #{$property}-bottom: env(safe-area-inset-bottom);
  } @else if $direction == left {
    #{$property}-left: env(safe-area-inset-left);
  }
}

// Print utilities
@mixin print-only {
  @media print {
    @content;
  }
}

@mixin screen-only {
  @media screen {
    @content;
  }
}

// High contrast mode utilities
@mixin high-contrast {
  @media (prefers-contrast: high) {
    @content;
  }
}

// Reduced motion utilities
@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

// Dark mode utilities
@mixin dark-mode {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}

// Light mode utilities
@mixin light-mode {
  @media (prefers-color-scheme: light) {
    @content;
  }
}