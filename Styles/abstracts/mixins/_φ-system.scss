@use '../variables' as *;

@mixin φ-sizes($property: padding, $base: var(--space-4)) {
  & {
    #{$property}: #{$base};
  }
  &-xs { #{$property}: calc(#{$base} * 0.382); }
  &-sm { #{$property}: calc(#{$base} * 0.618); }
  &-lg { #{$property}: calc(#{$base} * 1.618); }
  &-xl { #{$property}: calc(#{$base} * 2.618); }
}

@mixin φ-multi($props) {
  @each $prop, $base in $props {
    @include φ-sizes($prop, $base);
  }
}

@mixin φ-radius($base: var(--radius-md)) {
  & {
    border-radius: #{$base};
  }
  &-sharp { border-radius: 0; }
  &-subtle { border-radius: calc(#{$base} * 0.618); }
  &-soft { border-radius: calc(#{$base} * 1.618); }
  &-round { border-radius: calc(#{$base} * 2.618); }
  &-pill { border-radius: 9999px; }
}

@mixin φ-elevation($base: var(--shadow-md)) {
  & {
    box-shadow: #{$base};
  }
  &-flat { box-shadow: none; }
  &-subtle { box-shadow: var(--shadow-sm); }
  &-elevated { box-shadow: var(--shadow-lg); }
  &-floating { box-shadow: var(--shadow-xl); }
  &-dramatic { box-shadow: var(--shadow-2xl); }
}

@mixin φ-grid($cols: 12, $gap: var(--space-4)) {
  display: grid;
  gap: #{$gap};
  grid-template-columns: repeat(#{$cols}, 1fr);

  &-responsive {
    grid-template-columns: 1fr;
    @media (min-width: 396px) { grid-template-columns: repeat(2, 1fr); }
    @media (min-width: 475px) { grid-template-columns: repeat(3, 1fr); }
    @media (min-width: 768px) { grid-template-columns: repeat(#{$cols / 2}, 1fr); }
    @media (min-width: 1656px) { grid-template-columns: repeat(#{$cols}, 1fr); }
  }
}
