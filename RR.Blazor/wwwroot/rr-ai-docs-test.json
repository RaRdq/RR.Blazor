{
  "_ai_instructions": {
    "structure": {
      "components": "All R* components with full AI metadata, parameters, and usage patterns",
      "utilityPatterns": "Common utility class patterns and AI hints",
      "aiPatterns": "Pre-built patterns for common use cases",
      "cssVariables": "CSS custom properties with usage guidance"
    },
    "ai_metadata": {
      "description": "Component summary and capabilities from @** blocks",
      "commonUse": "Common use cases and scenarios",
      "patterns": "Named patterns for specific use cases",
      "aiPrompt": "AI-friendly prompt for component usage",
      "avoidUsage": "When NOT to use this component"
    },
    "parameter_metadata": {
      "description": "Parameter description from XML comments",
      "aiHint": "AI-friendly usage hint from AIParameter attribute",
      "isRequired": "Whether parameter is required",
      "suggestedValues": "Suggested values for the parameter",
      "defaultValue": "Default value if any"
    },
    "file_purpose": "RR.Blazor R* Components comprehensive documentation with AI metadata",
    "usage_note": "Use @** blocks for AI prompts, parameter descriptions, and usage patterns"
  },
  "components": {
    "RVirtualList": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RVirtualList",
      "description": "",
      "parameters": {
        "ItemTemplate": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment<T>",
          "description": "Template for rendering each item",
          "name": "ItemTemplate",
          "isRequired": false
        },
        "LoadingTemplate": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Template for loading state",
          "name": "LoadingTemplate",
          "isRequired": false
        },
        "BufferSize": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "5",
          "type": "int",
          "description": "Buffer size for items outside visible area",
          "name": "BufferSize",
          "isRequired": true
        },
        "ContainerHeight": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "400",
          "type": "int",
          "description": "Height of the container in pixels",
          "name": "ContainerHeight",
          "isRequired": true
        },
        "ItemHeight": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "120",
          "type": "int",
          "description": "Height of each item in pixels",
          "name": "ItemHeight",
          "isRequired": true
        },
        "SkeletonCount": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "3",
          "type": "int",
          "description": "Number of skeleton items to show when loading",
          "name": "SkeletonCount",
          "isRequired": true
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "Loading": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "false",
          "type": "bool",
          "description": "Whether currently loading initial items",
          "name": "Loading",
          "isRequired": true
        },
        "Size": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"default\"",
          "type": "string",
          "description": "Size variant for spacing",
          "name": "Size",
          "isRequired": false
        },
        "LoadingMoreTemplate": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Template for loading more items",
          "name": "LoadingMoreTemplate",
          "isRequired": false
        },
        "Items": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "new()",
          "type": "List<T>",
          "description": "Items to display in the virtual list",
          "name": "Items",
          "isRequired": false
        },
        "OnLoadMore": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "Callback when more items need to be loaded",
          "name": "OnLoadMore",
          "isRequired": false
        },
        "HasMoreItems": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Whether there are more items to load",
          "name": "HasMoreItems",
          "isRequired": true
        },
        "SkeletonHeight": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"120px\"",
          "type": "string",
          "description": "Height of skeleton items",
          "name": "SkeletonHeight",
          "isRequired": false
        },
        "EmptyTemplate": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Template for empty state",
          "name": "EmptyTemplate",
          "isRequired": false
        },
        "AutoLoadMore": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Auto-load more when scrolling near bottom",
          "name": "AutoLoadMore",
          "isRequired": true
        },
        "LoadMoreTemplate": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Template for load more button",
          "name": "LoadMoreTemplate",
          "isRequired": false
        }
      },
      "filePath": "/Components/Data/RVirtualList.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RFilterBar": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RFilterBar",
      "description": "",
      "parameters": {
        "FilterChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<FilterChangedEventArgs>",
          "description": "Filter changed callback",
          "name": "FilterChanged",
          "isRequired": false
        },
        "StatusFilter": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"\"",
          "type": "string",
          "description": "Status filter value",
          "name": "StatusFilter",
          "isRequired": false
        },
        "CustomFilters": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Custom filter content",
          "name": "CustomFilters",
          "isRequired": false
        },
        "SearchValueChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<string>",
          "description": "Search value changed callback",
          "name": "SearchValueChanged",
          "isRequired": false
        },
        "ShowClearButton": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Whether to show clear all button",
          "name": "ShowClearButton",
          "isRequired": true
        },
        "ActiveQuickFilters": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "new()",
          "type": "HashSet<string>",
          "description": "Active quick filter keys",
          "name": "ActiveQuickFilters",
          "isRequired": false
        },
        "QuickFilterToggled": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<QuickFilterToggledEventArgs>",
          "description": "Quick filter toggled callback",
          "name": "QuickFilterToggled",
          "isRequired": false
        },
        "Filters": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "new()",
          "type": "List<FilterDefinition>",
          "description": "Dynamic filter definitions",
          "name": "Filters",
          "isRequired": false
        },
        "DateRangeChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<DateRangeChangedEventArgs>",
          "description": "Date range changed callback",
          "name": "DateRangeChanged",
          "isRequired": false
        },
        "QuickFilters": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "new()",
          "type": "List<QuickFilterDefinition>",
          "description": "Quick filter button definitions",
          "name": "QuickFilters",
          "isRequired": false
        },
        "ShowSearch": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Whether to show search input",
          "name": "ShowSearch",
          "isRequired": true
        },
        "DateFrom": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "DateTime?",
          "description": "Date from value",
          "name": "DateFrom",
          "isRequired": false
        },
        "SearchValue": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"\"",
          "type": "string",
          "description": "Search input value",
          "name": "SearchValue",
          "isRequired": false
        },
        "StatusFilterChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<string>",
          "description": "Status filter changed callback",
          "name": "StatusFilterChanged",
          "isRequired": false
        },
        "ShowStatus": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether to show status filter",
          "name": "ShowStatus",
          "isRequired": true
        },
        "ShowDateRange": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether to show date range filter",
          "name": "ShowDateRange",
          "isRequired": true
        },
        "SearchPlaceholder": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"Search...\"",
          "type": "string",
          "description": "Search input placeholder text",
          "name": "SearchPlaceholder",
          "isRequired": false
        },
        "ShowFilterCount": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Whether to show active filter count",
          "name": "ShowFilterCount",
          "isRequired": true
        },
        "FiltersCleared": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "All filters cleared callback",
          "name": "FiltersCleared",
          "isRequired": false
        },
        "DateTo": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "DateTime?",
          "description": "Date to value",
          "name": "DateTo",
          "isRequired": false
        },
        "StatusOptions": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "new()",
          "type": "Dictionary<string, string>",
          "description": "Status filter options",
          "name": "StatusOptions",
          "isRequired": false
        }
      },
      "filePath": "/Components/Data/RFilterBar.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RDataTableColumn": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RDataTableColumn",
      "description": "",
      "parameters": {
        "Header": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"\"",
          "type": "string",
          "description": "",
          "name": "Header",
          "isRequired": false
        },
        "MinWidth": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "MinWidth",
          "isRequired": false
        },
        "HeaderTemplate": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "HeaderTemplate",
          "isRequired": false
        },
        "CellClass": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"\"",
          "type": "string",
          "description": "",
          "name": "CellClass",
          "isRequired": false
        },
        "Key": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"\"",
          "type": "string",
          "description": "",
          "name": "Key",
          "isRequired": false
        },
        "Width": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Width",
          "isRequired": false
        },
        "HeaderClass": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"\"",
          "type": "string",
          "description": "",
          "name": "HeaderClass",
          "isRequired": false
        },
        "CellTemplate": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment<TItem>",
          "description": "",
          "name": "CellTemplate",
          "isRequired": false
        },
        "MaxWidth": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "MaxWidth",
          "isRequired": false
        },
        "Sortable": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Sortable",
          "isRequired": true
        }
      },
      "filePath": "/Components/Data/RDataTableColumn.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RActionGroup": {
      "commonUse": "form actions, toolbar buttons, navigation controls, modal actions",
      "complexity": "Simple",
      "patterns": {
        "form-actions": "Alignment=\"ActionGroupAlignment.End\" for form Save/Cancel buttons",
        "toolbar-actions": "Direction=\"ActionGroupDirection.Horizontal\" Spacing=\"ActionGroupSpacing.Small\" for compact toolbars",
        "space-between": "Alignment=\"ActionGroupAlignment.SpaceBetween\" for opposing actions",
        "vertical-menu": "Direction=\"ActionGroupDirection.Vertical\" FullWidth=\"true\" for dropdown menus"
      },
      "category": "Core",
      "name": "RActionGroup",
      "description": "Professional action group component for organizing multiple buttons with consistent spacing and alignment. Supports horizontal/vertical layouts, responsive behavior, and flexible alignment options.",
      "parameters": {
        "Responsive": {
          "aiHint": "True for responsive mobile layouts, false for fixed layouts",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Whether to wrap on small screens for responsive behavior",
          "name": "Responsive",
          "isRequired": true
        },
        "FullWidth": {
          "aiHint": "Use for vertical menus and mobile layouts for full-width buttons",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether buttons should be full width in vertical layout",
          "name": "FullWidth",
          "isRequired": true
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Child content (buttons/actions)",
          "name": "ChildContent",
          "isRequired": false
        },
        "Alignment": {
          "aiHint": "End for form actions, SpaceBetween for opposing actions, Center for balanced",
          "suggestedValues": [
            "Start",
            "Center",
            "End",
            "SpaceBetween",
            "SpaceAround",
            "SpaceEvenly"
          ],
          "defaultValue": "ActionGroupAlignment.Start",
          "type": "ActionGroupAlignment",
          "description": "Alignment for the action group - determines button positioning",
          "name": "Alignment",
          "isRequired": false
        },
        "Spacing": {
          "aiHint": "Medium for most cases, Small for compact toolbars, Large for prominence",
          "suggestedValues": [
            "None",
            "Small",
            "Medium",
            "Large",
            "ExtraLarge"
          ],
          "defaultValue": "ActionGroupSpacing.Medium",
          "type": "ActionGroupSpacing",
          "description": "Spacing between actions - controls gap between buttons",
          "name": "Spacing",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "Direction": {
          "aiHint": "Horizontal for forms/toolbars, Vertical for dropdowns/mobile layouts",
          "suggestedValues": [
            "Horizontal",
            "Vertical"
          ],
          "defaultValue": "ActionGroupDirection.Horizontal",
          "type": "ActionGroupDirection",
          "description": "Layout direction for the action group - horizontal or vertical arrangement",
          "name": "Direction",
          "isRequired": false
        }
      },
      "filePath": "/Components/Core/RActionGroup.razor",
      "aiPrompt": "Create a professional action group for organizing buttons",
      "avoidUsage": "Don't use for single buttons - use RButton directly. Avoid for non-action content."
    },
    "RTabItem": {
      "commonUse": "tab content organization, document tabs, settings sections",
      "complexity": "Simple",
      "patterns": {
        "icon-tab": "Icon=\"icon_name\" for tab with icon",
        "closable-tab": "Closable=\"true\" for removable tabs",
        "basic-tab": "Text and ChildContent for simple tab item",
        "badge-tab": "BadgeCount for notification indicators"
      },
      "category": "Navigation",
      "name": "RTabItem",
      "description": "Individual tab item component for RTabs container with icon, badge, and content support. Supports closable tabs, disabled states, and badge notifications for professional tab experiences.",
      "parameters": {
        "Icon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Icon for tab",
          "name": "Icon",
          "isRequired": false
        },
        "BadgeVariant": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Badge variant (danger, warning, success)",
          "name": "BadgeVariant",
          "isRequired": false
        },
        "Id": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "Guid.NewGuid().ToString()",
          "type": "string",
          "description": "Unique identifier for this tab",
          "name": "Id",
          "isRequired": false
        },
        "Text": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Tab text/title",
          "name": "Text",
          "isRequired": false
        },
        "IconPosition": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "IconPosition.Start",
          "type": "IconPosition",
          "description": "Icon position",
          "name": "IconPosition",
          "isRequired": false
        },
        "BadgeCount": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "int",
          "description": "Badge count to display",
          "name": "BadgeCount",
          "isRequired": true
        },
        "Disabled": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether tab is disabled",
          "name": "Disabled",
          "isRequired": true
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Tab content",
          "name": "ChildContent",
          "isRequired": false
        },
        "Closable": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether tab can be closed",
          "name": "Closable",
          "isRequired": true
        }
      },
      "filePath": "/Components/Navigation/RTabItem.razor",
      "aiPrompt": "Create individual tab item for RTabs container",
      "avoidUsage": "Don't use outside RTabs container. Use RButton for standalone buttons."
    },
    "RAccordion": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RAccordion",
      "description": "",
      "parameters": {
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Accordion items content",
          "name": "ChildContent",
          "isRequired": false
        },
        "Multiple": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "false",
          "type": "bool",
          "description": "Whether multiple items can be expanded at once",
          "name": "Multiple",
          "isRequired": true
        },
        "Bordered": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Whether to show borders between items",
          "name": "Bordered",
          "isRequired": true
        },
        "Separated": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "false",
          "type": "bool",
          "description": "Whether to show separators between items",
          "name": "Separated",
          "isRequired": true
        },
        "Variant": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "AccordionVariant.Default",
          "type": "AccordionVariant",
          "description": "Accordion style variant",
          "name": "Variant",
          "isRequired": false
        },
        "ExpandIcon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"expand_more\"",
          "type": "string",
          "description": "Expand icon",
          "name": "ExpandIcon",
          "isRequired": false
        },
        "IconPosition": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "AccordionIconPosition.Right",
          "type": "AccordionIconPosition",
          "description": "Icon position",
          "name": "IconPosition",
          "isRequired": false
        },
        "OnExpanded": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<string>",
          "description": "Callback when an item is expanded",
          "name": "OnExpanded",
          "isRequired": false
        },
        "OnCollapsed": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<string>",
          "description": "Callback when an item is collapsed",
          "name": "OnCollapsed",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "CollapseIcon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"expand_less\"",
          "type": "string",
          "description": "Collapse icon",
          "name": "CollapseIcon",
          "isRequired": false
        }
      },
      "filePath": "/Components/Display/RAccordion.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RButton": {
      "commonUse": "forms, navigation, actions, toolbars, dashboards",
      "complexity": "Simple",
      "patterns": {
        "icon-button": "Icon=\"icon_name\" IconPosition=\"IconPosition.Start\" for buttons with icons",
        "primary-action": "Variant=\"ButtonVariant.Primary\" for main actions like Save, Submit, Create",
        "loading-button": "Loading=\"true\" LoadingText=\"Processing...\" for async operations",
        "destructive-action": "Variant=\"ButtonVariant.Danger\" for destructive actions like Delete, Remove",
        "secondary-action": "Variant=\"ButtonVariant.Secondary\" for supporting actions like Cancel, Back"
      },
      "category": "Core",
      "name": "RButton",
      "description": "Professional button component with enterprise variants, AI-optimized for rapid development. Supports 9 variants, 5 sizes, loading states, elevation effects, and comprehensive accessibility.",
      "parameters": {
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Child content for custom button content",
          "name": "ChildContent",
          "isRequired": false
        },
        "ShowBadge": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Show notification badge",
          "name": "ShowBadge",
          "isRequired": true
        },
        "LoadingText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"Processing...\"",
          "type": "string",
          "description": "Custom loading text override",
          "name": "LoadingText",
          "isRequired": false
        },
        "OnMouseDown": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<MouseEventArgs>",
          "description": "Mouse down event handler",
          "name": "OnMouseDown",
          "isRequired": false
        },
        "HasShadow": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Whether button should have shadow",
          "name": "HasShadow",
          "isRequired": true
        },
        "PreventDefault": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Prevent default click behavior",
          "name": "PreventDefault",
          "isRequired": true
        },
        "Disabled": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether button is disabled",
          "name": "Disabled",
          "isRequired": true
        },
        "Rounded": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Whether button should have rounded corners",
          "name": "Rounded",
          "isRequired": true
        },
        "FullWidth": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether button spans full width",
          "name": "FullWidth",
          "isRequired": true
        },
        "SuccessMessage": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Success message after action completion",
          "name": "SuccessMessage",
          "isRequired": false
        },
        "Shortcut": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Keyboard shortcut hint (display only)",
          "name": "Shortcut",
          "isRequired": false
        },
        "OnBlur": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<FocusEventArgs>",
          "description": "Blur event handler",
          "name": "OnBlur",
          "isRequired": false
        },
        "ConfirmTitle": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"Confirm Action\"",
          "type": "string",
          "description": "Confirmation dialog title",
          "name": "ConfirmTitle",
          "isRequired": false
        },
        "Target": {
          "aiHint": "_blank for new window, _self for same window",
          "suggestedValues": [
            "_blank",
            "_self"
          ],
          "defaultValue": "\"_self\"",
          "type": "string",
          "description": "Target for navigation (_blank for new window)",
          "name": "Target",
          "isRequired": false
        },
        "BadgeCount": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "int",
          "description": "Badge count number",
          "name": "BadgeCount",
          "isRequired": true
        },
        "Tooltip": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Whether to show tooltip on hover",
          "name": "Tooltip",
          "isRequired": false
        },
        "IconPosition": {
          "aiHint": "Start is most common, End for arrows, Top for stacked layouts",
          "suggestedValues": [
            "Start",
            "End",
            "Top",
            "Bottom"
          ],
          "defaultValue": "IconPosition.Start",
          "type": "IconPosition",
          "description": "Position of icon relative to text content",
          "name": "IconPosition",
          "isRequired": false
        },
        "StopPropagation": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Stop click propagation",
          "name": "StopPropagation",
          "isRequired": true
        },
        "AriaLabel": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Accessibility label",
          "name": "AriaLabel",
          "isRequired": false
        },
        "Icon": {
          "aiHint": "Common icons: save, delete, edit, add, search, settings",
          "suggestedValues": [
            "save",
            "delete",
            "edit",
            "add",
            "search",
            "settings"
          ],
          "defaultValue": null,
          "type": "string",
          "description": "Material icon name to display alongside text",
          "name": "Icon",
          "isRequired": false
        },
        "SuccessTimeout": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "3000",
          "type": "int",
          "description": "Auto-hide timeout for success message (milliseconds)",
          "name": "SuccessTimeout",
          "isRequired": true
        },
        "Text": {
          "aiHint": "Use action verbs like Save, Delete, Create. Keep concise.",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Button text content - the main label displayed on the button",
          "name": "Text",
          "isRequired": false
        },
        "OnClick": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<MouseEventArgs>",
          "description": "Click event handler",
          "name": "OnClick",
          "isRequired": false
        },
        "TabIndex": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "int",
          "description": "Tab index",
          "name": "TabIndex",
          "isRequired": true
        },
        "Size": {
          "aiHint": "Medium is default, Large for prominent actions, Small for compact",
          "suggestedValues": [
            "Small",
            "Medium",
            "Large"
          ],
          "defaultValue": "ButtonSize.Medium",
          "type": "ButtonSize",
          "description": "Button size - affects padding, text size, and overall dimensions",
          "name": "Size",
          "isRequired": false
        },
        "Progress": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "-1",
          "type": "int",
          "description": "Progress percentage for progress button (0-100)",
          "name": "Progress",
          "isRequired": true
        },
        "Loading": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether button is in loading state",
          "name": "Loading",
          "isRequired": true
        },
        "Elevation": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "-1",
          "type": "int",
          "description": "Elevation level (0-24)",
          "name": "Elevation",
          "isRequired": true
        },
        "OnMouseUp": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<MouseEventArgs>",
          "description": "Mouse up event handler",
          "name": "OnMouseUp",
          "isRequired": false
        },
        "Title": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Title attribute",
          "name": "Title",
          "isRequired": false
        },
        "RequiresConfirmation": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether button requires special permissions",
          "name": "RequiresConfirmation",
          "isRequired": true
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "ConfirmMessage": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Confirmation message before action execution",
          "name": "ConfirmMessage",
          "isRequired": false
        },
        "Type": {
          "aiHint": "Submit for forms, Button for regular actions",
          "suggestedValues": [
            "Button",
            "Submit",
            "Reset"
          ],
          "defaultValue": "ButtonType.Button",
          "type": "ButtonType",
          "description": "Button type attribute for form interaction",
          "name": "Type",
          "isRequired": false
        },
        "Variant": {
          "aiHint": "Primary for main actions, Secondary for supporting, Danger for destructive",
          "suggestedValues": [
            "Primary",
            "Secondary",
            "Danger",
            "Ghost",
            "Outline"
          ],
          "defaultValue": "ButtonVariant.Primary",
          "type": "ButtonVariant",
          "description": "Button variant style - determines visual appearance and behavior",
          "name": "Variant",
          "isRequired": false
        },
        "Href": {
          "aiHint": "Button navigates to this URL when clicked",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "URL for navigation when button is clicked",
          "name": "Href",
          "isRequired": false
        },
        "OnFocus": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<FocusEventArgs>",
          "description": "Focus event handler",
          "name": "OnFocus",
          "isRequired": false
        }
      },
      "filePath": "/Components/Core/RButton.razor",
      "aiPrompt": "Create a professional button for user actions",
      "avoidUsage": "Don't use for navigation links - use RLink instead. Avoid for simple text without actions."
    },
    "RFormModal": {
      "commonUse": "quick edit modals, auto-generated forms, dynamic data entry",
      "complexity": "Complex",
      "patterns": {
        "auto-form": "InitialData=\"@model\" OnSave=\"HandleSave\"",
        "custom-form": "FormComponent=\"@typeof(MyFormComponent)\"",
        "validation-form": "OnValidate=\"ValidateModel\" ShowValidationSummary=\"true\""
      },
      "category": "Form",
      "name": "RFormModal",
      "description": "Generic form modal component for dynamic form generation and validation",
      "parameters": {
        "ChildContent": {
          "aiHint": "Custom form content instead of auto-generation",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "ChildContent",
          "isRequired": false
        },
        "ShowValidationSummary": {
          "aiHint": "Show validation error summary",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowValidationSummary",
          "isRequired": true
        },
        "FormComponent": {
          "aiHint": "Custom form component type to use instead of auto-generation",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "Type",
          "description": "",
          "name": "FormComponent",
          "isRequired": false
        },
        "OnDataChanged": {
          "aiHint": "Callback when form data changes",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<T>",
          "description": "",
          "name": "OnDataChanged",
          "isRequired": false
        },
        "InitialData": {
          "aiHint": "Initial data model for the form",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "T",
          "description": "",
          "name": "InitialData",
          "isRequired": false
        },
        "FormParameters": {
          "aiHint": "Additional parameters passed to custom form component",
          "suggestedValues": [],
          "defaultValue": "new()",
          "type": "Dictionary<string, object>",
          "description": "",
          "name": "FormParameters",
          "isRequired": false
        }
      },
      "filePath": "/Components/Feedback/RFormModal.razor",
      "aiPrompt": "Create a modal with auto-generated form fields from a model",
      "avoidUsage": "Don't use for complex custom forms - create dedicated form components instead"
    },
    "RMetric": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RMetric",
      "description": "",
      "parameters": {
        "ChangeIsCurrency": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether change is currency",
          "name": "ChangeIsCurrency",
          "isRequired": true
        },
        "Value": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "object",
          "description": "Metric value to display",
          "name": "Value",
          "isRequired": false
        },
        "Change": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "decimal?",
          "description": "Change value (positive/negative)",
          "name": "Change",
          "isRequired": false
        },
        "Prefix": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Value prefix (e.g., \"$\", \"+\")",
          "name": "Prefix",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "Label": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Metric label/title",
          "name": "Label",
          "isRequired": false
        },
        "Variant": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"default\"",
          "type": "string",
          "description": "Metric variant for styling",
          "name": "Variant",
          "isRequired": false
        },
        "Loading": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether metric is loading",
          "name": "Loading",
          "isRequired": true
        },
        "Size": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"medium\"",
          "type": "string",
          "description": "Metric size",
          "name": "Size",
          "isRequired": false
        },
        "ChangeSuffix": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"%\"",
          "type": "string",
          "description": "Change suffix (e.g., \"%\", \"pts\")",
          "name": "ChangeSuffix",
          "isRequired": false
        },
        "Suffix": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Value suffix (e.g., \"%\", \"units\")",
          "name": "Suffix",
          "isRequired": false
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Custom content area",
          "name": "ChildContent",
          "isRequired": false
        },
        "Icon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Icon to display",
          "name": "Icon",
          "isRequired": false
        },
        "Clickable": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether metric is clickable",
          "name": "Clickable",
          "isRequired": true
        },
        "Format": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Format string for value display",
          "name": "Format",
          "isRequired": false
        },
        "Subtitle": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Subtitle or description",
          "name": "Subtitle",
          "isRequired": false
        },
        "OnClick": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<MouseEventArgs>",
          "description": "Click handler for interactive metrics",
          "name": "OnClick",
          "isRequired": false
        },
        "ShowChange": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether to show change indicator",
          "name": "ShowChange",
          "isRequired": true
        }
      },
      "filePath": "/Components/Display/RMetric.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RDatePicker": {
      "commonUse": "date selection, appointment scheduling, event planning, form dates",
      "complexity": "Complex",
      "patterns": {
        "restricted-dates": "MinDate=\"@DateTime.Today\" MaxDate=\"@futureDate\"",
        "date-range": "@bind-Value=\"startDate\" @bind-EndValue=\"endDate\" Range=\"true\"",
        "date-only": "@bind-Value=\"selectedDate\" ShowTime=\"false\"",
        "datetime": "@bind-Value=\"dateTime\" ShowTime=\"true\" Use24HourFormat=\"false\"",
        "business-days": "DisabledDaysOfWeek=\"@weekends\" MinDate=\"@DateTime.Today\""
      },
      "category": "Form",
      "name": "RDatePicker",
      "description": "Professional date and time picker with calendar popup and time selection",
      "parameters": {
        "EndValueChanged": {
          "aiHint": "Callback when end date changes",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<DateTime?>",
          "description": "",
          "name": "EndValueChanged",
          "isRequired": false
        },
        "Required": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Required",
          "isRequired": true
        },
        "DisabledDates": {
          "aiHint": "Function to disable specific dates",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "Func<DateTime, bool>",
          "description": "",
          "name": "DisabledDates",
          "isRequired": false
        },
        "Placeholder": {
          "aiHint": "Placeholder text when no date selected",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Placeholder",
          "isRequired": false
        },
        "Value": {
          "aiHint": "Selected date/time value",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "DateTime?",
          "description": "",
          "name": "Value",
          "isRequired": false
        },
        "Range": {
          "aiHint": "Enable date range selection",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Start icon (deprecated - use Icon + IconPosition)",
          "name": "Range",
          "isRequired": true
        },
        "ShowClearButton": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Start icon (deprecated - use Icon + IconPosition)",
          "name": "ShowClearButton",
          "isRequired": true
        },
        "ShowTodayButton": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Start icon (deprecated - use Icon + IconPosition)",
          "name": "ShowTodayButton",
          "isRequired": true
        },
        "Disabled": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Disabled",
          "isRequired": true
        },
        "DisabledDaysOfWeek": {
          "aiHint": "Array of disabled days of week",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "DayOfWeek[]",
          "description": "",
          "name": "DisabledDaysOfWeek",
          "isRequired": false
        },
        "ErrorMessage": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "ErrorMessage",
          "isRequired": false
        },
        "MaxDate": {
          "aiHint": "Maximum selectable date",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "DateTime?",
          "description": "",
          "name": "MaxDate",
          "isRequired": false
        },
        "MinuteInterval": {
          "aiHint": "Minute interval for time picker",
          "suggestedValues": [],
          "defaultValue": "1",
          "type": "int",
          "description": "Start icon (deprecated - use Icon + IconPosition)",
          "name": "MinuteInterval",
          "isRequired": true
        },
        "Icon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Icon for the component",
          "name": "Icon",
          "isRequired": false
        },
        "Format": {
          "aiHint": "Date format string",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Format",
          "isRequired": false
        },
        "IconPosition": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "IconPosition.Start",
          "type": "IconPosition",
          "description": "Position of the icon",
          "name": "IconPosition",
          "isRequired": false
        },
        "Use24HourFormat": {
          "aiHint": "Use 24-hour time format instead of AM/PM",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Start icon (deprecated - use Icon + IconPosition)",
          "name": "Use24HourFormat",
          "isRequired": true
        },
        "ShowTime": {
          "aiHint": "Show time picker alongside date",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Start icon (deprecated - use Icon + IconPosition)",
          "name": "ShowTime",
          "isRequired": true
        },
        "Size": {
          "aiHint": "Size of the picker input (Small, Medium, Large)",
          "suggestedValues": [],
          "defaultValue": "FieldSize.Medium",
          "type": "FieldSize",
          "description": "",
          "name": "Size",
          "isRequired": false
        },
        "HelperText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "HelperText",
          "isRequired": false
        },
        "InputId": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "Guid.NewGuid().ToString(\"N\")[..8]",
          "type": "string",
          "description": "",
          "name": "InputId",
          "isRequired": false
        },
        "ValueChanged": {
          "aiHint": "Callback when date/time value changes",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<DateTime?>",
          "description": "",
          "name": "ValueChanged",
          "isRequired": false
        },
        "Label": {
          "aiHint": "Label text displayed above the picker",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Label",
          "isRequired": false
        },
        "EndValue": {
          "aiHint": "End date for range selection",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "DateTime?",
          "description": "",
          "name": "EndValue",
          "isRequired": false
        },
        "StartIcon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Start icon (deprecated - use Icon + IconPosition)",
          "name": "StartIcon",
          "isRequired": false
        },
        "ShowWeekNumbers": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "ShowWeekNumbers",
          "isRequired": true
        },
        "OnCalendarOpen": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "",
          "name": "OnCalendarOpen",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Start icon (deprecated - use Icon + IconPosition)",
          "name": "Class",
          "isRequired": false
        },
        "OnCalendarClose": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "",
          "name": "OnCalendarClose",
          "isRequired": false
        },
        "ReadOnly": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "ReadOnly",
          "isRequired": true
        },
        "HasError": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "HasError",
          "isRequired": true
        },
        "MinDate": {
          "aiHint": "Minimum selectable date",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "DateTime?",
          "description": "",
          "name": "MinDate",
          "isRequired": false
        },
        "OnDateSelected": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<DateTime?>",
          "description": "",
          "name": "OnDateSelected",
          "isRequired": false
        }
      },
      "filePath": "/Components/Form/RDatePicker.razor",
      "aiPrompt": "Create a date/time picker with calendar popup and validation",
      "avoidUsage": "Don't use for simple date input - use RDatePickerBasic instead"
    },
    "RSkeleton": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RSkeleton",
      "description": "",
      "parameters": {
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "ChildContent",
          "isRequired": false
        },
        "Height": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"auto\"",
          "type": "string",
          "description": "",
          "name": "Height",
          "isRequired": false
        },
        "Type": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "SkeletonType.Text",
          "type": "SkeletonType",
          "description": "",
          "name": "Type",
          "isRequired": false
        },
        "Width": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"100%\"",
          "type": "string",
          "description": "",
          "name": "Width",
          "isRequired": false
        },
        "Animated": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "Animated",
          "isRequired": true
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "string.Empty",
          "type": "string",
          "description": "",
          "name": "Class",
          "isRequired": false
        },
        "Count": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "1",
          "type": "int",
          "description": "",
          "name": "Count",
          "isRequired": true
        }
      },
      "filePath": "/Components/Display/RSkeleton.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RConfirmModal": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RConfirmModal",
      "description": "",
      "parameters": {
        "Icon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"help\"",
          "type": "string",
          "description": "",
          "name": "Icon",
          "isRequired": false
        },
        "Destructive": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Destructive",
          "isRequired": true
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "ChildContent",
          "isRequired": false
        },
        "OnResult": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<bool>",
          "description": "",
          "name": "OnResult",
          "isRequired": false
        },
        "Message": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"\"",
          "type": "string",
          "description": "",
          "name": "Message",
          "isRequired": false
        },
        "Details": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"\"",
          "type": "string",
          "description": "",
          "name": "Details",
          "isRequired": false
        },
        "ShowWarning": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowWarning",
          "isRequired": true
        }
      },
      "filePath": "/Components/Feedback/RConfirmModal.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RBadge": {
      "commonUse": "status indicators, counts, labels, notifications, tags",
      "complexity": "Simple",
      "patterns": {
        "warning-badge": "Text=\"Pending\" Variant=\"BadgeVariant.Warning\" for attention states",
        "status-badge": "Text=\"Active\" Variant=\"BadgeVariant.Success\" for status indicators",
        "count-badge": "Text=\"5\" Variant=\"BadgeVariant.Primary\" for notification counts",
        "clickable-badge": "Clickable=\"true\" OnClick=\"HandleClick\" for interactive badges"
      },
      "category": "Core",
      "name": "RBadge",
      "description": "Professional badge component for status indicators, counts, and labels. Supports multiple variants, sizes, and interactive states with enterprise-grade styling.",
      "parameters": {
        "Icon": {
          "aiHint": "Common icons: check_circle, warning, error, info, star, notifications",
          "suggestedValues": [
            "check_circle",
            "warning",
            "error",
            "info",
            "star",
            "notifications"
          ],
          "defaultValue": null,
          "type": "string",
          "description": "Material icon name to display alongside text",
          "name": "Icon",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "string.Empty",
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Child content for custom badge content",
          "name": "ChildContent",
          "isRequired": false
        },
        "Variant": {
          "aiHint": "Primary for emphasis, Success for positive, Warning for attention, Danger for errors",
          "suggestedValues": [
            "Primary",
            "Secondary",
            "Success",
            "Warning",
            "Danger",
            "Info"
          ],
          "defaultValue": "BadgeVariant.Secondary",
          "type": "BadgeVariant",
          "description": "Badge variant - determines color scheme and semantic meaning",
          "name": "Variant",
          "isRequired": false
        },
        "OnClick": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "Click event handler for interactive badges",
          "name": "OnClick",
          "isRequired": false
        },
        "Clickable": {
          "aiHint": "Set to true for interactive badges that perform actions",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether badge is clickable - adds hover effects and cursor pointer",
          "name": "Clickable",
          "isRequired": true
        },
        "Text": {
          "aiHint": "Keep text short: Active, 5, New, Pending. Use 1-10 characters max",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Badge text content - typically short labels, counts, or status indicators",
          "name": "Text",
          "isRequired": false
        },
        "Size": {
          "aiHint": "Medium is default, Small for compact layouts, Large for prominence",
          "suggestedValues": [
            "Small",
            "Medium",
            "Large"
          ],
          "defaultValue": "BadgeSize.Medium",
          "type": "BadgeSize",
          "description": "Badge size - affects padding, text size, and overall dimensions",
          "name": "Size",
          "isRequired": false
        }
      },
      "filePath": "/Components/Core/RBadge.razor",
      "aiPrompt": "Create a professional badge for status or count display",
      "avoidUsage": "Don't use for navigation buttons - use RButton instead. Avoid for large text content."
    },
    "RConfirmationModal": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RConfirmationModal",
      "description": "",
      "parameters": {
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "ChildContent",
          "isRequired": false
        },
        "IconName": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"warning\"",
          "type": "string",
          "description": "",
          "name": "IconName",
          "isRequired": false
        },
        "Variant": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "ModalVariant.Warning",
          "type": "ModalVariant",
          "description": "",
          "name": "Variant",
          "isRequired": false
        },
        "OnConfirm": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "",
          "name": "OnConfirm",
          "isRequired": false
        },
        "Message": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"Are you sure you want to proceed?\"",
          "type": "string",
          "description": "",
          "name": "Message",
          "isRequired": false
        },
        "Title": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"Confirm Action\"",
          "type": "string",
          "description": "",
          "name": "Title",
          "isRequired": false
        },
        "CancelText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"Cancel\"",
          "type": "string",
          "description": "",
          "name": "CancelText",
          "isRequired": false
        },
        "Visible": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Visible",
          "isRequired": true
        },
        "ConfirmText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"Yes\"",
          "type": "string",
          "description": "",
          "name": "ConfirmText",
          "isRequired": false
        },
        "OnCancel": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "",
          "name": "OnCancel",
          "isRequired": false
        },
        "Processing": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Processing",
          "isRequired": true
        }
      },
      "filePath": "/Components/Feedback/RConfirmationModal.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RThemeProvider": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RThemeProvider",
      "description": "",
      "parameters": {
        "InitialTheme": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "ThemeConfiguration",
          "description": "",
          "name": "InitialTheme",
          "isRequired": false
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "ChildContent",
          "isRequired": false
        }
      },
      "filePath": "/Components/Core/RThemeProvider.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RDetailModal": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RDetailModal",
      "description": "",
      "parameters": {
        "ExcludedProperties": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "new()",
          "type": "List<string>",
          "description": "",
          "name": "ExcludedProperties",
          "isRequired": false
        },
        "ShowPropertyGrid": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowPropertyGrid",
          "isRequired": true
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "ChildContent",
          "isRequired": false
        },
        "PropertyLabels": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "new()",
          "type": "Dictionary<string, string>",
          "description": "",
          "name": "PropertyLabels",
          "isRequired": false
        },
        "Data": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "T",
          "description": "",
          "name": "Data",
          "isRequired": false
        },
        "DetailTemplate": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment<T>",
          "description": "",
          "name": "DetailTemplate",
          "isRequired": false
        },
        "ShowMetadata": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "false",
          "type": "bool",
          "description": "",
          "name": "ShowMetadata",
          "isRequired": true
        },
        "IncludedProperties": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "new()",
          "type": "List<string>",
          "description": "",
          "name": "IncludedProperties",
          "isRequired": false
        }
      },
      "filePath": "/Components/Feedback/RDetailModal.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RTimeline": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RTimeline",
      "description": "",
      "parameters": {
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "LoadingItemCount": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "3",
          "type": "int",
          "description": "Number of skeleton items to show when loading",
          "name": "LoadingItemCount",
          "isRequired": true
        },
        "Compact": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether timeline is compact",
          "name": "Compact",
          "isRequired": true
        },
        "ShowRelativeTime": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Whether to show relative times (e.g., \"2 hours ago\")",
          "name": "ShowRelativeTime",
          "isRequired": true
        },
        "Variant": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "TimelineVariant.Default",
          "type": "TimelineVariant",
          "description": "Timeline variant",
          "name": "Variant",
          "isRequired": false
        },
        "Items": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "new()",
          "type": "List<TimelineItem>",
          "description": "Timeline items to display",
          "name": "Items",
          "isRequired": false
        },
        "Orientation": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"vertical\"",
          "type": "string",
          "description": "Timeline orientation",
          "name": "Orientation",
          "isRequired": false
        },
        "Loading": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether timeline is loading",
          "name": "Loading",
          "isRequired": true
        },
        "DateFormat": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"MMM dd, yyyy HH:mm\"",
          "type": "string",
          "description": "Date format for timestamps",
          "name": "DateFormat",
          "isRequired": false
        }
      },
      "filePath": "/Components/Display/RTimeline.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RSwitcher": {
      "commonUse": "tab switching, view toggles, option selection, filters",
      "complexity": "Intermediate",
      "patterns": {
        "compact-switcher": "Items=\"@items\" Variant=\"SwitcherVariant.Compact\" Size=\"SwitcherSize.Small\"",
        "pill-switcher": "Items=\"@options\" Variant=\"SwitcherVariant.Pills\"",
        "button-group": "Items=\"@actions\" Variant=\"SwitcherVariant.Buttons\"",
        "tab-switcher": "Items=\"@tabItems\" ShowLabels=\"true\" Variant=\"SwitcherVariant.Tabs\""
      },
      "category": "Form",
      "name": "RSwitcher",
      "description": "Professional switcher component for toggling between multiple options",
      "parameters": {
        "Items": {
          "aiHint": "Collection of items to switch between",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "IEnumerable<TValue>",
          "description": "",
          "name": "Items",
          "isRequired": false
        },
        "ItemLoadingSelector": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "Func<TValue, bool>",
          "description": "",
          "name": "ItemLoadingSelector",
          "isRequired": false
        },
        "ShowLabels": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowLabels",
          "isRequired": true
        },
        "ItemAriaLabelSelector": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "Func<TValue, string>",
          "description": "",
          "name": "ItemAriaLabelSelector",
          "isRequired": false
        },
        "Variant": {
          "aiHint": "Visual style variant (Standard, Pills, Tabs, Buttons)",
          "suggestedValues": [],
          "defaultValue": "SwitcherVariant.Standard",
          "type": "SwitcherVariant",
          "description": "",
          "name": "Variant",
          "isRequired": false
        },
        "Size": {
          "aiHint": "Size of switcher items (Small, Medium, Large)",
          "suggestedValues": [],
          "defaultValue": "SwitcherSize.Medium",
          "type": "SwitcherSize",
          "description": "",
          "name": "Size",
          "isRequired": false
        },
        "ItemIconSelector": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "Func<TValue, string>",
          "description": "",
          "name": "ItemIconSelector",
          "isRequired": false
        },
        "SelectedValue": {
          "aiHint": "Currently selected value",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "TValue",
          "description": "",
          "name": "SelectedValue",
          "isRequired": false
        },
        "ShowActiveIndicator": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "false",
          "type": "bool",
          "description": "",
          "name": "ShowActiveIndicator",
          "isRequired": true
        },
        "ItemDisabledSelector": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "Func<TValue, bool>",
          "description": "",
          "name": "ItemDisabledSelector",
          "isRequired": false
        },
        "ItemLabelSelector": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "Func<TValue, string>",
          "description": "",
          "name": "ItemLabelSelector",
          "isRequired": false
        },
        "SelectedValueChanged": {
          "aiHint": "Callback when selection changes",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<TValue>",
          "description": "",
          "name": "SelectedValueChanged",
          "isRequired": false
        },
        "AdditionalClass": {
          "aiHint": "Additional CSS classes",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "AdditionalClass",
          "isRequired": false
        },
        "Direction": {
          "aiHint": "Layout direction (Horizontal, Vertical)",
          "suggestedValues": [],
          "defaultValue": "SwitcherDirection.Horizontal",
          "type": "SwitcherDirection",
          "description": "",
          "name": "Direction",
          "isRequired": false
        },
        "ItemTitleSelector": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "Func<TValue, string>",
          "description": "",
          "name": "ItemTitleSelector",
          "isRequired": false
        }
      },
      "filePath": "/Components/Form/RSwitcher.razor",
      "aiPrompt": "Create a switcher for selecting between multiple options or states",
      "avoidUsage": "Don't use for simple on/off toggles - use checkbox instead"
    },
    "RAppShell": {
      "commonUse": "main app layout, admin dashboards, enterprise applications, SaaS platforms",
      "complexity": "Complex",
      "patterns": {
        "responsive-shell": "Auto-responsive sidebar and mobile-friendly behavior",
        "dashboard-layout": "NavigationItems + CurrentUser for admin dashboards",
        "full-enterprise": "All parameters for complete enterprise application",
        "zero-config": "Title only for minimal app setup"
      },
      "category": "Layout",
      "name": "RAppShell",
      "description": "Complete application shell with header, sidebar, navigation, search, and theme support. Zero-config setup for enterprise Blazor applications with professional styling and full responsiveness.",
      "parameters": {
        "ShowBreadcrumbs": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "false",
          "type": "bool",
          "description": "Show/hide breadcrumbs",
          "name": "ShowBreadcrumbs",
          "isRequired": true
        },
        "SearchCollapsible": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "false",
          "type": "bool",
          "description": "Make search collapsible on the right side",
          "name": "SearchCollapsible",
          "isRequired": true
        },
        "UserMenuClicked": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<AppUser>",
          "description": "User menu clicked callback",
          "name": "UserMenuClicked",
          "isRequired": false
        },
        "Navigation": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Custom navigation content",
          "name": "Navigation",
          "isRequired": false
        },
        "SidebarCollapsedChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<bool>",
          "description": "Sidebar state changed callback",
          "name": "SidebarCollapsedChanged",
          "isRequired": false
        },
        "UserPermissions": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string[]",
          "description": "User permissions for nav filtering",
          "name": "UserPermissions",
          "isRequired": false
        },
        "PageSubtitle": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Page subtitle for header",
          "name": "PageSubtitle",
          "isRequired": false
        },
        "ShowSidebarToggle": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Show/hide sidebar toggle button",
          "name": "ShowSidebarToggle",
          "isRequired": true
        },
        "HeaderRight": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Right side header content",
          "name": "HeaderRight",
          "isRequired": false
        },
        "NotificationCount": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "int",
          "description": "Notification count for badge",
          "name": "NotificationCount",
          "isRequired": true
        },
        "Logo": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Logo image source",
          "name": "Logo",
          "isRequired": false
        },
        "SearchChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<string>",
          "description": "Search query changed callback",
          "name": "SearchChanged",
          "isRequired": false
        },
        "ContentCentered": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Whether content should be centered when max width is applied",
          "name": "ContentCentered",
          "isRequired": true
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Main content",
          "name": "ChildContent",
          "isRequired": false
        },
        "Breadcrumbs": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "List<AppNavItem>",
          "description": "Breadcrumb items",
          "name": "Breadcrumbs",
          "isRequired": false
        },
        "PageTitle": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"Dashboard\"",
          "type": "string",
          "description": "Page title for header",
          "name": "PageTitle",
          "isRequired": false
        },
        "ContentMaxWidth": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "null",
          "type": "string",
          "description": "Content maximum width (e.g., \"1200px\", \"90%\"). Default is no constraint.",
          "name": "ContentMaxWidth",
          "isRequired": false
        },
        "Title": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"RR.Blazor App\"",
          "type": "string",
          "description": "App title (required)",
          "name": "Title",
          "isRequired": false
        },
        "ShowUserMenu": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Show/hide user menu",
          "name": "ShowUserMenu",
          "isRequired": true
        },
        "ShowToasts": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Show/hide toast container",
          "name": "ShowToasts",
          "isRequired": true
        },
        "ShowQuickActions": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "false",
          "type": "bool",
          "description": "Show/hide quick actions",
          "name": "ShowQuickActions",
          "isRequired": true
        },
        "StatusBar": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Status bar content",
          "name": "StatusBar",
          "isRequired": false
        },
        "ShowSearch": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Show/hide search functionality",
          "name": "ShowSearch",
          "isRequired": true
        },
        "HeaderLeft": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Left side header content",
          "name": "HeaderLeft",
          "isRequired": false
        },
        "ShowStatusBar": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "false",
          "type": "bool",
          "description": "Show/hide status bar",
          "name": "ShowStatusBar",
          "isRequired": true
        },
        "SidebarFooter": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Sidebar footer content",
          "name": "SidebarFooter",
          "isRequired": false
        },
        "Theme": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"system\"",
          "type": "string",
          "description": "Theme mode (light/dark/system)",
          "name": "Theme",
          "isRequired": false
        },
        "ShowThemeToggle": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Show/hide theme toggle",
          "name": "ShowThemeToggle",
          "isRequired": true
        },
        "ShowSidebar": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Show/hide sidebar",
          "name": "ShowSidebar",
          "isRequired": true
        },
        "QuickActionsFloating": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Floating quick actions",
          "name": "QuickActionsFloating",
          "isRequired": false
        },
        "NavigationItems": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "List<AppNavItem>",
          "description": "Navigation items (smart default)",
          "name": "NavigationItems",
          "isRequired": false
        },
        "CurrentUser": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "AppUser",
          "description": "Current user for user menu and permissions",
          "name": "CurrentUser",
          "isRequired": false
        },
        "QuickActions": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Quick actions in header",
          "name": "QuickActions",
          "isRequired": false
        },
        "UserMenu": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "User menu dropdown content",
          "name": "UserMenu",
          "isRequired": false
        },
        "ShowNotifications": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Show/hide notifications button",
          "name": "ShowNotifications",
          "isRequired": true
        },
        "ThemeChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<string>",
          "description": "Theme changed callback",
          "name": "ThemeChanged",
          "isRequired": false
        },
        "ShowHeader": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Show/hide header",
          "name": "ShowHeader",
          "isRequired": true
        },
        "NotificationsClicked": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "Notification button clicked callback",
          "name": "NotificationsClicked",
          "isRequired": false
        },
        "LogoContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Custom logo content",
          "name": "LogoContent",
          "isRequired": false
        }
      },
      "filePath": "/Components/Layout/RAppShell.razor",
      "aiPrompt": "Create complete app layout with header and sidebar",
      "avoidUsage": "Don't use for simple pages without navigation. Use RSection for content organization instead."
    },
    "RSection": {
      "commonUse": "page sections, content organization, collapsible panels, form groups",
      "complexity": "Simple",
      "patterns": {
        "basic-section": "Title and ChildContent for simple content sections",
        "collapsible-section": "Collapsible=\"true\" for expandable content panels",
        "icon-section": "Icon and Title for branded section headers",
        "action-section": "TitleContent for sections with header actions"
      },
      "category": "Layout",
      "name": "RSection",
      "description": "Professional content section component with header, collapsible content, and footer areas. Ideal for organizing page content with consistent styling and optional interactive features.",
      "parameters": {
        "TitleContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Title content area",
          "name": "TitleContent",
          "isRequired": false
        },
        "SectionId": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "Guid.NewGuid().ToString(\"N\")[..8]",
          "type": "string",
          "description": "Section identifier",
          "name": "SectionId",
          "isRequired": false
        },
        "OnToggleCollapse": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<bool>",
          "description": "Collapse/expand event handler",
          "name": "OnToggleCollapse",
          "isRequired": false
        },
        "NoFooterBorder": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether to remove footer border",
          "name": "NoFooterBorder",
          "isRequired": true
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "CollapsedChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<bool>",
          "description": "Callback when collapsed state changes",
          "name": "CollapsedChanged",
          "isRequired": false
        },
        "Title": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Section title",
          "name": "Title",
          "isRequired": false
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Main content",
          "name": "ChildContent",
          "isRequired": false
        },
        "Icon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Icon for header",
          "name": "Icon",
          "isRequired": false
        },
        "NoHeaderBorder": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether to remove header border",
          "name": "NoHeaderBorder",
          "isRequired": true
        },
        "NoPadding": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether to remove content padding",
          "name": "NoPadding",
          "isRequired": true
        },
        "Subtitle": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Section subtitle",
          "name": "Subtitle",
          "isRequired": false
        },
        "OnClick": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<MouseEventArgs>",
          "description": "Section click event handler",
          "name": "OnClick",
          "isRequired": false
        },
        "FooterContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Footer content area",
          "name": "FooterContent",
          "isRequired": false
        },
        "Collapsible": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether section is collapsible",
          "name": "Collapsible",
          "isRequired": true
        },
        "Collapsed": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether section is collapsed (if collapsible)",
          "name": "Collapsed",
          "isRequired": true
        }
      },
      "filePath": "/Components/Layout/RSection.razor",
      "aiPrompt": "Create content section with header and body",
      "avoidUsage": "Don't use for main app layout - use RAppShell instead. Avoid for simple content without headers."
    },
    "RToastContainer": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RToastContainer",
      "description": "",
      "parameters": {},
      "filePath": "/Components/Feedback/RToastContainer.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RGrid": {
      "commonUse": "Dashboard grids, stats cards, responsive layouts, card containers",
      "complexity": "Simple",
      "patterns": {
        "stats-grid": "<RGrid Type=\"GridType.Stats\" Variant=\"GridVariant.Compact\">\r\n    <RCard Title=\"Metric 1\" />\r\n    <RCard Title=\"Metric 2\" />\r\n</RGrid>"
      },
      "category": "Layout",
      "name": "RGrid",
      "description": "Professional responsive grid component with RR.Blazor patterns",
      "parameters": {
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment?",
          "description": "",
          "name": "ChildContent",
          "isRequired": false
        },
        "MinColumnWidth": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "int?",
          "description": "",
          "name": "MinColumnWidth",
          "isRequired": false
        },
        "Variant": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "GridVariant.Default",
          "type": "GridVariant",
          "description": "",
          "name": "Variant",
          "isRequired": false
        },
        "Type": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "GridType.Auto",
          "type": "GridType",
          "description": "",
          "name": "Type",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string?",
          "description": "",
          "name": "Class",
          "isRequired": false
        },
        "Gap": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string?",
          "description": "",
          "name": "Gap",
          "isRequired": false
        }
      },
      "filePath": "/Components/Layout/RGrid.razor",
      "aiPrompt": "grid, layout, responsive, stats, cards",
      "avoidUsage": ""
    },
    "RSelectModal": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RSelectModal",
      "description": "",
      "parameters": {
        "ItemTemplate": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment<T>",
          "description": "",
          "name": "ItemTemplate",
          "isRequired": false
        },
        "ShowItemActions": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "ShowItemActions",
          "isRequired": true
        },
        "OnDataChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<T>",
          "description": "",
          "name": "OnDataChanged",
          "isRequired": false
        },
        "ShowSelectedItems": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowSelectedItems",
          "isRequired": true
        },
        "SearchPlaceholder": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"Search items...\"",
          "type": "string",
          "description": "",
          "name": "SearchPlaceholder",
          "isRequired": false
        },
        "OnSelectionChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<IEnumerable<T>>",
          "description": "",
          "name": "OnSelectionChanged",
          "isRequired": false
        },
        "ItemActions": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment<T>",
          "description": "",
          "name": "ItemActions",
          "isRequired": false
        },
        "Items": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "new List<T>()",
          "type": "IEnumerable<T>",
          "description": "",
          "name": "Items",
          "isRequired": false
        },
        "SubTextSelector": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "Func<T, string>",
          "description": "",
          "name": "SubTextSelector",
          "isRequired": false
        },
        "OnItemSelected": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<T>",
          "description": "",
          "name": "OnItemSelected",
          "isRequired": false
        },
        "AllowMultiple": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "AllowMultiple",
          "isRequired": true
        },
        "DisplaySelector": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "item => item?.ToString() ?? \"\"",
          "type": "Func<T, string>",
          "description": "",
          "name": "DisplaySelector",
          "isRequired": false
        },
        "SearchFilter": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "Func<T, string, bool>",
          "description": "",
          "name": "SearchFilter",
          "isRequired": false
        }
      },
      "filePath": "/Components/Feedback/RSelectModal.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RSummaryItem": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RSummaryItem",
      "description": "",
      "parameters": {
        "Icon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Material icon name",
          "name": "Icon",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Custom content for the value area",
          "name": "ChildContent",
          "isRequired": false
        },
        "Emphasis": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "SummaryItemEmphasis.Normal",
          "type": "SummaryItemEmphasis",
          "description": "Value emphasis style",
          "name": "Emphasis",
          "isRequired": false
        },
        "Label": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"\"",
          "type": "string",
          "description": "Label text for the summary item",
          "name": "Label",
          "isRequired": false
        },
        "Value": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Value text for the summary item",
          "name": "Value",
          "isRequired": false
        },
        "ShowSeparator": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether to show separator line",
          "name": "ShowSeparator",
          "isRequired": true
        },
        "Layout": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "SummaryItemLayout.Horizontal",
          "type": "SummaryItemLayout",
          "description": "Layout variant",
          "name": "Layout",
          "isRequired": false
        },
        "Size": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "SummaryItemSize.Medium",
          "type": "SummaryItemSize",
          "description": "Size variant",
          "name": "Size",
          "isRequired": false
        }
      },
      "filePath": "/Components/Display/RSummaryItem.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RBreadcrumbs": {
      "commonUse": "page navigation, hierarchy display, user location indication",
      "complexity": "Simple",
      "patterns": {
        "responsive-breadcrumbs": "CollapsibleOnMobile for mobile-friendly navigation",
        "custom-separator": "Separator or SeparatorIcon for custom dividers",
        "basic-breadcrumbs": "Items list with BreadcrumbItem objects",
        "icon-breadcrumbs": "BreadcrumbItem with Icon property for visual hierarchy"
      },
      "category": "Navigation",
      "name": "RBreadcrumbs",
      "description": "Professional breadcrumb navigation component for showing page hierarchy and navigation paths. Supports icons, custom separators, responsive collapsing, and accessibility features.",
      "parameters": {
        "CollapsibleOnMobile": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Whether to collapse items on mobile",
          "name": "CollapsibleOnMobile",
          "isRequired": true
        },
        "MaxVisibleItems": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "0",
          "type": "int",
          "description": "Max items to show before collapsing",
          "name": "MaxVisibleItems",
          "isRequired": true
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Custom content",
          "name": "ChildContent",
          "isRequired": false
        },
        "Items": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "List<BreadcrumbItem>",
          "description": "Breadcrumb items",
          "name": "Items",
          "isRequired": false
        },
        "SeparatorIcon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Custom separator icon",
          "name": "SeparatorIcon",
          "isRequired": false
        },
        "Size": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "BreadcrumbSize.Default",
          "type": "BreadcrumbSize",
          "description": "Size variant",
          "name": "Size",
          "isRequired": false
        },
        "Separator": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Custom separator text (default: chevron icon)",
          "name": "Separator",
          "isRequired": false
        }
      },
      "filePath": "/Components/Navigation/RBreadcrumbs.razor",
      "aiPrompt": "Create breadcrumb navigation for page hierarchy",
      "avoidUsage": "Don't use for primary navigation - use RNavMenu instead. Avoid for single-level pages."
    },
    "RAvatar": {
      "commonUse": "user profiles, team members, contact lists, navigation headers",
      "complexity": "Simple",
      "patterns": {
        "status-avatar": "ShowStatus=\"true\" Status=\"AvatarStatus.Online\" for presence indicators",
        "initials-avatar": "Text=\"JD\" Variant=\"AvatarVariant.Primary\" for text--based avatars",
        "clickable-avatar": "IsClickable=\"true\" OnClick=\"HandleClick\" for interactive avatars",
        "user-avatar": "ImageSrc=\"/avatar.jpg\" Alt=\"User Name\" for profile pictures",
        "notification-avatar": "ShowBadge=\"true\" BadgeCount=\"3\" for unread counts"
      },
      "category": "Core",
      "name": "RAvatar",
      "description": "Professional avatar component for user representation with status indicators and interactive features. Supports images, initials, icons, status badges, and notification counts with responsive sizing.",
      "parameters": {
        "Status": {
          "aiHint": "Online for active, Away for inactive, Busy for do-not-disturb, Offline for unavailable",
          "suggestedValues": [
            "Online",
            "Away",
            "Busy",
            "Offline"
          ],
          "defaultValue": "AvatarStatus.None",
          "type": "AvatarStatus",
          "description": "Status state for presence indicator",
          "name": "Status",
          "isRequired": false
        },
        "ImageSrc": {
          "aiHint": "Use high-quality square images. Falls back to text/icon if not provided",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Image source URL for profile picture",
          "name": "ImageSrc",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "ShowBadge": {
          "aiHint": "Use for unread message counts, notification indicators, pending items",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether to show notification badge with count",
          "name": "ShowBadge",
          "isRequired": true
        },
        "BadgeCount": {
          "aiHint": "Shows actual count, displays 99+ for values over 99",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "int",
          "description": "Badge count number displayed in notification badge",
          "name": "BadgeCount",
          "isRequired": true
        },
        "Size": {
          "aiHint": "Medium is default, Large for prominent display, Small for compact layouts",
          "suggestedValues": [
            "ExtraSmall",
            "Small",
            "Medium",
            "Large",
            "ExtraLarge"
          ],
          "defaultValue": "AvatarSize.Medium",
          "type": "AvatarSize",
          "description": "Avatar size variant - determines dimensions and icon/text sizing",
          "name": "Size",
          "isRequired": false
        },
        "IsClickable": {
          "aiHint": "Set to true for interactive avatars that open profiles or menus",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether avatar is clickable - adds hover effects and cursor pointer",
          "name": "IsClickable",
          "isRequired": true
        },
        "Icon": {
          "aiHint": "Common icons: person, account_circle, face, group. Defaults to person",
          "suggestedValues": [
            "person",
            "account_circle",
            "face",
            "group"
          ],
          "defaultValue": null,
          "type": "string",
          "description": "Material icon name as fallback when no image or text provided",
          "name": "Icon",
          "isRequired": false
        },
        "ShowStatus": {
          "aiHint": "Use for presence indicators in chat, team lists, user directories",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether to show status indicator dot",
          "name": "ShowStatus",
          "isRequired": true
        },
        "Text": {
          "aiHint": "Use 1-2 character initials like JD, AB. Automatically uppercase",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Text content (typically initials) when no image is available",
          "name": "Text",
          "isRequired": false
        },
        "OnClick": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<MouseEventArgs>",
          "description": "Click event handler",
          "name": "OnClick",
          "isRequired": false
        },
        "Variant": {
          "aiHint": "Default for neutral, Primary for branded, Success/Warning/Error for status",
          "suggestedValues": [
            "Default",
            "Primary",
            "Success",
            "Warning",
            "Error",
            "Gradient"
          ],
          "defaultValue": "AvatarVariant.Default",
          "type": "AvatarVariant",
          "description": "Avatar variant style - determines color scheme and background",
          "name": "Variant",
          "isRequired": false
        },
        "Alt": {
          "aiHint": "Use descriptive text like 'John Doe profile picture' for screen readers",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Image alt text for accessibility",
          "name": "Alt",
          "isRequired": false
        }
      },
      "filePath": "/Components/Core/RAvatar.razor",
      "aiPrompt": "Create a professional avatar for user representation",
      "avoidUsage": "Don't use for decorative icons - use Icon component instead. Avoid for non-user content."
    },
    "RInfoItem": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RInfoItem",
      "description": "",
      "parameters": {
        "Icon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Material icon name",
          "name": "Icon",
          "isRequired": false
        },
        "Required": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether this field is required",
          "name": "Required",
          "isRequired": true
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Custom content for the value area",
          "name": "ChildContent",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "EmphasizeValue": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether to emphasize the value",
          "name": "EmphasizeValue",
          "isRequired": true
        },
        "Label": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"\"",
          "type": "string",
          "description": "Label text for the info item",
          "name": "Label",
          "isRequired": false
        },
        "Value": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Value text for the info item",
          "name": "Value",
          "isRequired": false
        },
        "Layout": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "InfoItemLayout.Vertical",
          "type": "InfoItemLayout",
          "description": "Layout variant",
          "name": "Layout",
          "isRequired": false
        },
        "Size": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "InfoItemSize.Medium",
          "type": "InfoItemSize",
          "description": "Size variant",
          "name": "Size",
          "isRequired": false
        }
      },
      "filePath": "/Components/Display/RInfoItem.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RList": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RList",
      "description": "",
      "parameters": {
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Child content",
          "name": "ChildContent",
          "isRequired": false
        },
        "Divided": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether to show dividers between items",
          "name": "Divided",
          "isRequired": true
        },
        "Variant": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "ListVariant.Default",
          "type": "ListVariant",
          "description": "List style variant",
          "name": "Variant",
          "isRequired": false
        },
        "Title": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "List title (for menu variant)",
          "name": "Title",
          "isRequired": false
        },
        "Layout": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "ListLayout.Vertical",
          "type": "ListLayout",
          "description": "List layout variant",
          "name": "Layout",
          "isRequired": false
        },
        "Size": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "ListSize.Default",
          "type": "ListSize",
          "description": "List size variant",
          "name": "Size",
          "isRequired": false
        }
      },
      "filePath": "/Components/Data/RList.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RAccordionItem": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RAccordionItem",
      "description": "",
      "parameters": {
        "Icon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Icon to display in header",
          "name": "Icon",
          "isRequired": false
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Item content",
          "name": "ChildContent",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "Id": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "Guid.NewGuid().ToString()",
          "type": "string",
          "description": "Unique identifier for the item",
          "name": "Id",
          "isRequired": false
        },
        "HeaderContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Additional header content",
          "name": "HeaderContent",
          "isRequired": false
        },
        "Title": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Accordion item title",
          "name": "Title",
          "isRequired": false
        },
        "Subtitle": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Accordion item subtitle",
          "name": "Subtitle",
          "isRequired": false
        },
        "Disabled": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether the item is disabled",
          "name": "Disabled",
          "isRequired": true
        },
        "Expanded": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether the item is expanded initially",
          "name": "Expanded",
          "isRequired": true
        }
      },
      "filePath": "/Components/Display/RAccordionItem.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RFileUpload": {
      "commonUse": "document upload, image upload, file attachments, media upload",
      "complexity": "Complex",
      "patterns": {
        "button-mode": "DisplayMode=\"RFileUploadDisplayMode.Button\" ButtonText=\"Upload Files\"",
        "image-upload": "AllowedTypes=\"new[] { \\\".jpg\\\", \\\".png\\\" }\" GenerateThumbnails=\"true\"",
        "document-upload": "AllowedTypes=\"new[] { \\\".pdf\\\", \\\".docx\\\" }\" MaxSize=\"10MB\"",
        "inline-mode": "DisplayMode=\"RFileUploadDisplayMode.Inline\" ShowPreview=\"false\"",
        "multiple-files": "Multiple=\"true\" MaxFiles=\"5\" ShowPreview=\"true\""
      },
      "category": "Form",
      "name": "RFileUpload",
      "description": "Professional file upload component with drag-drop, validation, and preview",
      "parameters": {
        "HelpText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Help text below component",
          "name": "HelpText",
          "isRequired": false
        },
        "AllowedTypes": {
          "aiHint": "Array of allowed file extensions or MIME types",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string[]",
          "description": "Allowed file types (extensions like .pdf, .jpg or MIME types)",
          "name": "AllowedTypes",
          "isRequired": false
        },
        "AllowDuplicates": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Allow duplicate files",
          "name": "AllowDuplicates",
          "isRequired": true
        },
        "GenerateThumbnails": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Generate thumbnails for images",
          "name": "GenerateThumbnails",
          "isRequired": true
        },
        "UploadText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Upload area title text",
          "name": "UploadText",
          "isRequired": false
        },
        "Files": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "new()",
          "type": "List<RFileInfo>",
          "description": "Selected files collection",
          "name": "Files",
          "isRequired": false
        },
        "DragDrop": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Enable drag and drop",
          "name": "DragDrop",
          "isRequired": true
        },
        "BrowseButtonText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"Browse Files\"",
          "type": "string",
          "description": "Browse button text in drop zone",
          "name": "BrowseButtonText",
          "isRequired": false
        },
        "Multiple": {
          "aiHint": "Allow selecting multiple files at once",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Allow multiple file selection",
          "name": "Multiple",
          "isRequired": true
        },
        "ButtonText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"Choose Files\"",
          "type": "string",
          "description": "Button text for button mode",
          "name": "ButtonText",
          "isRequired": false
        },
        "ShowPreview": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Show file preview/list",
          "name": "ShowPreview",
          "isRequired": true
        },
        "MaxFiles": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "10",
          "type": "int",
          "description": "Maximum number of files",
          "name": "MaxFiles",
          "isRequired": true
        },
        "IconPosition": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "IconPosition.Start",
          "type": "IconPosition",
          "description": "Position of the icon",
          "name": "IconPosition",
          "isRequired": false
        },
        "OnFilesSelected": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<RFileUploadResult>",
          "description": "Called when files are selected",
          "name": "OnFilesSelected",
          "isRequired": false
        },
        "Icon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Icon for the component",
          "name": "Icon",
          "isRequired": false
        },
        "Disabled": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether component is disabled",
          "name": "Disabled",
          "isRequired": true
        },
        "DisplayMode": {
          "aiHint": "Visual style mode (DropZone, Button, Inline, Minimal)",
          "suggestedValues": [],
          "defaultValue": "RFileUploadDisplayMode.DropZone",
          "type": "RFileUploadDisplayMode",
          "description": "Display mode for the upload component",
          "name": "DisplayMode",
          "isRequired": false
        },
        "ComponentId": {
          "aiHint": "Unique identifier for the file upload component",
          "suggestedValues": [],
          "defaultValue": "$\"file-upload-{Guid.NewGuid().ToString(\"N\")[..8]}\"",
          "type": "string",
          "description": "Component identifier",
          "name": "ComponentId",
          "isRequired": false
        },
        "InputId": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "$\"file-input-{Guid.NewGuid().ToString(\"N\")[..8]}\"",
          "type": "string",
          "description": "Input element identifier",
          "name": "InputId",
          "isRequired": false
        },
        "AllowRemove": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Allow file removal",
          "name": "AllowRemove",
          "isRequired": true
        },
        "ShowBrowseButton": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Show browse button in drop zone",
          "name": "ShowBrowseButton",
          "isRequired": true
        },
        "MaxSize": {
          "aiHint": "Maximum file size in bytes",
          "suggestedValues": [],
          "defaultValue": "10 * 1024 * 1024",
          "type": "long",
          "description": "Maximum file size in bytes",
          "name": "MaxSize",
          "isRequired": false
        },
        "StartIcon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Start icon for button mode (deprecated - use Icon + IconPosition)",
          "name": "StartIcon",
          "isRequired": false
        },
        "ShowProgress": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Show upload progress",
          "name": "ShowProgress",
          "isRequired": true
        },
        "UploadIcon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"cloud_upload\"",
          "type": "string",
          "description": "Icon for upload area",
          "name": "UploadIcon",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "OnUploadComplete": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<RFileUploadResult>",
          "description": "Called when upload completes",
          "name": "OnUploadComplete",
          "isRequired": false
        },
        "HintText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Upload area hint text",
          "name": "HintText",
          "isRequired": false
        },
        "OnProgressChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<(string FileId, double Progress)>",
          "description": "Called when upload progress changes",
          "name": "OnProgressChanged",
          "isRequired": false
        },
        "FilesChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<List<RFileInfo>>",
          "description": "Callback when files change",
          "name": "FilesChanged",
          "isRequired": false
        },
        "OnFileRemoved": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<string>",
          "description": "Called when file is removed",
          "name": "OnFileRemoved",
          "isRequired": false
        }
      },
      "filePath": "/Components/Form/RFileUpload.razor",
      "aiPrompt": "Create a file upload component with drag-drop and file validation",
      "avoidUsage": "Don't use for simple text input or when files are not needed"
    },
    "RThemeSwitcher": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RThemeSwitcher",
      "description": "",
      "parameters": {
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"\"",
          "type": "string",
          "description": "",
          "name": "Class",
          "isRequired": false
        }
      },
      "filePath": "/Components/Core/RThemeSwitcher.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RMessageModal": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RMessageModal",
      "description": "",
      "parameters": {
        "Message": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"\"",
          "type": "string",
          "description": "",
          "name": "Message",
          "isRequired": false
        },
        "Icon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"info\"",
          "type": "string",
          "description": "",
          "name": "Icon",
          "isRequired": false
        },
        "Variant": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "ModalVariant.Info",
          "type": "ModalVariant",
          "description": "",
          "name": "Variant",
          "isRequired": false
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "ChildContent",
          "isRequired": false
        }
      },
      "filePath": "/Components/Feedback/RMessageModal.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RSectionDivider": {
      "commonUse": "page sections, form organization, content separation, feature grouping",
      "complexity": "Simple",
      "patterns": {
        "titled-section": "Title=\"User Settings\" Icon=\"settings\" for labeled content sections",
        "prominent-section": "Size=\"SectionDividerSize.Large\" Variant=\"SectionDividerVariant.Primary\" for important sections",
        "centered-section": "Alignment=\"SectionDividerAlignment.Center\" for balanced layouts",
        "compact-divider": "Size=\"SectionDividerSize.Compact\" for tight layouts"
      },
      "category": "Core",
      "name": "RSectionDivider",
      "description": "Professional section divider component for organizing content areas with titles, icons, and visual separation. Supports multiple sizes, alignments, and semantic variants with enterprise-grade styling.",
      "parameters": {
        "Icon": {
          "aiHint": "Common icons: settings, person, security, payment, work, home",
          "suggestedValues": [
            "settings",
            "person",
            "security",
            "payment",
            "work",
            "home",
            "info"
          ],
          "defaultValue": null,
          "type": "string",
          "description": "Material icon name displayed alongside the section title",
          "name": "Icon",
          "isRequired": false
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Child content for custom section content",
          "name": "ChildContent",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "ShowLine": {
          "aiHint": "True for visual separation, false for text-only headers",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Whether to show the dividing line extending from the content",
          "name": "ShowLine",
          "isRequired": true
        },
        "Variant": {
          "aiHint": "Primary for important sections, Success for completed, Warning for attention",
          "suggestedValues": [
            "Default",
            "Primary",
            "Secondary",
            "Success",
            "Warning",
            "Error",
            "Info"
          ],
          "defaultValue": "SectionDividerVariant.Default",
          "type": "SectionDividerVariant",
          "description": "Section divider variant - determines color scheme and semantic meaning",
          "name": "Variant",
          "isRequired": false
        },
        "Alignment": {
          "aiHint": "Left for standard sections, Center for balanced layouts, Right for special cases",
          "suggestedValues": [
            "Left",
            "Center",
            "Right"
          ],
          "defaultValue": "SectionDividerAlignment.Left",
          "type": "SectionDividerAlignment",
          "description": "Section divider alignment - controls content positioning and line placement",
          "name": "Alignment",
          "isRequired": false
        },
        "Title": {
          "aiHint": "Use descriptive section names like Personal Information, Security Settings",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Section title - main heading for the divided content area",
          "name": "Title",
          "isRequired": false
        },
        "Subtitle": {
          "aiHint": "Use for helpful descriptions like Update your profile information",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Section subtitle - additional context or description for the section",
          "name": "Subtitle",
          "isRequired": false
        },
        "Size": {
          "aiHint": "Default for most sections, Compact for tight layouts, Large for prominence",
          "suggestedValues": [
            "Compact",
            "Default",
            "Large"
          ],
          "defaultValue": "SectionDividerSize.Default",
          "type": "SectionDividerSize",
          "description": "Section divider size - affects spacing, text size, and icon dimensions",
          "name": "Size",
          "isRequired": false
        }
      },
      "filePath": "/Components/Core/RSectionDivider.razor",
      "aiPrompt": "Create a professional section divider for content organization",
      "avoidUsage": "Don't overuse - only for logical section breaks. Avoid for simple line separation."
    },
    "RFormSection": {
      "commonUse": "form organization, grouped fields, collapsible sections, multi-step forms",
      "complexity": "Intermediate",
      "patterns": {
        "basic-section": "Title=\"Personal Information\" FieldColumns=\"2\"",
        "collapsible-section": "Title=\"Advanced Settings\" Collapsible=\"true\"",
        "elevated-section": "Title=\"Important Details\" Elevation=\"SectionElevation.Medium\"",
        "icon-section": "Title=\"Contact Info\" Icon=\"contact_mail\""
      },
      "category": "Form",
      "name": "RFormSection",
      "description": "Professional form section container with collapsible header and grid layout",
      "parameters": {
        "Icon": {
          "aiHint": "Icon displayed next to section title",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string?",
          "description": "",
          "name": "Icon",
          "isRequired": false
        },
        "Collapsible": {
          "aiHint": "Allow section to be collapsed/expanded",
          "suggestedValues": [],
          "defaultValue": "false",
          "type": "bool",
          "description": "",
          "name": "Collapsible",
          "isRequired": true
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment?",
          "description": "",
          "name": "ChildContent",
          "isRequired": false
        },
        "ExpandedChanged": {
          "aiHint": "Callback when expanded state changes",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<bool>",
          "description": "",
          "name": "ExpandedChanged",
          "isRequired": false
        },
        "Description": {
          "aiHint": "Section description or instructions",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string?",
          "description": "",
          "name": "Description",
          "isRequired": false
        },
        "Title": {
          "aiHint": "Section title displayed in header",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string?",
          "description": "",
          "name": "Title",
          "isRequired": false
        },
        "ShowHeader": {
          "aiHint": "Whether to show the section header",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowHeader",
          "isRequired": true
        },
        "FieldColumns": {
          "aiHint": "Number of columns for field layout (1-4)",
          "suggestedValues": [],
          "defaultValue": "1",
          "type": "int",
          "description": "",
          "name": "FieldColumns",
          "isRequired": true
        },
        "HeaderActions": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment?",
          "description": "",
          "name": "HeaderActions",
          "isRequired": false
        },
        "Elevation": {
          "aiHint": "Visual elevation level (None, Subtle, Medium, High)",
          "suggestedValues": [],
          "defaultValue": "SectionElevation.None",
          "type": "SectionElevation",
          "description": "",
          "name": "Elevation",
          "isRequired": false
        },
        "Expanded": {
          "aiHint": "Whether section is currently expanded",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "Expanded",
          "isRequired": true
        },
        "CssClass": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string?",
          "description": "",
          "name": "CssClass",
          "isRequired": false
        }
      },
      "filePath": "/Components/Form/RFormSection.razor",
      "aiPrompt": "Create a form section with header and organized field layout",
      "avoidUsage": "Don't use for single fields or when no grouping is needed"
    },
    "RPreviewModal": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RPreviewModal",
      "description": "",
      "parameters": {
        "AllowCopy": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "AllowCopy",
          "isRequired": true
        },
        "Content": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"\"",
          "type": "string",
          "description": "",
          "name": "Content",
          "isRequired": false
        },
        "OnDownload": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "",
          "name": "OnDownload",
          "isRequired": false
        },
        "ShowWordCount": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowWordCount",
          "isRequired": true
        },
        "AllowDownload": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "AllowDownload",
          "isRequired": true
        },
        "ContentType": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"text/plain\"",
          "type": "string",
          "description": "",
          "name": "ContentType",
          "isRequired": false
        },
        "OnCopy": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "",
          "name": "OnCopy",
          "isRequired": false
        },
        "FileName": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"preview\"",
          "type": "string",
          "description": "",
          "name": "FileName",
          "isRequired": false
        },
        "ShowMetadata": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowMetadata",
          "isRequired": true
        }
      },
      "filePath": "/Components/Feedback/RPreviewModal.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RChip": {
      "commonUse": "filter chips, tag lists, multi-select indicators, status tags",
      "complexity": "Simple",
      "patterns": {
        "filter-chip": "Clickable=\"true\" OnClick=\"ToggleFilter\" for interactive filters",
        "removable-chip": "Closeable=\"true\" OnClose=\"RemoveChip\" for deletable tags",
        "selected-chip": "Selected=\"true\" for active state indication"
      },
      "category": "Core",
      "name": "RChip",
      "description": "Professional chip component for tags, filters, and selections with interactive states. Supports removable chips, selection indicators, icons, and multiple variants.",
      "parameters": {
        "Icon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Icon",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Class",
          "isRequired": false
        },
        "Selected": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Selected",
          "isRequired": true
        },
        "OnClose": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "",
          "name": "OnClose",
          "isRequired": false
        },
        "Variant": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "ChipVariant.Default",
          "type": "ChipVariant",
          "description": "",
          "name": "Variant",
          "isRequired": false
        },
        "Text": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"\"",
          "type": "string",
          "description": "",
          "name": "Text",
          "isRequired": false
        },
        "IconPosition": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "IconPosition.Start",
          "type": "IconPosition",
          "description": "",
          "name": "IconPosition",
          "isRequired": false
        },
        "Closeable": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Closeable",
          "isRequired": true
        },
        "OnClick": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "",
          "name": "OnClick",
          "isRequired": false
        },
        "Disabled": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Disabled",
          "isRequired": true
        },
        "Size": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "ChipSize.Medium",
          "type": "ChipSize",
          "description": "",
          "name": "Size",
          "isRequired": false
        },
        "Clickable": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Clickable",
          "isRequired": true
        }
      },
      "filePath": "/Components/Core/RChip.razor",
      "aiPrompt": "Create a chip/tag for filters, selections, or labels",
      "avoidUsage": "Don't use for buttons - use RButton. Avoid for large content blocks."
    },
    "RDatePickerBasic": {
      "commonUse": "simple date input, forms, basic date selection",
      "complexity": "Simple",
      "patterns": {
        "required-date": "@bind-Value=\"requiredDate\" Required=\"true\" HasError=\"@(!date.HasValue)\"",
        "datetime-input": "@bind-Value=\"dateTime\" ShowTime=\"true\"",
        "basic-date": "@bind-Value=\"date\" Label=\"Select Date\"",
        "future-date": "@bind-Value=\"futureDate\" MinDate=\"@DateTime.Today\""
      },
      "category": "Form",
      "name": "RDatePickerBasic",
      "description": "Simplified HTML5 date picker for basic date input scenarios",
      "parameters": {
        "Size": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "FieldSize.Medium",
          "type": "FieldSize",
          "description": "",
          "name": "Size",
          "isRequired": false
        },
        "ValueChanged": {
          "aiHint": "Callback when date value changes",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<DateTime?>",
          "description": "",
          "name": "ValueChanged",
          "isRequired": false
        },
        "ReadOnly": {
          "aiHint": "Make the input read-only",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Start icon (deprecated - use Icon + IconPosition)",
          "name": "ReadOnly",
          "isRequired": true
        },
        "Value": {
          "aiHint": "Selected date value",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "DateTime?",
          "description": "",
          "name": "Value",
          "isRequired": false
        },
        "HelpText": {
          "aiHint": "Help text displayed below the input",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "HelpText",
          "isRequired": false
        },
        "InputId": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "Guid.NewGuid().ToString(\"N\")[..8]",
          "type": "string",
          "description": "",
          "name": "InputId",
          "isRequired": false
        },
        "OnBlur": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<FocusEventArgs>",
          "description": "",
          "name": "OnBlur",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Start icon (deprecated - use Icon + IconPosition)",
          "name": "Class",
          "isRequired": false
        },
        "Label": {
          "aiHint": "Label text displayed above the input",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Label",
          "isRequired": false
        },
        "HasError": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Start icon (deprecated - use Icon + IconPosition)",
          "name": "HasError",
          "isRequired": true
        },
        "Required": {
          "aiHint": "Mark field as required",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Start icon (deprecated - use Icon + IconPosition)",
          "name": "Required",
          "isRequired": true
        },
        "MinDate": {
          "aiHint": "Minimum selectable date",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "DateTime?",
          "description": "Start icon (deprecated - use Icon + IconPosition)",
          "name": "MinDate",
          "isRequired": false
        },
        "IconPosition": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "IconPosition.Start",
          "type": "IconPosition",
          "description": "Position of the icon",
          "name": "IconPosition",
          "isRequired": false
        },
        "Icon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Icon for the component",
          "name": "Icon",
          "isRequired": false
        },
        "ShowTime": {
          "aiHint": "Show time selection alongside date",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Start icon (deprecated - use Icon + IconPosition)",
          "name": "ShowTime",
          "isRequired": true
        },
        "Disabled": {
          "aiHint": "Disable the input field",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Start icon (deprecated - use Icon + IconPosition)",
          "name": "Disabled",
          "isRequired": true
        },
        "Placeholder": {
          "aiHint": "Placeholder text when no date selected",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Placeholder",
          "isRequired": false
        },
        "StartIcon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Start icon (deprecated - use Icon + IconPosition)",
          "name": "StartIcon",
          "isRequired": false
        },
        "OnDateSelected": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<DateTime?>",
          "description": "",
          "name": "OnDateSelected",
          "isRequired": false
        },
        "ErrorMessage": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "ErrorMessage",
          "isRequired": false
        },
        "MaxDate": {
          "aiHint": "Maximum selectable date",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "DateTime?",
          "description": "",
          "name": "MaxDate",
          "isRequired": false
        },
        "OnFocus": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<FocusEventArgs>",
          "description": "",
          "name": "OnFocus",
          "isRequired": false
        }
      },
      "filePath": "/Components/Form/RDatePickerBasic.razor",
      "aiPrompt": "Create a simple HTML5 date picker input",
      "avoidUsage": "Don't use for complex date ranges or when calendar popup is needed"
    },
    "RModalProvider": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RModalProvider",
      "description": "",
      "parameters": {},
      "filePath": "/Components/Feedback/RModalProvider.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RStatsCard": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RStatsCard",
      "description": "",
      "parameters": {
        "BadgeVariant": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "BadgeVariant.Info",
          "type": "BadgeVariant",
          "description": "</summary>",
          "name": "BadgeVariant",
          "isRequired": false
        },
        "Value": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "string.Empty",
          "type": "string",
          "description": "</summary>",
          "name": "Value",
          "isRequired": false
        },
        "IconColor": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"interactive-primary\"",
          "type": "string",
          "description": "</summary>",
          "name": "IconColor",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "string.Empty",
          "type": "string",
          "description": "</summary>",
          "name": "Class",
          "isRequired": false
        },
        "BadgeSize": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "BadgeSize.Small",
          "type": "BadgeSize",
          "description": "</summary>",
          "name": "BadgeSize",
          "isRequired": false
        },
        "Elevation": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "2",
          "type": "int",
          "description": "</summary>",
          "name": "Elevation",
          "isRequired": true
        },
        "BadgeText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "string.Empty",
          "type": "string",
          "description": "</summary>",
          "name": "BadgeText",
          "isRequired": false
        },
        "Label": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "string.Empty",
          "type": "string",
          "description": "</summary>",
          "name": "Label",
          "isRequired": false
        },
        "IconSize": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "40",
          "type": "int",
          "description": "</summary>",
          "name": "IconSize",
          "isRequired": true
        },
        "Clickable": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "false",
          "type": "bool",
          "description": "</summary>",
          "name": "Clickable",
          "isRequired": true
        },
        "Icon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "string.Empty",
          "type": "string",
          "description": "</summary>",
          "name": "Icon",
          "isRequired": false
        },
        "Subtitle": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "string.Empty",
          "type": "string",
          "description": "</summary>",
          "name": "Subtitle",
          "isRequired": false
        },
        "OnClick": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "</summary>",
          "name": "OnClick",
          "isRequired": false
        },
        "ValueColor": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"interactive-primary\"",
          "type": "string",
          "description": "</summary>",
          "name": "ValueColor",
          "isRequired": false
        }
      },
      "filePath": "/Components/Display/RStatsCard.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RProgressBar": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RProgressBar",
      "description": "",
      "parameters": {
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "string.Empty",
          "type": "string",
          "description": "",
          "name": "Class",
          "isRequired": false
        },
        "LabelInside": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "false",
          "type": "bool",
          "description": "",
          "name": "LabelInside",
          "isRequired": true
        },
        "Indeterminate": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Indeterminate",
          "isRequired": true
        },
        "Variant": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "ProgressVariant.Primary",
          "type": "ProgressVariant",
          "description": "",
          "name": "Variant",
          "isRequired": false
        },
        "Label": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Label",
          "isRequired": false
        },
        "Value": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "double",
          "description": "",
          "name": "Value",
          "isRequired": true
        },
        "LabelFormat": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"{0}%\"",
          "type": "string",
          "description": "",
          "name": "LabelFormat",
          "isRequired": false
        },
        "Striped": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Striped",
          "isRequired": true
        },
        "Animated": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Animated",
          "isRequired": true
        },
        "Size": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "ProgressSize.Medium",
          "type": "ProgressSize",
          "description": "",
          "name": "Size",
          "isRequired": false
        },
        "ShowLabel": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowLabel",
          "isRequired": true
        }
      },
      "filePath": "/Components/Display/RProgressBar.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RCard": {
      "commonUse": "dashboards, data display, content organization, information panels",
      "complexity": "Simple",
      "patterns": {
        "clickable-card": "Clickable=\"true\" OnClick=\"HandleClick\" for interactive cards",
        "loading-card": "Loading=\"true\" LoadingText=\"Processing...\" for async operations",
        "basic-card": "Title=\"Card Title\" Content=\"Card content\" for simple content cards",
        "elevated-card": "Elevation=\"4\" for cards that need prominence",
        "media-card": "ImageSrc=\"/image.jpg\" ImageAlt=\"Description\" for cards with images"
      },
      "category": "Core",
      "name": "RCard",
      "description": "Professional card component for content containers with business-grade variants. Supports header, media, content areas, loading states, elevation effects, and comprehensive interaction patterns.",
      "parameters": {
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Main content",
          "name": "ChildContent",
          "isRequired": false
        },
        "OnMouseLeave": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<MouseEventArgs>",
          "description": "Mouse leave event handler",
          "name": "OnMouseLeave",
          "isRequired": false
        },
        "MediaContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Media content area",
          "name": "MediaContent",
          "isRequired": false
        },
        "LoadingText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Loading text to display",
          "name": "LoadingText",
          "isRequired": false
        },
        "HeaderContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Header content area",
          "name": "HeaderContent",
          "isRequired": false
        },
        "RibbonText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Ribbon/badge text",
          "name": "RibbonText",
          "isRequired": false
        },
        "NoPadding": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether to remove padding from content",
          "name": "NoPadding",
          "isRequired": true
        },
        "Subtitle": {
          "aiHint": "Use for additional context like dates, categories, descriptions",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Card subtitle - secondary text displayed below title",
          "name": "Subtitle",
          "isRequired": false
        },
        "Elevation": {
          "aiHint": "Use 0 for flat, 2-4 for standard, 8+ for prominent. -1 uses variant default",
          "suggestedValues": [
            "0",
            "2",
            "4",
            "8",
            "16"
          ],
          "defaultValue": "-1",
          "type": "int",
          "description": "Elevation level (0-24) - controls shadow depth and prominence",
          "name": "Elevation",
          "isRequired": true
        },
        "RibbonVariant": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "RibbonVariant.Primary",
          "type": "RibbonVariant",
          "description": "Ribbon variant",
          "name": "RibbonVariant",
          "isRequired": false
        },
        "AriaLabel": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Accessibility label",
          "name": "AriaLabel",
          "isRequired": false
        },
        "FooterContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Footer content area",
          "name": "FooterContent",
          "isRequired": false
        },
        "Icon": {
          "aiHint": "Common icons: dashboard, person, settings, analytics, payment",
          "suggestedValues": [
            "dashboard",
            "person",
            "settings",
            "analytics",
            "payment",
            "work"
          ],
          "defaultValue": null,
          "type": "string",
          "description": "Material icon name displayed in header area",
          "name": "Icon",
          "isRequired": false
        },
        "Disabled": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether card is disabled",
          "name": "Disabled",
          "isRequired": true
        },
        "OnClick": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<MouseEventArgs>",
          "description": "Click event handler",
          "name": "OnClick",
          "isRequired": false
        },
        "Content": {
          "aiHint": "Use for simple text, or ChildContent for complex layouts",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Card content text - simple text content for the card body",
          "name": "Content",
          "isRequired": false
        },
        "StopPropagation": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Stop click propagation",
          "name": "StopPropagation",
          "isRequired": true
        },
        "Selected": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether card is selected/active",
          "name": "Selected",
          "isRequired": true
        },
        "FullBleedImage": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether image should be full bleed",
          "name": "FullBleedImage",
          "isRequired": true
        },
        "OnMouseEnter": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<MouseEventArgs>",
          "description": "Mouse enter event handler",
          "name": "OnMouseEnter",
          "isRequired": false
        },
        "ImageAlt": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Image alt text",
          "name": "ImageAlt",
          "isRequired": false
        },
        "Loading": {
          "aiHint": "Use during async operations to show processing state",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether card is in loading state - shows overlay with spinner",
          "name": "Loading",
          "isRequired": true
        },
        "Clickable": {
          "aiHint": "Set to true for interactive cards that perform actions",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether card is clickable - adds hover effects and cursor pointer",
          "name": "Clickable",
          "isRequired": true
        },
        "Title": {
          "aiHint": "Use descriptive titles like Employee Details, Payment Summary",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Card title - main heading displayed in header area",
          "name": "Title",
          "isRequired": false
        },
        "ImageSrc": {
          "aiHint": "Use for hero images, thumbnails, or visual content",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Image source URL for media content",
          "name": "ImageSrc",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "Variant": {
          "aiHint": "Default for standard cards, Elevated for prominence, Glass for modern overlays",
          "suggestedValues": [
            "Default",
            "Outlined",
            "Elevated",
            "Glass",
            "Flat"
          ],
          "defaultValue": "CardVariant.Default",
          "type": "CardVariant",
          "description": "Card variant style - determines visual appearance and behavior",
          "name": "Variant",
          "isRequired": false
        }
      },
      "filePath": "/Components/Core/RCard.razor",
      "aiPrompt": "Create a professional card for content display",
      "avoidUsage": "Don't use for navigation - use RLink instead. Avoid for simple text without structure."
    },
    "RTabs": {
      "commonUse": "dashboards, forms, data views, settings panels, multi-step workflows",
      "complexity": "Complex",
      "patterns": {
        "closable-tabs": "IsClosable=\"true\" on RTabItem for document-style tabs",
        "badge-tabs": "BadgeCount on RTabItem for notification indicators",
        "pills-tabs": "Variant=\"TabsVariant.Pills\" for compact tab layouts",
        "card-tabs": "Variant=\"TabsVariant.Card\" for separated tab sections",
        "basic-tabs": "RTabs with RTabItem children for content organization"
      },
      "category": "Navigation",
      "name": "RTabs",
      "description": "Professional tab container for organizing content with smooth animations and enterprise styling. Supports multiple variants, badges, closable tabs, keyboard navigation, and accessibility.",
      "parameters": {
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "ActiveTabIdChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<string>",
          "description": "Callback when active tab changes",
          "name": "ActiveTabIdChanged",
          "isRequired": false
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Child content containing RTabItem components",
          "name": "ChildContent",
          "isRequired": false
        },
        "OnAddTab": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "Called when add tab button is clicked",
          "name": "OnAddTab",
          "isRequired": false
        },
        "Variant": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "TabsVariant.Default",
          "type": "TabsVariant",
          "description": "Tab variant style",
          "name": "Variant",
          "isRequired": false
        },
        "ActiveTabId": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Active tab ID",
          "name": "ActiveTabId",
          "isRequired": false
        },
        "ShowAddButton": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether to show add tab button",
          "name": "ShowAddButton",
          "isRequired": true
        },
        "FadeOnly": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Use fade only animation (no slide)",
          "name": "FadeOnly",
          "isRequired": true
        },
        "OnTabChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<TabChangedEventArgs>",
          "description": "Called when tab selection changes",
          "name": "OnTabChanged",
          "isRequired": false
        },
        "NoPadding": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether tab content has no padding",
          "name": "NoPadding",
          "isRequired": true
        },
        "OnTabClosed": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<TabClosedEventArgs>",
          "description": "Called when tab close button is clicked",
          "name": "OnTabClosed",
          "isRequired": false
        },
        "Size": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "ButtonSize.Medium",
          "type": "ButtonSize",
          "description": "Size of tabs",
          "name": "Size",
          "isRequired": false
        }
      },
      "filePath": "/Components/Navigation/RTabs.razor",
      "aiPrompt": "Create professional tabs for content organization",
      "avoidUsage": "Don't use for navigation breadcrumbs - use RBreadcrumbs instead. Avoid for simple toggles."
    },
    "RDropdown": {
      "commonUse": "select menus, action menus, option lists, context menus",
      "complexity": "Complex",
      "patterns": {
        "action-dropdown": "Button trigger with action items for context menus",
        "searchable-dropdown": "Filterable items with search functionality",
        "loading-dropdown": "IsLoading=\"true\" for async data loading",
        "basic-dropdown": "Items list with TriggerContent for basic selection"
      },
      "category": "Navigation",
      "name": "RDropdown",
      "description": "Professional dropdown component for item selection with keyboard navigation and accessibility. Supports custom triggers, loading states, search filtering, and flexible item rendering.",
      "parameters": {
        "Items": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "IEnumerable<TValue>",
          "description": "",
          "name": "Items",
          "isRequired": false
        },
        "OnOpened": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "",
          "name": "OnOpened",
          "isRequired": false
        },
        "Footer": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Footer",
          "isRequired": false
        },
        "Disabled": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "false",
          "type": "bool",
          "description": "",
          "name": "Disabled",
          "isRequired": true
        },
        "TriggerContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "TriggerContent",
          "isRequired": false
        },
        "LoadingText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"Loading...\"",
          "type": "string",
          "description": "",
          "name": "LoadingText",
          "isRequired": false
        },
        "IsLoading": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "false",
          "type": "bool",
          "description": "",
          "name": "IsLoading",
          "isRequired": true
        },
        "ItemIconSelector": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "Func<TValue, string>",
          "description": "",
          "name": "ItemIconSelector",
          "isRequired": false
        },
        "Position": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "DropdownPosition.Bottom",
          "type": "DropdownPosition",
          "description": "",
          "name": "Position",
          "isRequired": false
        },
        "SelectedValue": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "TValue",
          "description": "",
          "name": "SelectedValue",
          "isRequired": false
        },
        "AriaLabel": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "AriaLabel",
          "isRequired": false
        },
        "CloseOnSelect": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "CloseOnSelect",
          "isRequired": true
        },
        "ItemDisabledSelector": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "Func<TValue, bool>",
          "description": "",
          "name": "ItemDisabledSelector",
          "isRequired": false
        },
        "ItemLabelSelector": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "Func<TValue, string>",
          "description": "",
          "name": "ItemLabelSelector",
          "isRequired": false
        },
        "EmptyText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"No items available\"",
          "type": "string",
          "description": "",
          "name": "EmptyText",
          "isRequired": false
        },
        "SelectedValueChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<TValue>",
          "description": "",
          "name": "SelectedValueChanged",
          "isRequired": false
        },
        "AdditionalClass": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "AdditionalClass",
          "isRequired": false
        },
        "Header": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Header",
          "isRequired": false
        },
        "OnClosed": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "",
          "name": "OnClosed",
          "isRequired": false
        },
        "SeparatorAfterSelector": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "Func<TValue, bool>",
          "description": "",
          "name": "SeparatorAfterSelector",
          "isRequired": false
        },
        "EmptyContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "EmptyContent",
          "isRequired": false
        }
      },
      "filePath": "/Components/Navigation/RDropdown.razor",
      "aiPrompt": "Create dropdown menu for item selection",
      "avoidUsage": "Don't use for simple text inputs - use RFormField instead. Avoid for navigation - use RNavMenu."
    },
    "RForm": {
      "commonUse": "user registration, data entry, settings forms, contact forms",
      "complexity": "Complex",
      "patterns": {
        "dense-form": "Density=\"FormDensity.Dense\" for compact layouts",
        "modal-form": "Layout=\"FormLayout.Modal\" ShowDefaultActions=\"true\"",
        "settings-form": "Layout=\"FormLayout.Executive\" ShowFormHeader=\"true\"",
        "registration-form": "Title=\"Sign Up\" ValidationMode=\"ValidationMode.DataAnnotations\"",
        "basic-form": "Model=\"@myModel\" OnValidSubmit=\"HandleSubmit\""
      },
      "category": "Form",
      "name": "RForm",
      "description": "Professional form component with validation, state management, and accessibility",
      "parameters": {
        "Description": {
          "aiHint": "Form description or instructions",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string?",
          "description": "",
          "name": "Description",
          "isRequired": false
        },
        "ValidationMode": {
          "aiHint": "Validation strategy (DataAnnotations, Custom, Hybrid)",
          "suggestedValues": [],
          "defaultValue": "ValidationMode.DataAnnotations",
          "type": "ValidationMode",
          "description": "",
          "name": "ValidationMode",
          "isRequired": false
        },
        "Layout": {
          "aiHint": "Form layout style (Default, Executive, Modal, Compact)",
          "suggestedValues": [],
          "defaultValue": "FormLayout.Default",
          "type": "FormLayout",
          "description": "",
          "name": "Layout",
          "isRequired": false
        },
        "CustomValidator": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "FormValidationDelegate<TModel>?",
          "description": "",
          "name": "CustomValidator",
          "isRequired": false
        },
        "OnValidSubmit": {
          "aiHint": "Called when form is submitted with valid data",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<FormSubmissionEventArgs<TModel>>",
          "description": "",
          "name": "OnValidSubmit",
          "isRequired": false
        },
        "OnStateChanged": {
          "aiHint": "Called when form state changes (submitting, success, error)",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<FormStateChangedEventArgs>",
          "description": "",
          "name": "OnStateChanged",
          "isRequired": false
        },
        "ModelChanged": {
          "aiHint": "Callback when model data changes",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<TModel>",
          "description": "",
          "name": "ModelChanged",
          "isRequired": false
        },
        "AriaLabel": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string?",
          "description": "",
          "name": "AriaLabel",
          "isRequired": false
        },
        "FormFields": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment?",
          "description": "",
          "name": "FormFields",
          "isRequired": false
        },
        "ShowDefaultActions": {
          "aiHint": "Show default submit/cancel buttons",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowDefaultActions",
          "isRequired": true
        },
        "SubmitButtonFullWidth": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "false",
          "type": "bool",
          "description": "",
          "name": "SubmitButtonFullWidth",
          "isRequired": true
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string?",
          "description": "",
          "name": "Class",
          "isRequired": false
        },
        "Title": {
          "aiHint": "Form title displayed in header",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string?",
          "description": "",
          "name": "Title",
          "isRequired": false
        },
        "OnInvalidSubmit": {
          "aiHint": "Called when form is submitted with invalid data",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<FormSubmissionEventArgs<TModel>>",
          "description": "",
          "name": "OnInvalidSubmit",
          "isRequired": false
        },
        "FormActions": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment?",
          "description": "",
          "name": "FormActions",
          "isRequired": false
        },
        "ShowCancelButton": {
          "aiHint": "Show cancel button alongside submit",
          "suggestedValues": [],
          "defaultValue": "false",
          "type": "bool",
          "description": "",
          "name": "ShowCancelButton",
          "isRequired": true
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment?",
          "description": "",
          "name": "ChildContent",
          "isRequired": false
        },
        "Icon": {
          "aiHint": "Icon displayed next to form title",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string?",
          "description": "",
          "name": "Icon",
          "isRequired": false
        },
        "Density": {
          "aiHint": "Form spacing density (Comfortable, Dense, UltraDense)",
          "suggestedValues": [],
          "defaultValue": "FormDensity.Comfortable",
          "type": "FormDensity",
          "description": "",
          "name": "Density",
          "isRequired": false
        },
        "SubmitText": {
          "aiHint": "Text for the submit button",
          "suggestedValues": [],
          "defaultValue": "\"Submit\"",
          "type": "string",
          "description": "",
          "name": "SubmitText",
          "isRequired": false
        },
        "CancelText": {
          "aiHint": "Text for the cancel button",
          "suggestedValues": [],
          "defaultValue": "\"Cancel\"",
          "type": "string",
          "description": "",
          "name": "CancelText",
          "isRequired": false
        },
        "ShowFormHeader": {
          "aiHint": "Whether to show the form header section",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowFormHeader",
          "isRequired": true
        },
        "Options": {
          "aiHint": "Form configuration options",
          "suggestedValues": [],
          "defaultValue": "new()",
          "type": "FormOptions",
          "description": "",
          "name": "Options",
          "isRequired": false
        },
        "OnCancel": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "",
          "name": "OnCancel",
          "isRequired": false
        },
        "RequireValidation": {
          "aiHint": "Require validation before allowing submission",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "RequireValidation",
          "isRequired": true
        },
        "Model": {
          "aiHint": "Data model bound to the form",
          "suggestedValues": [],
          "defaultValue": "default!",
          "type": "TModel",
          "description": "",
          "name": "Model",
          "isRequired": false
        }
      },
      "filePath": "/Components/Form/RForm.razor",
      "aiPrompt": "Create a professional form container with validation and submission handling",
      "avoidUsage": "Don't use for simple single-field inputs or display-only content"
    },
    "RFormField": {
      "commonUse": "text input, email validation, password fields, dropdowns, checkboxes, file uploads",
      "complexity": "Complex",
      "patterns": {
        "required-field": "Required=\"true\" ShowRequiredIndicator=\"true\"",
        "email-field": "Type=\"FieldType.Email\" Required=\"true\" for email validation",
        "file-upload": "Type=\"FieldType.File\" with AcceptTypes",
        "password-field": "Type=\"FieldType.Password\" with strength indicators",
        "select-dropdown": "Type=\"FieldType.Select\" with SelectOptions",
        "text-input": "Type=\"FieldType.Text\" for basic text input",
        "floating-label": "Variant=\"FieldVariant.FloatingLabel\" for modern forms",
        "checkbox-field": "Type=\"FieldType.Checkbox\" with CheckboxText"
      },
      "category": "Form",
      "name": "RFormField",
      "description": "Universal form field component with professional validation and utility-first CSS",
      "parameters": {
        "AllowMultiple": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Allow multiple file selection",
          "name": "AllowMultiple",
          "isRequired": true
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Custom input content for FieldType.Custom",
          "name": "ChildContent",
          "isRequired": false
        },
        "Density": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "FormDensity.Comfortable",
          "type": "FormDensity",
          "description": "Field density for spacing control",
          "name": "Density",
          "isRequired": false
        },
        "Value": {
          "aiHint": "Current value of the input field",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Input field value",
          "name": "Value",
          "isRequired": false
        },
        "Placeholder": {
          "aiHint": "Placeholder text shown when field is empty",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Placeholder text",
          "name": "Placeholder",
          "isRequired": false
        },
        "OnKeyDown": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<KeyboardEventArgs>",
          "description": "Called on key down",
          "name": "OnKeyDown",
          "isRequired": false
        },
        "FileChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<InputFileChangeEventArgs>",
          "description": "File change callback",
          "name": "FileChanged",
          "isRequired": false
        },
        "OnInput": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<string>",
          "description": "Called on input event (real-time)",
          "name": "OnInput",
          "isRequired": false
        },
        "OnStartIconClick": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "Called when start icon is clicked",
          "name": "OnStartIconClick",
          "isRequired": false
        },
        "OnKeyUp": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<KeyboardEventArgs>",
          "description": "Called on key up",
          "name": "OnKeyUp",
          "isRequired": false
        },
        "EndIcon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Icon on the right side of the input",
          "name": "EndIcon",
          "isRequired": false
        },
        "Required": {
          "aiHint": "Mark field as required for form validation",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether field is required",
          "name": "Required",
          "isRequired": true
        },
        "RangeValueSuffix": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Suffix for range value display",
          "name": "RangeValueSuffix",
          "isRequired": false
        },
        "Loading": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether field is in loading state",
          "name": "Loading",
          "isRequired": true
        },
        "OnBlur": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<FocusEventArgs>",
          "description": "Called on blur",
          "name": "OnBlur",
          "isRequired": false
        },
        "MaxValue": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Maximum value for number/range inputs",
          "name": "MaxValue",
          "isRequired": false
        },
        "ErrorMessage": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Error message to display",
          "name": "ErrorMessage",
          "isRequired": false
        },
        "AutoResize": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether textarea auto-resizes",
          "name": "AutoResize",
          "isRequired": true
        },
        "Step": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Step value for number/range inputs",
          "name": "Step",
          "isRequired": false
        },
        "ShowRangeValue": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Show current value for range input",
          "name": "ShowRangeValue",
          "isRequired": true
        },
        "Checked": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Checkbox checked state",
          "name": "Checked",
          "isRequired": true
        },
        "ShowCharacterCount": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether to show character count",
          "name": "ShowCharacterCount",
          "isRequired": true
        },
        "RadioOptions": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Radio options content",
          "name": "RadioOptions",
          "isRequired": false
        },
        "Disabled": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether field is disabled",
          "name": "Disabled",
          "isRequired": true
        },
        "FullWidth": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Whether input spans full width",
          "name": "FullWidth",
          "isRequired": true
        },
        "SelectOptions": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Select options content",
          "name": "SelectOptions",
          "isRequired": false
        },
        "InputClass": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes for the input element",
          "name": "InputClass",
          "isRequired": false
        },
        "MinValue": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Minimum value for number/range inputs",
          "name": "MinValue",
          "isRequired": false
        },
        "FieldName": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Field name for binding to validation context (auto-derived from Label if not set)",
          "name": "FieldName",
          "isRequired": false
        },
        "Size": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "FieldSize.Medium",
          "type": "FieldSize",
          "description": "Field size variant",
          "name": "Size",
          "isRequired": false
        },
        "ReadOnly": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether field is readonly",
          "name": "ReadOnly",
          "isRequired": true
        },
        "InputId": {
          "aiHint": "Unique identifier for the input field",
          "suggestedValues": [],
          "defaultValue": "Guid.NewGuid().ToString(\"N\")[..8]",
          "type": "string",
          "description": "Input field identifier",
          "name": "InputId",
          "isRequired": false
        },
        "MaxLength": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "int",
          "description": "Maximum character length",
          "name": "MaxLength",
          "isRequired": true
        },
        "AcceptTypes": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Accepted file types",
          "name": "AcceptTypes",
          "isRequired": false
        },
        "ValueChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<string>",
          "description": "Callback when value changes",
          "name": "ValueChanged",
          "isRequired": false
        },
        "Label": {
          "aiHint": "Label text displayed above the field",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Field label text",
          "name": "Label",
          "isRequired": false
        },
        "HelpText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Help text below the input",
          "name": "HelpText",
          "isRequired": false
        },
        "AutoComplete": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Autocomplete attribute",
          "name": "AutoComplete",
          "isRequired": false
        },
        "StartIcon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Icon on the left side of the input",
          "name": "StartIcon",
          "isRequired": false
        },
        "SelectPlaceholder": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Select placeholder option",
          "name": "SelectPlaceholder",
          "isRequired": false
        },
        "ShowRequiredIndicator": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "Whether to show required indicator (*)",
          "name": "ShowRequiredIndicator",
          "isRequired": true
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes for the field group",
          "name": "Class",
          "isRequired": false
        },
        "OnEndIconClick": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "Called when end icon is clicked",
          "name": "OnEndIconClick",
          "isRequired": false
        },
        "Rows": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "3",
          "type": "int",
          "description": "Number of textarea rows",
          "name": "Rows",
          "isRequired": true
        },
        "CheckboxText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Checkbox text/label",
          "name": "CheckboxText",
          "isRequired": false
        },
        "Type": {
          "aiHint": "Type of input field (Text, Email, Password, Select, etc.)",
          "suggestedValues": [],
          "defaultValue": "FieldType.Text",
          "type": "FieldType",
          "description": "Field type",
          "name": "Type",
          "isRequired": false
        },
        "Variant": {
          "aiHint": "Visual style variant of the field",
          "suggestedValues": [],
          "defaultValue": "FieldVariant.Default",
          "type": "FieldVariant",
          "description": "Field style variant (Default, Clean, Outlined, Filled)",
          "name": "Variant",
          "isRequired": false
        },
        "HasError": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether field has validation error (auto-calculated from ErrorMessage)",
          "name": "HasError",
          "isRequired": true
        },
        "CheckedChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<bool>",
          "description": "Callback when checkbox changes",
          "name": "CheckedChanged",
          "isRequired": false
        },
        "OnFocus": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<FocusEventArgs>",
          "description": "Called on focus",
          "name": "OnFocus",
          "isRequired": false
        }
      },
      "filePath": "/Components/Form/RFormField.razor",
      "aiPrompt": "Create a professional form field for user input with validation",
      "avoidUsage": "Don't use for display-only data or readonly content"
    },
    "REmptyState": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "REmptyState",
      "description": "",
      "parameters": {
        "Icon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"inbox\"",
          "type": "string",
          "description": "",
          "name": "Icon",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "string.Empty",
          "type": "string",
          "description": "",
          "name": "Class",
          "isRequired": false
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "ChildContent",
          "isRequired": false
        },
        "ActionText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "ActionText",
          "isRequired": false
        },
        "ButtonIcon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "ButtonIcon",
          "isRequired": false
        },
        "Title": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"No data available\"",
          "type": "string",
          "description": "",
          "name": "Title",
          "isRequired": false
        },
        "OnAction": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "",
          "name": "OnAction",
          "isRequired": false
        },
        "Description": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Description",
          "isRequired": false
        },
        "Image": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Image",
          "isRequired": false
        }
      },
      "filePath": "/Components/Display/REmptyState.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RDataTable": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RDataTable",
      "description": "",
      "parameters": {
        "Striped": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Striped",
          "isRequired": true
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "ChildContent",
          "isRequired": false
        },
        "RowTemplate": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment<TItem>",
          "description": "",
          "name": "RowTemplate",
          "isRequired": false
        },
        "TotalItems": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "int",
          "description": "",
          "name": "TotalItems",
          "isRequired": true
        },
        "EmptyMessage": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "EmptyMessage",
          "isRequired": false
        },
        "AllowUnsorted": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "AllowUnsorted",
          "isRequired": true
        },
        "HeaderContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "HeaderContent",
          "isRequired": false
        },
        "Height": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Height",
          "isRequired": false
        },
        "SingleSelection": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "SingleSelection",
          "isRequired": true
        },
        "CurrentPage": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "1",
          "type": "int",
          "description": "",
          "name": "CurrentPage",
          "isRequired": true
        },
        "ShowPagination": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowPagination",
          "isRequired": true
        },
        "OnRowClick": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<TItem>",
          "description": "",
          "name": "OnRowClick",
          "isRequired": false
        },
        "SelectedItem": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "TItem",
          "description": "",
          "name": "SelectedItem",
          "isRequired": false
        },
        "SelectedItemChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<TItem>",
          "description": "",
          "name": "SelectedItemChanged",
          "isRequired": false
        },
        "SortColumn": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "SortColumn",
          "isRequired": false
        },
        "ShowFilters": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "ShowFilters",
          "isRequired": true
        },
        "Columns": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "List<RDataTableColumn<TItem>>",
          "description": "",
          "name": "Columns",
          "isRequired": false
        },
        "Subtitle": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Subtitle",
          "isRequired": false
        },
        "RowClassFunc": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "Func<TItem, string>",
          "description": "",
          "name": "RowClassFunc",
          "isRequired": false
        },
        "Filters": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "Filters",
          "isRequired": false
        },
        "SelectedItems": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "new()",
          "type": "List<TItem>",
          "description": "",
          "name": "SelectedItems",
          "isRequired": false
        },
        "FooterContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "FooterContent",
          "isRequired": false
        },
        "RowClass": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"\"",
          "type": "string",
          "description": "",
          "name": "RowClass",
          "isRequired": false
        },
        "Icon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Icon",
          "isRequired": false
        },
        "Items": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "List<TItem>",
          "description": "",
          "name": "Items",
          "isRequired": false
        },
        "ItemSize": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "50f",
          "type": "float",
          "description": "",
          "name": "ItemSize",
          "isRequired": true
        },
        "OnPageChange": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<int>",
          "description": "",
          "name": "OnPageChange",
          "isRequired": false
        },
        "MultiSelection": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "MultiSelection",
          "isRequired": true
        },
        "TableHeader": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "TableHeader",
          "isRequired": false
        },
        "ColumnsContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "ColumnsContent",
          "isRequired": false
        },
        "LoadingMessage": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "LoadingMessage",
          "isRequired": false
        },
        "PageSize": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "10",
          "type": "int",
          "description": "",
          "name": "PageSize",
          "isRequired": true
        },
        "PageSizeOptions": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "new() { 5, 10, 25, 50, 100 }",
          "type": "List<int>",
          "description": "",
          "name": "PageSizeOptions",
          "isRequired": false
        },
        "OnSort": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<string>",
          "description": "",
          "name": "OnSort",
          "isRequired": false
        },
        "Loading": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Loading",
          "isRequired": true
        },
        "Elevation": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "2",
          "type": "int",
          "description": "",
          "name": "Elevation",
          "isRequired": true
        },
        "SelectedItemsChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<List<TItem>>",
          "description": "",
          "name": "SelectedItemsChanged",
          "isRequired": false
        },
        "ShowTableHeader": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowTableHeader",
          "isRequired": true
        },
        "Title": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Title",
          "isRequired": false
        },
        "RowClickable": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "RowClickable",
          "isRequired": true
        },
        "EmptyStateContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "EmptyStateContent",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Class",
          "isRequired": false
        },
        "Virtualize": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Virtualize",
          "isRequired": true
        },
        "ShowHeader": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowHeader",
          "isRequired": true
        },
        "FixedHeader": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "FixedHeader",
          "isRequired": true
        },
        "Dense": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Dense",
          "isRequired": true
        },
        "SortDescending": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "SortDescending",
          "isRequired": true
        },
        "Hoverable": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "Hoverable",
          "isRequired": true
        }
      },
      "filePath": "/Components/Data/RDataTable.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RDivider": {
      "commonUse": "section separation, menu dividers, form sections, content organization",
      "complexity": "Simple",
      "patterns": {
        "styled-divider": "Style=\"DividerStyle.Dashed\" for different visual styles",
        "vertical-divider": "Variant=\"DividerVariant.Vertical\" for inline separation",
        "section-divider": "Text=\"Settings\" for labeled sections",
        "simple-divider": "No parameters for basic horizontal line"
      },
      "category": "Core",
      "name": "RDivider",
      "description": "Professional divider component for visual separation with text support and multiple styles. Supports horizontal/vertical orientation, customizable styling, and automatic menu integration.",
      "parameters": {
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Child content",
          "name": "ChildContent",
          "isRequired": false
        },
        "Variant": {
          "aiHint": "Horizontal for section breaks, Vertical for inline separation",
          "suggestedValues": [
            "Horizontal",
            "Vertical"
          ],
          "defaultValue": "DividerVariant.Horizontal",
          "type": "DividerVariant",
          "description": "Divider variant - orientation of the divider line",
          "name": "Variant",
          "isRequired": false
        },
        "Text": {
          "aiHint": "Use for section labels like Settings, Advanced Options, OR. Keep short",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Divider text (optional) - displays label within the divider line",
          "name": "Text",
          "isRequired": false
        },
        "TextAlign": {
          "aiHint": "Center for balanced labels, Left for section headers, Right for special cases",
          "suggestedValues": [
            "Left",
            "Center",
            "Right"
          ],
          "defaultValue": "DividerTextAlign.Center",
          "type": "DividerTextAlign",
          "description": "Text alignment for dividers with text content",
          "name": "TextAlign",
          "isRequired": false
        },
        "Style": {
          "aiHint": "Solid for standard, Dashed for softer, Dotted for subtle separation",
          "suggestedValues": [
            "Solid",
            "Dashed",
            "Dotted"
          ],
          "defaultValue": "DividerStyle.Solid",
          "type": "DividerStyle",
          "description": "Divider style - visual appearance of the divider line",
          "name": "Style",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        }
      },
      "filePath": "/Components/Core/RDivider.razor",
      "aiPrompt": "Create a professional divider for visual separation",
      "avoidUsage": "Don't overuse - only for logical content separation. Avoid decorative usage."
    },
    "RNavMenu": {
      "commonUse": "sidebar navigation, main menu, hierarchical navigation, app structure",
      "complexity": "Complex",
      "patterns": {
        "collapsible-nav": "Responsive to SidebarCollapsed cascading parameter",
        "badge-nav": "NavMenuItem with Badge for notifications and counts",
        "basic-nav": "Items list with NavMenuItem objects for simple navigation",
        "hierarchical-nav": "NavMenuItem with Children for nested menu structure"
      },
      "category": "Navigation",
      "name": "RNavMenu",
      "description": "Professional navigation menu component for sidebar and main navigation with hierarchical support. Supports collapsible groups, badges, icons, and responsive behavior for enterprise applications.",
      "parameters": {
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Custom navigation content",
          "name": "ChildContent",
          "isRequired": false
        },
        "Items": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "List<NavMenuItem>",
          "description": "Navigation items",
          "name": "Items",
          "isRequired": false
        },
        "ItemFilter": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "Func<NavMenuItem, bool>",
          "description": "Filter function for items",
          "name": "ItemFilter",
          "isRequired": false
        },
        "OnItemClick": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<NavMenuItem>",
          "description": "Item clicked callback",
          "name": "OnItemClick",
          "isRequired": false
        }
      },
      "filePath": "/Components/Navigation/RNavMenu.razor",
      "aiPrompt": "Create navigation menu for app sidebar",
      "avoidUsage": "Don't use for breadcrumbs - use RBreadcrumbs instead. Avoid for action menus - use RDropdown."
    },
    "RListItem": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RListItem",
      "description": "",
      "parameters": {
        "Description": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Item description",
          "name": "Description",
          "isRequired": false
        },
        "Active": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether item is active/selected",
          "name": "Active",
          "isRequired": true
        },
        "AvatarText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Avatar text (for avatar lists)",
          "name": "AvatarText",
          "isRequired": false
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Main content",
          "name": "ChildContent",
          "isRequired": false
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Additional CSS classes",
          "name": "Class",
          "isRequired": false
        },
        "BadgeText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Badge text",
          "name": "BadgeText",
          "isRequired": false
        },
        "Title": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Item title",
          "name": "Title",
          "isRequired": false
        },
        "BadgeVariant": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "BadgeVariant.Primary",
          "type": "BadgeVariant",
          "description": "Badge variant",
          "name": "BadgeVariant",
          "isRequired": false
        },
        "IconVariant": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Icon color variant",
          "name": "IconVariant",
          "isRequired": false
        },
        "OnClick": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<MouseEventArgs>",
          "description": "Click event handler",
          "name": "OnClick",
          "isRequired": false
        },
        "IconSize": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "IconSize.Medium",
          "type": "IconSize",
          "description": "Icon size",
          "name": "IconSize",
          "isRequired": false
        },
        "IconPosition": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "IconPosition.Start",
          "type": "IconPosition",
          "description": "Icon position",
          "name": "IconPosition",
          "isRequired": false
        },
        "Clickable": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether item is clickable",
          "name": "Clickable",
          "isRequired": true
        },
        "Icon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Icon",
          "name": "Icon",
          "isRequired": false
        },
        "AvatarContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Avatar content",
          "name": "AvatarContent",
          "isRequired": false
        },
        "ItemVariant": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "ListItemVariant.Default",
          "type": "ListItemVariant",
          "description": "Item style variant",
          "name": "ItemVariant",
          "isRequired": false
        },
        "Disabled": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "Whether item is disabled",
          "name": "Disabled",
          "isRequired": true
        },
        "Subtitle": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Item subtitle",
          "name": "Subtitle",
          "isRequired": false
        },
        "MetaText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "Meta text",
          "name": "MetaText",
          "isRequired": false
        },
        "BadgeContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Badge content",
          "name": "BadgeContent",
          "isRequired": false
        },
        "MetaContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Meta content",
          "name": "MetaContent",
          "isRequired": false
        },
        "Actions": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "Action buttons",
          "name": "Actions",
          "isRequired": false
        }
      },
      "filePath": "/Components/Data/RListItem.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    },
    "RModal": {
      "commonUse": "",
      "complexity": "Simple",
      "patterns": {},
      "category": "Unknown",
      "name": "RModal",
      "description": "",
      "parameters": {
        "CloseOnBackdrop": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "CloseOnBackdrop",
          "isRequired": true
        },
        "ChildContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "ChildContent",
          "isRequired": false
        },
        "HasUnsavedChanges": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "HasUnsavedChanges",
          "isRequired": true
        },
        "HeaderContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "HeaderContent",
          "isRequired": false
        },
        "Subtitle": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Subtitle",
          "isRequired": false
        },
        "ShowPrimaryButtonSpinner": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowPrimaryButtonSpinner",
          "isRequired": true
        },
        "ProcessingMessage": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"Processing...\"",
          "type": "string",
          "description": "",
          "name": "ProcessingMessage",
          "isRequired": false
        },
        "PrimaryButtonClass": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "PrimaryButtonClass",
          "isRequired": false
        },
        "ShowCloseButton": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowCloseButton",
          "isRequired": true
        },
        "ShowCancelButton": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowCancelButton",
          "isRequired": true
        },
        "PrimaryText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"Save\"",
          "type": "string",
          "description": "",
          "name": "PrimaryText",
          "isRequired": false
        },
        "Processing": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Processing",
          "isRequired": true
        },
        "VisibleChanged": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback<bool>",
          "description": "",
          "name": "VisibleChanged",
          "isRequired": false
        },
        "ShowPrimaryButton": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowPrimaryButton",
          "isRequired": true
        },
        "CloseOnEscape": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "CloseOnEscape",
          "isRequired": true
        },
        "OnCancel": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "",
          "name": "OnCancel",
          "isRequired": false
        },
        "PrimaryButtonDisabled": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "PrimaryButtonDisabled",
          "isRequired": true
        },
        "FooterContent": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "RenderFragment",
          "description": "",
          "name": "FooterContent",
          "isRequired": false
        },
        "Icon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Icon",
          "isRequired": false
        },
        "Visible": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "Visible",
          "isRequired": true
        },
        "ProcessingButtonText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "ProcessingButtonText",
          "isRequired": false
        },
        "OnPrimaryAction": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "",
          "name": "OnPrimaryAction",
          "isRequired": false
        },
        "ShowProcessingOverlay": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowProcessingOverlay",
          "isRequired": true
        },
        "CancelButtonClass": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "CancelButtonClass",
          "isRequired": false
        },
        "Size": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "ModalSize.Medium",
          "type": "ModalSize",
          "description": "",
          "name": "Size",
          "isRequired": false
        },
        "CancelIcon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "CancelIcon",
          "isRequired": false
        },
        "PrimaryIcon": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "PrimaryIcon",
          "isRequired": false
        },
        "Title": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"\"",
          "type": "string",
          "description": "",
          "name": "Title",
          "isRequired": false
        },
        "ShowUnsavedIndicator": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "bool",
          "description": "",
          "name": "ShowUnsavedIndicator",
          "isRequired": true
        },
        "ShowFooter": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowFooter",
          "isRequired": true
        },
        "Class": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "string",
          "description": "",
          "name": "Class",
          "isRequired": false
        },
        "OnClose": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": null,
          "type": "EventCallback",
          "description": "",
          "name": "OnClose",
          "isRequired": false
        },
        "ButtonSize": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "ButtonSize.Medium",
          "type": "ButtonSize",
          "description": "",
          "name": "ButtonSize",
          "isRequired": false
        },
        "ShowHeader": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "true",
          "type": "bool",
          "description": "",
          "name": "ShowHeader",
          "isRequired": true
        },
        "Variant": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "ModalVariant.Default",
          "type": "ModalVariant",
          "description": "",
          "name": "Variant",
          "isRequired": false
        },
        "CancelText": {
          "aiHint": "",
          "suggestedValues": [],
          "defaultValue": "\"Cancel\"",
          "type": "string",
          "description": "",
          "name": "CancelText",
          "isRequired": false
        }
      },
      "filePath": "/Components/Feedback/RModal.razor",
      "aiPrompt": "",
      "avoidUsage": ""
    }
  },
  "utilityPatterns": {
    "typography": {
      "description": "Typography utility classes for text styling",
      "aiHint": "Use text--base for normal text, font-medium for emphasis, leading-relaxed for better readability",
      "extrapolation": "tracking-[tighter,tight,normal,wide,wider,widest], text-[left,center,right,justify], text-transform-[uppercase,lowercase,capitalize,none]",
      "pattern": "text--[xs,sm,base,lg,xl,2xl,3xl,4xl,5xl], font-[thin,light,normal,medium,semibold,bold,extrabold,black], leading-[none,tight,snug,normal,relaxed,loose]"
    },
    "borders": {
      "description": "Border utility classes",
      "aiHint": "Use rounded-md for standard rounding, border-2 for medium borders, combine with border--primary for colored borders",
      "extrapolation": "border-t-[...], border-b-[...], border-l-[...], border-r-[...], border-x-[...], border-y-[...], rounded-t-[...], rounded-b-[...], rounded-l-[...], rounded-r-[...]",
      "pattern": "border-[0,1,2,3,4], rounded-[none,sm,md,lg,xl,2xl,3xl,full], border-[solid,dashed,dotted,double,none]"
    },
    "display": {
      "description": "Display utility classes",
      "aiHint": "Use d-flex for flexbox, d-grid for grid, d-none for hiding, d-block for block display",
      "extrapolation": "d-sm-[...], d-md-[...], d-lg-[...], d-xl-[...] for responsive display variants",
      "pattern": "d-[none,block,inline,inline-block,flex,inline-flex,grid,inline-grid,table,table-row,table-cell]"
    },
    "transforms": {
      "description": "Transform utility classes",
      "aiHint": "Use scale-105 for hover effects, rotate-45 for angled elements, translate-x-4 for positioning",
      "extrapolation": "translate-y-[...], -translate-x-[...], -translate-y-[...], skew-x-[...], skew-y-[...], origin-[center,top,bottom,left,right,top-left,top-right,bottom-left,bottom-right]",
      "pattern": "transform, scale-[0,50,75,90,95,100,105,110,125,150], rotate-[0,1,2,3,6,12,45,90,180], translate-x-[0,1,2,3,4,6,8,12,16,24]"
    },
    "sizing": {
      "description": "Width and height utility classes",
      "aiHint": "Use w-full for 100% width, h-auto for automatic height, w-64 for fixed widths",
      "extrapolation": "min-w-[0,full,min,max,fit], max-w-[0,full,min,max,fit,prose,screen-sm,screen-md,screen-lg,screen-xl], min-h-[...], max-h-[...]",
      "pattern": "w-[0,1,2,3,4,6,8,12,16,24,32,48,64,96,auto,full,screen], h-[0,1,2,3,4,6,8,12,16,24,32,48,64,96,auto,full,screen]"
    },
    "colors": {
      "description": "Semantic color utilities with theme awareness",
      "aiHint": "Use text--primary for main text, bg--elevated for raised surfaces, text--secondary for supporting text",
      "extrapolation": "border--[primary,secondary,light,medium,strong], text--[success,warning,error,info], bg--[success,warning,error,info,glass,transparent]",
      "pattern": "text--[primary,secondary,tertiary,inverse,muted,disabled], bg--[surface,elevated,primary,secondary,success,warning,error,info]"
    },
    "spacing": {
      "description": "Padding, margin, and gap utility classes with directional variants",
      "aiHint": "Use pa-4 for standard padding, ma-2 for small margins, gap-3 for flex/grid gaps. Add directional: pt-4, pb-2, ml-3, mr-auto",
      "extrapolation": "pt-[...], pb-[...], pl-[...], pr-[...], px-[...], py-[...], mt-[...], mb-[...], ml-[...], mr-[...], mx-[...], my-[...]",
      "pattern": "p-[0,1,2,3,4,6,8,12,16,24], m-[0,1,2,3,4,6,8,12,16,24], pa-[0,1,2,3,4,6,8,12,16,24], ma-[0,1,2,3,4,6,8,12,16,24], gap-[0,1,2,3,4,6,8,12,16,24]"
    },
    "glass": {
      "description": "Glassmorphism effect utilities with backdrop blur",
      "aiHint": "Use glass-light for subtle effects, glass-heavy for prominent overlays, combine with backdrop-blur-md for modern glass effect",
      "extrapolation": "backdrop-filter-[none,blur,brightness,contrast,saturate], backdrop-opacity-[0,25,50,75,100]",
      "pattern": "glass-[light,medium,heavy,frost], backdrop-blur-[sm,md,lg,xl]"
    },
    "flexbox": {
      "description": "Comprehensive flexbox utility classes",
      "aiHint": "Use d-flex justify-between for space-between layouts, align-center for vertical centering, flex-column for vertical stacking",
      "extrapolation": "justify-items-[start,end,center,stretch], justify-self-[auto,start,end,center,stretch], align-items-[...], align-self-[...], flex-grow-[0,1], flex-shrink-[0,1]",
      "pattern": "d-flex, justify-[start,center,end,between,around,evenly], align-[start,center,end,stretch,baseline], flex-[row,column,wrap,nowrap]"
    },
    "animations": {
      "description": "Animation and transition utility classes",
      "aiHint": "Use animate-pulse for loading states, transition-all for smooth transitions, animate-fade-in for entrance effects",
      "extrapolation": "duration-[75,100,150,200,300,500,700,1000], ease-[linear,in,out,in-out], delay-[75,100,150,200,300,500,700,1000]",
      "pattern": "animate-[none,spin,ping,pulse,bounce,fade-in,fade-out,slide-in,slide-out], transition-[none,all,colors,opacity,shadow,transform]"
    },
    "visibility": {
      "description": "Visibility and overflow utility classes",
      "aiHint": "Use opacity-50 for semi-transparent elements, overflow-hidden to hide content, visible/invisible for visibility control",
      "extrapolation": "overflow-x-[auto,hidden,visible,scroll], overflow-y-[auto,hidden,visible,scroll]",
      "pattern": "visible, invisible, opacity-[0,25,50,75,100], overflow-[auto,hidden,visible,scroll,x-auto,y-auto,x-hidden,y-hidden]"
    },
    "grid": {
      "description": "CSS Grid utility classes for complex layouts",
      "aiHint": "Use d-grid grid-cols-3 for 3-column layouts, grid-cols-auto-fit-250 for responsive auto-fit columns",
      "extrapolation": "grid-flow-[row,column,dense,row-dense,col-dense], grid-auto-[rows,columns], col-span-[1,2,3,4,5,6,full], row-span-[1,2,3,4,5,6,full]",
      "pattern": "d-grid, grid-cols-[1,2,3,4,5,6,7,8,9,10,11,12,none,auto-fit-200,auto-fit-250,auto-fit-300], grid-rows-[1,2,3,4,5,6,none]"
    },
    "elevation": {
      "description": "Elevation and shadow utility classes for depth",
      "aiHint": "Use elevation-4 for cards, elevation-8 for modals, elevation-12 for floating elements. Add hover: hover:elevation-6",
      "extrapolation": "hover:elevation-[...], focus:elevation-[...], active:elevation-[...]",
      "pattern": "elevation-[0,1,2,3,4,6,8,12,16,24], shadow-[sm,md,lg,xl,2xl,inner,none]"
    },
    "positioning": {
      "description": "Positioning utility classes",
      "aiHint": "Use position-relative for relative positioning, position-absolute for absolute, z-50 for high z-index",
      "extrapolation": "bottom-[...], left-[...], right-[...], inset-[0,1,2,3,4,6,8,12,16,24,auto], inset-x-[...], inset-y-[...]",
      "pattern": "position-[static,relative,absolute,fixed,sticky], top-[0,1,2,3,4,6,8,12,16,24,auto], z-[0,10,20,30,40,50,auto]"
    },
    "interactive": {
      "description": "Interactive utility classes for user interaction",
      "aiHint": "Use cursor-pointer for clickable elements, user-select-none to prevent selection, pointer-events-none to disable interaction",
      "extrapolation": "hover:cursor-[...], focus:cursor-[...], active:cursor-[...]",
      "pattern": "cursor-[auto,default,pointer,wait,text,move,help,not-allowed], user-select-[auto,all,text,none], pointer-events-[auto,none]"
    }
  },
  "cssVariables": {
    "spacing": {
      "description": "Spacing scale variables",
      "aiHint": "Use --space-4 for standard spacing, --space-8 for larger gaps",
      "pattern": "--space-{0,1,2,3,4,6,8,12,16,24}"
    },
    "colors": {
      "description": "Semantic color variables",
      "aiHint": "Use --color-primary for brand colors, --color-text-primary for main text",
      "pattern": "--color-{category}-{variant}"
    }
  },
  "aiPatterns": [
    {
      "aiHint": "Use Primary variant for the main action user should take",
      "category": "Forms",
      "code": "<RButton Text=\"Save\" Variant=\"ButtonVariant.Primary\" Icon=\"save\" IconPosition=\"IconPosition.Start\" />",
      "prompt": "Create a primary action button for form submission",
      "name": "Primary Action Button",
      "useCase": "Form submission, primary actions, CTAs"
    },
    {
      "aiHint": "Always use Danger variant and RequiresConfirmation for destructive actions",
      "category": "Forms",
      "code": "<RButton Text=\"Delete\" Variant=\"ButtonVariant.Danger\" Icon=\"delete\" RequiresConfirmation=\"true\" />",
      "prompt": "Create a destructive action button for delete operations",
      "name": "Destructive Action Button",
      "useCase": "Delete operations, destructive actions"
    },
    {
      "aiHint": "Use Loading parameter to prevent double-clicks during async operations",
      "category": "Async",
      "code": "<RButton Text=\"Save\" Loading=\"@isLoading\" LoadingText=\"Saving...\" Variant=\"ButtonVariant.Primary\" />",
      "prompt": "Create a button that shows loading state during async operations",
      "name": "Loading Button",
      "useCase": "Async operations, API calls, long-running processes"
    }
  ]
}
