{
  "utilityPatterns": {
    "mixins": {
      "responsive-between": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include responsive-between for consistent styling",
        "pattern": "@include responsive-between"
      },
      "card-base": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include card-base for consistent styling",
        "pattern": "@include card-base"
      },
      "flex-end": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include flex-end for consistent styling",
        "pattern": "@include flex-end"
      },
      "element": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include element for consistent styling",
        "pattern": "@include element"
      },
      "button-reset": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include button-reset for consistent styling",
        "pattern": "@include button-reset"
      },
      "component-base": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include component-base for consistent styling",
        "pattern": "@include component-base"
      },
      "flex-center": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include flex-center for consistent styling",
        "pattern": "@include flex-center"
      },
      "close-button": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include close-button for consistent styling",
        "pattern": "@include close-button"
      },
      "container-fluid-base": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include container-fluid-base for consistent styling",
        "pattern": "@include container-fluid-base"
      },
      "text-heading-2xl": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include text-heading-2xl for consistent styling",
        "pattern": "@include text-heading-2xl"
      },
      "button-hover": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include button-hover for consistent styling",
        "pattern": "@include button-hover"
      },
      "breakpoint": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include breakpoint for consistent styling",
        "pattern": "@include breakpoint"
      },
      "responsive": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include responsive for consistent styling",
        "pattern": "@include responsive"
      },
      "modifier": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include modifier for consistent styling",
        "pattern": "@include modifier"
      },
      "touch-friendly": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include touch-friendly for consistent styling",
        "pattern": "@include touch-friendly"
      },
      "text-heading-lg": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include text-heading-lg for consistent styling",
        "pattern": "@include text-heading-lg"
      },
      "responsive-max": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include responsive-max for consistent styling",
        "pattern": "@include responsive-max"
      },
      "hover-lift-enhanced": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include hover-lift-enhanced for consistent styling",
        "pattern": "@include hover-lift-enhanced"
      },
      "responsive-min": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include responsive-min for consistent styling",
        "pattern": "@include responsive-min"
      },
      "form-control": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include form-control for consistent styling",
        "pattern": "@include form-control"
      },
      "grid-auto-fill": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include grid-auto-fill for consistent styling",
        "pattern": "@include grid-auto-fill"
      },
      "loading-spinner": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include loading-spinner for consistent styling",
        "pattern": "@include loading-spinner"
      },
      "text-caption": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include text-caption for consistent styling",
        "pattern": "@include text-caption"
      },
      "text-body": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include text-body for consistent styling",
        "pattern": "@include text-body"
      },
      "container-responsive": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include container-responsive for consistent styling",
        "pattern": "@include container-responsive"
      },
      "glass-base": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include glass-base for consistent styling",
        "pattern": "@include glass-base"
      },
      "empty-container-styles": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include empty-container-styles for consistent styling",
        "pattern": "@include empty-container-styles"
      },
      "grid-auto-fit": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include grid-auto-fit for consistent styling",
        "pattern": "@include grid-auto-fit"
      },
      "text-heading-sm": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include text-heading-sm for consistent styling",
        "pattern": "@include text-heading-sm"
      },
      "hover-lift": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include hover-lift for consistent styling",
        "pattern": "@include hover-lift"
      },
      "heading-base": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include heading-base for consistent styling",
        "pattern": "@include heading-base"
      },
      "inline-flex-center": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include inline-flex-center for consistent styling",
        "pattern": "@include inline-flex-center"
      },
      "loading-skeleton": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include loading-skeleton for consistent styling",
        "pattern": "@include loading-skeleton"
      },
      "flex-start": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include flex-start for consistent styling",
        "pattern": "@include flex-start"
      },
      "grid-cards": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include grid-cards for consistent styling",
        "pattern": "@include grid-cards"
      },
      "text-clamp": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include text-clamp for consistent styling",
        "pattern": "@include text-clamp"
      },
      "container": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include container for consistent styling",
        "pattern": "@include container"
      },
      "card-styles": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include card-styles for consistent styling",
        "pattern": "@include card-styles"
      },
      "responsive-grid": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include responsive-grid for consistent styling",
        "pattern": "@include responsive-grid"
      },
      "hover-animation": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include hover-animation for consistent styling",
        "pattern": "@include hover-animation"
      },
      "fixed-full": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include fixed-full for consistent styling",
        "pattern": "@include fixed-full"
      },
      "container-base": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include container-base for consistent styling",
        "pattern": "@include container-base"
      },
      "absolute-fill": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include absolute-fill for consistent styling",
        "pattern": "@include absolute-fill"
      },
      "status-variant": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include status-variant for consistent styling",
        "pattern": "@include status-variant"
      },
      "text-sm": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include text-sm for consistent styling",
        "pattern": "@include text-sm"
      },
      "text-body-lg": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include text-body-lg for consistent styling",
        "pattern": "@include text-body-lg"
      },
      "text-truncate": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include text-truncate for consistent styling",
        "pattern": "@include text-truncate"
      },
      "text-heading-xl": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include text-heading-xl for consistent styling",
        "pattern": "@include text-heading-xl"
      },
      "text-heading-md": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include text-heading-md for consistent styling",
        "pattern": "@include text-heading-md"
      },
      "flex-between": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include flex-between for consistent styling",
        "pattern": "@include flex-between"
      },
      "flex-column": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include flex-column for consistent styling",
        "pattern": "@include flex-column"
      },
      "card-hover": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include card-hover for consistent styling",
        "pattern": "@include card-hover"
      },
      "focus-ring": {
        "description": "SCSS mixin for reusable styles",
        "aiHint": "Use @include focus-ring for consistent styling",
        "pattern": "@include focus-ring"
      }
    }
  },
  "bestPractices": {
    "accessibility": {
      "colors": "All color combinations meet WCAG AA contrast requirements",
      "touchTargets": "Minimum 44px touch targets for mobile",
      "focus": "Focus rings automatically applied to interactive elements"
    },
    "layoutPatterns": {
      "statsGrid": "stats-grid gap-6 mb-8",
      "formSection": "bg-elevated pa-4 rounded-md border border-light",
      "professionalCard": "elevation-4 glass-light pa-6 rounded-lg",
      "headerLayout": "d-flex justify-between align-center py-3 px-4"
    },
    "componentUsage": {
      "forms": "Use form-grid--2 for dual-column layouts, Required=\"true\" for mandatory fields",
      "buttons": "Use ButtonVariant.Primary for main actions, Secondary for supporting actions, Danger for destructive actions",
      "spacing": "Use pa-6 for card content, gap-4 for flex layouts, mb-4 for standard element separation",
      "cards": "Use RCard for content containers, combine with elevation-4 and glass-light for professional appearance"
    }
  },
  "components": {
    "RMessageModal": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Feedback/RMessageModal.razor",
      "aiPrompt": "",
      "name": "RMessageModal",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RNavMenu": {
      "patterns": {
        "badge-nav": "NavMenuItem with Badge for notifications and counts",
        "collapsible-nav": "Responsive to SidebarCollapsed cascading parameter",
        "basic-nav": "Items list with NavMenuItem objects for simple navigation",
        "hierarchical-nav": "NavMenuItem with Children for nested menu structure"
      },
      "parameters": {},
      "filePath": "/Components/Navigation/RNavMenu.razor",
      "aiPrompt": "Create navigation menu for app sidebar",
      "name": "RNavMenu",
      "commonUse": "sidebar navigation, main menu, hierarchical navigation, app structure",
      "description": "Professional navigation menu component for sidebar and main navigation with hierarchical support. Supports collapsible groups, badges, icons, and responsive behavior for enterprise applications.",
      "category": "Navigation",
      "complexity": "Complex",
      "avoidUsage": "Don't use for breadcrumbs - use RBreadcrumbs instead. Avoid for action menus - use RDropdown."
    },
    "RListItem": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Data/RListItem.razor",
      "aiPrompt": "",
      "name": "RListItem",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RTabItem": {
      "patterns": {
        "badge-tab": "BadgeCount for notification indicators",
        "closable-tab": "Closable=\"true\" for removable tabs",
        "basic-tab": "Text and ChildContent for simple tab item",
        "icon-tab": "Icon=\"icon_name\" for tab with icon"
      },
      "parameters": {},
      "filePath": "/Components/Navigation/RTabItem.razor",
      "aiPrompt": "Create individual tab item for RTabs container",
      "name": "RTabItem",
      "commonUse": "tab content organization, document tabs, settings sections",
      "description": "Individual tab item component for RTabs container with icon, badge, and content support. Supports closable tabs, disabled states, and badge notifications for professional tab experiences.",
      "category": "Navigation",
      "complexity": "Simple",
      "avoidUsage": "Don't use outside RTabs container. Use RButton for standalone buttons."
    },
    "RButton": {
      "patterns": {
        "icon-button": "Icon=\"icon_name\" IconPosition=\"IconPosition.Start\" for buttons with icons",
        "loading-button": "Loading=\"true\" LoadingText=\"Processing...\" for async operations",
        "destructive-action": "Variant=\"ButtonVariant.Danger\" for destructive actions like Delete, Remove",
        "primary-action": "Variant=\"ButtonVariant.Primary\" for main actions like Save, Submit, Create",
        "secondary-action": "Variant=\"ButtonVariant.Secondary\" for supporting actions like Cancel, Back"
      },
      "parameters": {},
      "filePath": "/Components/Core/RButton.razor",
      "aiPrompt": "Create a professional button for user actions",
      "name": "RButton",
      "commonUse": "forms, navigation, actions, toolbars, dashboards",
      "description": "Professional button component with enterprise variants, AI-optimized for rapid development. Supports 9 variants, 5 sizes, loading states, elevation effects, and comprehensive accessibility.",
      "category": "Core",
      "complexity": "Simple",
      "avoidUsage": "Don't use for navigation links - use RLink instead. Avoid for simple text without actions."
    },
    "RDatePicker": {
      "patterns": {
        "datetime": "@bind-Value=\"dateTime\" ShowTime=\"true\" Use24HourFormat=\"false\"",
        "business-days": "DisabledDaysOfWeek=\"@weekends\" MinDate=\"@DateTime.Today\"",
        "date-only": "@bind-Value=\"selectedDate\" ShowTime=\"false\"",
        "restricted-dates": "MinDate=\"@DateTime.Today\" MaxDate=\"@futureDate\"",
        "date-range": "@bind-Value=\"startDate\" @bind-EndValue=\"endDate\" Range=\"true\""
      },
      "parameters": {},
      "filePath": "/Components/Form/RDatePicker.razor",
      "aiPrompt": "Create a date/time picker with calendar popup and validation",
      "name": "RDatePicker",
      "commonUse": "date selection, appointment scheduling, event planning, form dates",
      "description": "Professional date and time picker with calendar popup and time selection",
      "category": "Form",
      "complexity": "Complex",
      "avoidUsage": "Don't use for simple date input - use RDatePickerBasic instead"
    },
    "RTimeline": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Display/RTimeline.razor",
      "aiPrompt": "",
      "name": "RTimeline",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RDataTableColumn": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Data/RDataTableColumn.razor",
      "aiPrompt": "",
      "name": "RDataTableColumn",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RStatsCard": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Display/RStatsCard.razor",
      "aiPrompt": "",
      "name": "RStatsCard",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RModal": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Feedback/RModal.razor",
      "aiPrompt": "",
      "name": "RModal",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "REmptyState": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Display/REmptyState.razor",
      "aiPrompt": "",
      "name": "REmptyState",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RMetric": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Display/RMetric.razor",
      "aiPrompt": "",
      "name": "RMetric",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RProgressBar": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Display/RProgressBar.razor",
      "aiPrompt": "",
      "name": "RProgressBar",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RBadge": {
      "patterns": {
        "clickable-badge": "Clickable=\"true\" OnClick=\"HandleClick\" for interactive badges",
        "status-badge": "Text=\"Active\" Variant=\"BadgeVariant.Success\" for status indicators",
        "count-badge": "Text=\"5\" Variant=\"BadgeVariant.Primary\" for notification counts",
        "warning-badge": "Text=\"Pending\" Variant=\"BadgeVariant.Warning\" for attention states"
      },
      "parameters": {},
      "filePath": "/Components/Core/RBadge.razor",
      "aiPrompt": "Create a professional badge for status or count display",
      "name": "RBadge",
      "commonUse": "status indicators, counts, labels, notifications, tags",
      "description": "Professional badge component for status indicators, counts, and labels. Supports multiple variants, sizes, and interactive states with enterprise-grade styling.",
      "category": "Core",
      "complexity": "Simple",
      "avoidUsage": "Don't use for navigation buttons - use RButton instead. Avoid for large text content."
    },
    "RFilterBar": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Data/RFilterBar.razor",
      "aiPrompt": "",
      "name": "RFilterBar",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RCard": {
      "patterns": {
        "loading-card": "IsLoading=\"true\" LoadingText=\"Processing...\" for async operations",
        "basic-card": "Title=\"Card Title\" Content=\"Card content\" for simple content cards",
        "clickable-card": "IsClickable=\"true\" OnClick=\"HandleClick\" for interactive cards",
        "elevated-card": "Elevation=\"4\" for cards that need prominence",
        "media-card": "ImageSrc=\"/image.jpg\" ImageAlt=\"Description\" for cards with images"
      },
      "parameters": {},
      "filePath": "/Components/Core/RCard.razor",
      "aiPrompt": "Create a professional card for content display",
      "name": "RCard",
      "commonUse": "dashboards, data display, content organization, information panels",
      "description": "Professional card component for content containers with business-grade variants. Supports header, media, content areas, loading states, elevation effects, and comprehensive interaction patterns.",
      "category": "Core",
      "complexity": "Simple",
      "avoidUsage": "Don't use for navigation - use RLink instead. Avoid for simple text without structure."
    },
    "RSelectModal": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Feedback/RSelectModal.razor",
      "aiPrompt": "",
      "name": "RSelectModal",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RSwitcher": {
      "patterns": {
        "pill-switcher": "Items=\"@options\" Variant=\"SwitcherVariant.Pills\"",
        "button-group": "Items=\"@actions\" Variant=\"SwitcherVariant.Buttons\"",
        "tab-switcher": "Items=\"@tabItems\" ShowLabels=\"true\" Variant=\"SwitcherVariant.Tabs\"",
        "compact-switcher": "Items=\"@items\" Variant=\"SwitcherVariant.Compact\" Size=\"SwitcherSize.Small\""
      },
      "parameters": {},
      "filePath": "/Components/Form/RSwitcher.razor",
      "aiPrompt": "Create a switcher for selecting between multiple options or states",
      "name": "RSwitcher",
      "commonUse": "tab switching, view toggles, option selection, filters",
      "description": "Professional switcher component for toggling between multiple options",
      "category": "Form",
      "complexity": "Intermediate",
      "avoidUsage": "Don't use for simple on/off toggles - use checkbox instead"
    },
    "RFormField": {
      "patterns": {
        "required-field": "Required=\"true\" ShowRequiredIndicator=\"true\"",
        "text-input": "FieldType=\"FieldType.Text\" for basic text input",
        "file-upload": "FieldType=\"FieldType.File\" with AcceptTypes",
        "checkbox-field": "FieldType=\"FieldType.Checkbox\" with CheckboxText",
        "password-field": "FieldType=\"FieldType.Password\" with strength indicators",
        "email-field": "FieldType=\"FieldType.Email\" Required=\"true\" for email validation",
        "select-dropdown": "FieldType=\"FieldType.Select\" with SelectOptions",
        "floating-label": "Variant=\"FieldVariant.FloatingLabel\" for modern forms"
      },
      "parameters": {},
      "filePath": "/Components/Form/RFormField.razor",
      "aiPrompt": "Create a professional form field for user input with validation",
      "name": "RFormField",
      "commonUse": "text input, email validation, password fields, dropdowns, checkboxes, file uploads",
      "description": "Universal form field component with professional validation and utility-first CSS",
      "category": "Form",
      "complexity": "Complex",
      "avoidUsage": "Don't use for display-only data or readonly content"
    },
    "RForm": {
      "patterns": {
        "dense-form": "Density=\"FormDensity.Dense\" for compact layouts",
        "settings-form": "Layout=\"FormLayout.Executive\" ShowFormHeader=\"true\"",
        "modal-form": "Layout=\"FormLayout.Modal\" ShowDefaultActions=\"true\"",
        "basic-form": "Model=\"@myModel\" OnValidSubmit=\"HandleSubmit\"",
        "registration-form": "Title=\"Sign Up\" ValidationMode=\"ValidationMode.DataAnnotations\""
      },
      "parameters": {},
      "filePath": "/Components/Form/RForm.razor",
      "aiPrompt": "Create a professional form container with validation and submission handling",
      "name": "RForm",
      "commonUse": "user registration, data entry, settings forms, contact forms",
      "description": "Professional form component with validation, state management, and accessibility",
      "category": "Form",
      "complexity": "Complex",
      "avoidUsage": "Don't use for simple single-field inputs or display-only content"
    },
    "RDivider": {
      "patterns": {
        "styled-divider": "Style=\"DividerStyle.Dashed\" for different visual styles",
        "simple-divider": "No parameters for basic horizontal line",
        "section-divider": "Text=\"Settings\" for labeled sections",
        "vertical-divider": "Variant=\"DividerVariant.Vertical\" for inline separation"
      },
      "parameters": {},
      "filePath": "/Components/Core/RDivider.razor",
      "aiPrompt": "Create a professional divider for visual separation",
      "name": "RDivider",
      "commonUse": "section separation, menu dividers, form sections, content organization",
      "description": "Professional divider component for visual separation with text support and multiple styles. Supports horizontal/vertical orientation, customizable styling, and automatic menu integration.",
      "category": "Core",
      "complexity": "Simple",
      "avoidUsage": "Don't overuse - only for logical content separation. Avoid decorative usage."
    },
    "RAccordion": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Display/RAccordion.razor",
      "aiPrompt": "",
      "name": "RAccordion",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RThemeProvider": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Core/RThemeProvider.razor",
      "aiPrompt": "",
      "name": "RThemeProvider",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RThemeSwitcher": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Core/RThemeSwitcher.razor",
      "aiPrompt": "",
      "name": "RThemeSwitcher",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RSummaryItem": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Display/RSummaryItem.razor",
      "aiPrompt": "",
      "name": "RSummaryItem",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RConfirmModal": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Feedback/RConfirmModal.razor",
      "aiPrompt": "",
      "name": "RConfirmModal",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RAccordionItem": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Display/RAccordionItem.razor",
      "aiPrompt": "",
      "name": "RAccordionItem",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RActionGroup": {
      "patterns": {
        "space-between": "Alignment=\"ActionGroupAlignment.SpaceBetween\" for opposing actions",
        "toolbar-actions": "Direction=\"ActionGroupDirection.Horizontal\" Spacing=\"ActionGroupSpacing.Small\" for compact toolbars",
        "form-actions": "Alignment=\"ActionGroupAlignment.End\" for form Save/Cancel buttons",
        "vertical-menu": "Direction=\"ActionGroupDirection.Vertical\" FullWidth=\"true\" for dropdown menus"
      },
      "parameters": {},
      "filePath": "/Components/Core/RActionGroup.razor",
      "aiPrompt": "Create a professional action group for organizing buttons",
      "name": "RActionGroup",
      "commonUse": "form actions, toolbar buttons, navigation controls, modal actions",
      "description": "Professional action group component for organizing multiple buttons with consistent spacing and alignment. Supports horizontal/vertical layouts, responsive behavior, and flexible alignment options.",
      "category": "Core",
      "complexity": "Simple",
      "avoidUsage": "Don't use for single buttons - use RButton directly. Avoid for non-action content."
    },
    "RList": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Data/RList.razor",
      "aiPrompt": "",
      "name": "RList",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RFormModal": {
      "patterns": {
        "auto-form": "InitialData=\"@model\" OnSave=\"HandleSave\"",
        "validation-form": "OnValidate=\"ValidateModel\" ShowValidationSummary=\"true\"",
        "custom-form": "FormComponent=\"@typeof(MyFormComponent)\""
      },
      "parameters": {},
      "filePath": "/Components/Feedback/RFormModal.razor",
      "aiPrompt": "Create a modal with auto-generated form fields from a model",
      "name": "RFormModal",
      "commonUse": "quick edit modals, auto-generated forms, dynamic data entry",
      "description": "Generic form modal component for dynamic form generation and validation",
      "category": "Form",
      "complexity": "Complex",
      "avoidUsage": "Don't use for complex custom forms - create dedicated form components instead"
    },
    "RDatePickerBasic": {
      "patterns": {
        "future-date": "@bind-Value=\"futureDate\" MinDate=\"@DateTime.Today\"",
        "basic-date": "@bind-Value=\"date\" Label=\"Select Date\"",
        "datetime-input": "@bind-Value=\"dateTime\" ShowTime=\"true\"",
        "required-date": "@bind-Value=\"requiredDate\" Required=\"true\" HasError=\"@(!date.HasValue)\""
      },
      "parameters": {},
      "filePath": "/Components/Form/RDatePickerBasic.razor",
      "aiPrompt": "Create a simple HTML5 date picker input",
      "name": "RDatePickerBasic",
      "commonUse": "simple date input, forms, basic date selection",
      "description": "Simplified HTML5 date picker for basic date input scenarios",
      "category": "Form",
      "complexity": "Simple",
      "avoidUsage": "Don't use for complex date ranges or when calendar popup is needed"
    },
    "RToastContainer": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Feedback/RToastContainer.razor",
      "aiPrompt": "",
      "name": "RToastContainer",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RPreviewModal": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Feedback/RPreviewModal.razor",
      "aiPrompt": "",
      "name": "RPreviewModal",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RSectionDivider": {
      "patterns": {
        "titled-section": "Title=\"User Settings\" Icon=\"settings\" for labeled content sections",
        "prominent-section": "Size=\"SectionDividerSize.Large\" Variant=\"SectionDividerVariant.Primary\" for important sections",
        "centered-section": "Alignment=\"SectionDividerAlignment.Center\" for balanced layouts",
        "compact-divider": "Size=\"SectionDividerSize.Compact\" for tight layouts"
      },
      "parameters": {},
      "filePath": "/Components/Core/RSectionDivider.razor",
      "aiPrompt": "Create a professional section divider for content organization",
      "name": "RSectionDivider",
      "commonUse": "page sections, form organization, content separation, feature grouping",
      "description": "Professional section divider component for organizing content areas with titles, icons, and visual separation. Supports multiple sizes, alignments, and semantic variants with enterprise-grade styling.",
      "category": "Core",
      "complexity": "Simple",
      "avoidUsage": "Don't overuse - only for logical section breaks. Avoid for simple line separation."
    },
    "RDataTable": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Data/RDataTable.razor",
      "aiPrompt": "",
      "name": "RDataTable",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RInfoItem": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Display/RInfoItem.razor",
      "aiPrompt": "",
      "name": "RInfoItem",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RModalProvider": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Feedback/RModalProvider.razor",
      "aiPrompt": "",
      "name": "RModalProvider",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RVirtualList": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Data/RVirtualList.razor",
      "aiPrompt": "",
      "name": "RVirtualList",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RFileUpload": {
      "patterns": {
        "document-upload": "AllowedTypes=\"new[] { \\\".pdf\\\", \\\".docx\\\" }\" MaxSize=\"10MB\"",
        "multiple-files": "Multiple=\"true\" MaxFiles=\"5\" ShowPreview=\"true\"",
        "inline-mode": "DisplayMode=\"RFileUploadDisplayMode.Inline\" ShowPreview=\"false\"",
        "image-upload": "AllowedTypes=\"new[] { \\\".jpg\\\", \\\".png\\\" }\" GenerateThumbnails=\"true\"",
        "button-mode": "DisplayMode=\"RFileUploadDisplayMode.Button\" ButtonText=\"Upload Files\""
      },
      "parameters": {},
      "filePath": "/Components/Form/RFileUpload.razor",
      "aiPrompt": "Create a file upload component with drag-drop and file validation",
      "name": "RFileUpload",
      "commonUse": "document upload, image upload, file attachments, media upload",
      "description": "Professional file upload component with drag-drop, validation, and preview",
      "category": "Form",
      "complexity": "Complex",
      "avoidUsage": "Don't use for simple text input or when files are not needed"
    },
    "RDetailModal": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Feedback/RDetailModal.razor",
      "aiPrompt": "",
      "name": "RDetailModal",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RFormSection": {
      "patterns": {
        "collapsible-section": "Title=\"Advanced Settings\" IsCollapsible=\"true\"",
        "icon-section": "Title=\"Contact Info\" Icon=\"contact_mail\"",
        "basic-section": "Title=\"Personal Information\" FieldColumns=\"2\"",
        "elevated-section": "Title=\"Important Details\" Elevation=\"SectionElevation.Medium\""
      },
      "parameters": {},
      "filePath": "/Components/Form/RFormSection.razor",
      "aiPrompt": "Create a form section with header and organized field layout",
      "name": "RFormSection",
      "commonUse": "form organization, grouped fields, collapsible sections, multi-step forms",
      "description": "Professional form section container with collapsible header and grid layout",
      "category": "Form",
      "complexity": "Intermediate",
      "avoidUsage": "Don't use for single fields or when no grouping is needed"
    },
    "RTabs": {
      "patterns": {
        "badge-tabs": "BadgeCount on RTabItem for notification indicators",
        "basic-tabs": "RTabs with RTabItem children for content organization",
        "closable-tabs": "IsClosable=\"true\" on RTabItem for document-style tabs",
        "card-tabs": "Variant=\"TabsVariant.Card\" for separated tab sections",
        "pills-tabs": "Variant=\"TabsVariant.Pills\" for compact tab layouts"
      },
      "parameters": {},
      "filePath": "/Components/Navigation/RTabs.razor",
      "aiPrompt": "Create professional tabs for content organization",
      "name": "RTabs",
      "commonUse": "dashboards, forms, data views, settings panels, multi-step workflows",
      "description": "Professional tab container for organizing content with smooth animations and enterprise styling. Supports multiple variants, badges, closable tabs, keyboard navigation, and accessibility.",
      "category": "Navigation",
      "complexity": "Complex",
      "avoidUsage": "Don't use for navigation breadcrumbs - use RBreadcrumbs instead. Avoid for simple toggles."
    },
    "RDropdown": {
      "patterns": {
        "searchable-dropdown": "Filterable items with search functionality",
        "action-dropdown": "Button trigger with action items for context menus",
        "basic-dropdown": "Items list with TriggerContent for basic selection",
        "loading-dropdown": "IsLoading=\"true\" for async data loading"
      },
      "parameters": {},
      "filePath": "/Components/Navigation/RDropdown.razor",
      "aiPrompt": "Create dropdown menu for item selection",
      "name": "RDropdown",
      "commonUse": "select menus, action menus, option lists, context menus",
      "description": "Professional dropdown component for item selection with keyboard navigation and accessibility. Supports custom triggers, loading states, search filtering, and flexible item rendering.",
      "category": "Navigation",
      "complexity": "Complex",
      "avoidUsage": "Don't use for simple text inputs - use RFormField instead. Avoid for navigation - use RNavMenu."
    },
    "RConfirmationModal": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Feedback/RConfirmationModal.razor",
      "aiPrompt": "",
      "name": "RConfirmationModal",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RAppShell": {
      "patterns": {
        "full-enterprise": "All parameters for complete enterprise application",
        "zero-config": "Title only for minimal app setup",
        "responsive-shell": "Auto-responsive sidebar and mobile-friendly behavior",
        "dashboard-layout": "NavigationItems + CurrentUser for admin dashboards"
      },
      "parameters": {},
      "filePath": "/Components/Layout/RAppShell.razor",
      "aiPrompt": "Create complete app layout with header and sidebar",
      "name": "RAppShell",
      "commonUse": "main app layout, admin dashboards, enterprise applications, SaaS platforms",
      "description": "Complete application shell with header, sidebar, navigation, search, and theme support. Zero-config setup for enterprise Blazor applications with professional styling and full responsiveness.",
      "category": "Layout",
      "complexity": "Complex",
      "avoidUsage": "Don't use for simple pages without navigation. Use RSection for content organization instead."
    },
    "RSkeleton": {
      "patterns": {},
      "parameters": {},
      "filePath": "/Components/Display/RSkeleton.razor",
      "aiPrompt": "",
      "name": "RSkeleton",
      "commonUse": "",
      "description": "",
      "category": "Unknown",
      "complexity": "Simple",
      "avoidUsage": ""
    },
    "RAvatar": {
      "patterns": {
        "clickable-avatar": "IsClickable=\"true\" OnClick=\"HandleClick\" for interactive avatars",
        "initials-avatar": "Text=\"JD\" Variant=\"AvatarVariant.Primary\" for text-based avatars",
        "notification-avatar": "ShowBadge=\"true\" BadgeCount=\"3\" for unread counts",
        "status-avatar": "ShowStatus=\"true\" Status=\"AvatarStatus.Online\" for presence indicators",
        "user-avatar": "ImageSrc=\"/avatar.jpg\" Alt=\"User Name\" for profile pictures"
      },
      "parameters": {},
      "filePath": "/Components/Core/RAvatar.razor",
      "aiPrompt": "Create a professional avatar for user representation",
      "name": "RAvatar",
      "commonUse": "user profiles, team members, contact lists, navigation headers",
      "description": "Professional avatar component for user representation with status indicators and interactive features. Supports images, initials, icons, status badges, and notification counts with responsive sizing.",
      "category": "Core",
      "complexity": "Simple",
      "avoidUsage": "Don't use for decorative icons - use Icon component instead. Avoid for non-user content."
    },
    "RSection": {
      "patterns": {
        "collapsible-section": "IsCollapsible=\"true\" for expandable content panels",
        "icon-section": "Icon and Title for branded section headers",
        "basic-section": "Title and ChildContent for simple content sections",
        "action-section": "TitleContent for sections with header actions"
      },
      "parameters": {},
      "filePath": "/Components/Layout/RSection.razor",
      "aiPrompt": "Create content section with header and body",
      "name": "RSection",
      "commonUse": "page sections, content organization, collapsible panels, form groups",
      "description": "Professional content section component with header, collapsible content, and footer areas. Ideal for organizing page content with consistent styling and optional interactive features.",
      "category": "Layout",
      "complexity": "Simple",
      "avoidUsage": "Don't use for main app layout - use RAppShell instead. Avoid for simple content without headers."
    },
    "RBreadcrumbs": {
      "patterns": {
        "custom-separator": "Separator or SeparatorIcon for custom dividers",
        "responsive-breadcrumbs": "CollapsibleOnMobile for mobile-friendly navigation",
        "basic-breadcrumbs": "Items list with BreadcrumbItem objects",
        "icon-breadcrumbs": "BreadcrumbItem with Icon property for visual hierarchy"
      },
      "parameters": {},
      "filePath": "/Components/Navigation/RBreadcrumbs.razor",
      "aiPrompt": "Create breadcrumb navigation for page hierarchy",
      "name": "RBreadcrumbs",
      "commonUse": "page navigation, hierarchy display, user location indication",
      "description": "Professional breadcrumb navigation component for showing page hierarchy and navigation paths. Supports icons, custom separators, responsive collapsing, and accessibility features.",
      "category": "Navigation",
      "complexity": "Simple",
      "avoidUsage": "Don't use for primary navigation - use RNavMenu instead. Avoid for single-level pages."
    }
  },
  "cssVariables": {
    "--color-{variants}": {
      "aiHint": "Use --color-text-primary for main text, --color-background-elevated for cards",
      "pattern": "--color-{category}-{variant}",
      "variants": [
        "accent-cyan",
        "accent-purple",
        "background-elevated",
        "background-glass",
        "background-modal",
        "background-overlay",
        "background-primary",
        "background-secondary",
        "border-light",
        "border-medium",
        "border-strong",
        "error",
        "error-bg",
        "focus-primary",
        "glass-heavy",
        "glass-light",
        "glass-medium",
        "info",
        "info-bg",
        "interactive-focus",
        "interactive-ghost",
        "interactive-ghost-hover",
        "interactive-hover",
        "interactive-primary",
        "interactive-primary-active",
        "interactive-primary-hover",
        "interactive-secondary",
        "interactive-secondary-hover",
        "neutral",
        "neutral-bg",
        "overlay-dark",
        "overlay-light",
        "overlay-medium",
        "success",
        "success-bg",
        "text-accent",
        "text-inverse",
        "text-on-error",
        "text-on-info",
        "text-on-primary",
        "text-on-secondary",
        "text-on-success",
        "text-on-warning",
        "text-primary",
        "text-quaternary",
        "text-secondary",
        "text-tertiary",
        "warning",
        "warning-bg"
      ]
    },
    "--font-{variants}": {
      "aiHint": "Typography scale and font properties",
      "pattern": "--font-{property}",
      "variants": [
        "black",
        "bold",
        "extrabold",
        "extralight",
        "family-mono",
        "family-primary",
        "family-secondary",
        "light",
        "medium",
        "normal",
        "semibold",
        "thin"
      ]
    },
    "--shadow-{variants}": {
      "aiHint": "Elevation shadow system",
      "pattern": "--shadow-{level}",
      "variants": [
        "2xl",
        "lg",
        "md",
        "sm",
        "xl"
      ]
    },
    "--space-{sizes}": {
      "aiHint": "Standard spacing scale for consistent layouts",
      "pattern": "--space-{size}",
      "sizes": [
        "0",
        "0-5",
        "1",
        "1-5",
        "10",
        "11",
        "12",
        "14",
        "16",
        "2",
        "2-5",
        "20",
        "24",
        "28",
        "3",
        "3-5",
        "32",
        "36",
        "4",
        "40",
        "44",
        "48",
        "5",
        "52",
        "56",
        "6",
        "60",
        "64",
        "7",
        "72",
        "8",
        "80",
        "9",
        "96",
        "px"
      ]
    },
    "--radius-{variants}": {
      "aiHint": "Border radius scale",
      "pattern": "--radius-{size}",
      "variants": [
        "2xl",
        "full",
        "lg",
        "md",
        "none",
        "sm",
        "xl"
      ]
    }
  },
  "aiPatterns": [
    {
      "prompt": "Create a professional metrics card for executive dashboard",
      "useCase": "dashboards, analytics, metrics display",
      "code": "<RCard Title=\"Revenue\" Elevation=\"4\" class=\"glass-light\"><div class=\"pa-6\"><div class=\"d-flex justify-between align-center\"><span class=\"text-2xl font-bold\">$42,580</span><RBadge Text=\"+12%\" Variant=\"Success\" /></div></div></RCard>",
      "name": "Executive Dashboard Widget",
      "category": "Business"
    },
    {
      "prompt": "Create organized form section with validation",
      "useCase": "forms, data entry, user management",
      "code": "<RForm TModel=\"AccountSetupModel\" ValidationMode=\"Hybrid\"><FormFields><RFormField FieldType=\"Email\" Label=\"Email\" Size=\"Large\" Variant=\"FloatingLabel\" StartIcon=\"email\" /></FormFields></RForm>",
      "name": "Form Section Layout",
      "category": "Forms"
    },
    {
      "prompt": "Create table with search and actions",
      "useCase": "CRUD operations, data tables, management interfaces",
      "code": "<div class=\"d-flex justify-between mb-4\"><RFormField Type=\"Search\" class=\"flex-grow-1\" /><RButton Text=\"Add\" Variant=\"Primary\" /></div><RDataTable Items=\"@data\" class=\"elevation-2\" />",
      "name": "Data Management Interface",
      "category": "Data"
    },
    {
      "prompt": "Create elevated card with glassmorphism for account setup",
      "useCase": "account setup, login forms, professional cards",
      "code": "<RCard Elevation=\"8\" Class=\"glass-frost backdrop-blur-xl\"><div class=\"pa-2\"><h5 class=\"text-h6 font-semibold mb-0\">Title</h5><p class=\"text-caption text--secondary\">Description</p></div></RCard>",
      "name": "Professional Card with Glass Effect",
      "category": "Layout"
    },
    {
      "prompt": "Create password field with visibility toggle",
      "useCase": "password fields, secure inputs, icon interactions",
      "code": "<RFormField Label=\"Password\" FieldType=\"@(showPassword ? FieldType.Text : FieldType.Password)\" StartIcon=\"lock\" EndIcon=\"@(showPassword ? \\\"visibility_off\\\" : \\\"visibility\\\")\" OnEndIconClick=\"ToggleVisibility\" Size=\"Medium\" Required />",
      "name": "Form Field with Icons",
      "category": "Forms"
    },
    {
      "prompt": "Create section divider for form organization",
      "useCase": "form sections, content organization, visual hierarchy",
      "code": "<RSectionDivider Title=\"Security Setup\" Icon=\"security\" Variant=\"Primary\" Size=\"Compact\" ShowLine=\"true\" />",
      "name": "Section Divider with Icon",
      "category": "Layout"
    },
    {
      "prompt": "Create responsive two-column form grid",
      "useCase": "responsive forms, multi-column layouts, mobile-first design",
      "code": "<div class=\"d-grid gap-1 grid-cols-1 grid-cols-md-2\"><RFormField Label=\"First Name\" StartIcon=\"person\" /><RFormField Label=\"Last Name\" StartIcon=\"person\" /></div>",
      "name": "Responsive Grid Layout",
      "category": "Layout"
    },
    {
      "prompt": "Create button with loading state",
      "useCase": "form submission, async operations, loading states",
      "code": "<RButton Text=\"@(isProcessing ? \\\"Processing...\\\" : \\\"Submit\\\")\" Icon=\"@(isProcessing ? \\\"progress_activity\\\" : \\\"check\\\")\" Variant=\"Primary\" Elevation=\"4\" Loading=\"@isProcessing\" Disabled=\"@isProcessing\" Class=\"w-full\" />",
      "name": "Loading Button State",
      "category": "Interaction"
    }
  ]
}
