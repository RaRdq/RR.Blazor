{
  "utilityPatterns": {
    "mixins": {
      "text-heading-sm": {
        "pattern": "@include text-heading-sm",
        "aiHint": "Use @include text-heading-sm for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "responsive-grid": {
        "pattern": "@include responsive-grid",
        "aiHint": "Use @include responsive-grid for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "flex-column": {
        "pattern": "@include flex-column",
        "aiHint": "Use @include flex-column for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "container-base": {
        "pattern": "@include container-base",
        "aiHint": "Use @include container-base for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "grid-cards": {
        "pattern": "@include grid-cards",
        "aiHint": "Use @include grid-cards for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "breakpoint": {
        "pattern": "@include breakpoint",
        "aiHint": "Use @include breakpoint for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "button-hover": {
        "pattern": "@include button-hover",
        "aiHint": "Use @include button-hover for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "component-base": {
        "pattern": "@include component-base",
        "aiHint": "Use @include component-base for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "close-button": {
        "pattern": "@include close-button",
        "aiHint": "Use @include close-button for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "text-body-lg": {
        "pattern": "@include text-body-lg",
        "aiHint": "Use @include text-body-lg for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "hover-lift-enhanced": {
        "pattern": "@include hover-lift-enhanced",
        "aiHint": "Use @include hover-lift-enhanced for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "element": {
        "pattern": "@include element",
        "aiHint": "Use @include element for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "responsive-between": {
        "pattern": "@include responsive-between",
        "aiHint": "Use @include responsive-between for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "grid-auto-fit": {
        "pattern": "@include grid-auto-fit",
        "aiHint": "Use @include grid-auto-fit for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "text-sm": {
        "pattern": "@include text-sm",
        "aiHint": "Use @include text-sm for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "hover-animation": {
        "pattern": "@include hover-animation",
        "aiHint": "Use @include hover-animation for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "text-body": {
        "pattern": "@include text-body",
        "aiHint": "Use @include text-body for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "flex-center": {
        "pattern": "@include flex-center",
        "aiHint": "Use @include flex-center for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "card-base": {
        "pattern": "@include card-base",
        "aiHint": "Use @include card-base for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "hover-lift": {
        "pattern": "@include hover-lift",
        "aiHint": "Use @include hover-lift for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "empty-container-styles": {
        "pattern": "@include empty-container-styles",
        "aiHint": "Use @include empty-container-styles for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "container-responsive": {
        "pattern": "@include container-responsive",
        "aiHint": "Use @include container-responsive for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "text-heading-xl": {
        "pattern": "@include text-heading-xl",
        "aiHint": "Use @include text-heading-xl for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "container": {
        "pattern": "@include container",
        "aiHint": "Use @include container for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "card-styles": {
        "pattern": "@include card-styles",
        "aiHint": "Use @include card-styles for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "absolute-fill": {
        "pattern": "@include absolute-fill",
        "aiHint": "Use @include absolute-fill for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "text-clamp": {
        "pattern": "@include text-clamp",
        "aiHint": "Use @include text-clamp for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "text-truncate": {
        "pattern": "@include text-truncate",
        "aiHint": "Use @include text-truncate for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "card-hover": {
        "pattern": "@include card-hover",
        "aiHint": "Use @include card-hover for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "flex-between": {
        "pattern": "@include flex-between",
        "aiHint": "Use @include flex-between for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "grid-auto-fill": {
        "pattern": "@include grid-auto-fill",
        "aiHint": "Use @include grid-auto-fill for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "button-reset": {
        "pattern": "@include button-reset",
        "aiHint": "Use @include button-reset for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "responsive-min": {
        "pattern": "@include responsive-min",
        "aiHint": "Use @include responsive-min for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "loading-spinner": {
        "pattern": "@include loading-spinner",
        "aiHint": "Use @include loading-spinner for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "responsive-max": {
        "pattern": "@include responsive-max",
        "aiHint": "Use @include responsive-max for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "form-control": {
        "pattern": "@include form-control",
        "aiHint": "Use @include form-control for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "fixed-full": {
        "pattern": "@include fixed-full",
        "aiHint": "Use @include fixed-full for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "text-heading-lg": {
        "pattern": "@include text-heading-lg",
        "aiHint": "Use @include text-heading-lg for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "responsive": {
        "pattern": "@include responsive",
        "aiHint": "Use @include responsive for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "touch-friendly": {
        "pattern": "@include touch-friendly",
        "aiHint": "Use @include touch-friendly for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "status-variant": {
        "pattern": "@include status-variant",
        "aiHint": "Use @include status-variant for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "text-heading-md": {
        "pattern": "@include text-heading-md",
        "aiHint": "Use @include text-heading-md for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "text-heading-2xl": {
        "pattern": "@include text-heading-2xl",
        "aiHint": "Use @include text-heading-2xl for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "glass-base": {
        "pattern": "@include glass-base",
        "aiHint": "Use @include glass-base for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "container-fluid-base": {
        "pattern": "@include container-fluid-base",
        "aiHint": "Use @include container-fluid-base for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "focus-ring": {
        "pattern": "@include focus-ring",
        "aiHint": "Use @include focus-ring for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "flex-start": {
        "pattern": "@include flex-start",
        "aiHint": "Use @include flex-start for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "modifier": {
        "pattern": "@include modifier",
        "aiHint": "Use @include modifier for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "heading-base": {
        "pattern": "@include heading-base",
        "aiHint": "Use @include heading-base for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "loading-skeleton": {
        "pattern": "@include loading-skeleton",
        "aiHint": "Use @include loading-skeleton for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "inline-flex-center": {
        "pattern": "@include inline-flex-center",
        "aiHint": "Use @include inline-flex-center for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "flex-end": {
        "pattern": "@include flex-end",
        "aiHint": "Use @include flex-end for consistent styling",
        "description": "SCSS mixin for reusable styles"
      },
      "text-caption": {
        "pattern": "@include text-caption",
        "aiHint": "Use @include text-caption for consistent styling",
        "description": "SCSS mixin for reusable styles"
      }
    }
  },
  "bestPractices": {
    "layoutPatterns": {
      "statsGrid": "stats-grid gap-6 mb-8",
      "formSection": "bg-elevated pa-4 rounded-md border border-light",
      "professionalCard": "elevation-4 glass-light pa-6 rounded-lg",
      "headerLayout": "d-flex justify-between align-center py-3 px-4"
    },
    "componentUsage": {
      "buttons": "Use ButtonVariant.Primary for main actions, Secondary for supporting actions, Danger for destructive actions",
      "spacing": "Use pa-6 for card content, gap-4 for flex layouts, mb-4 for standard element separation",
      "cards": "Use RCard for content containers, combine with elevation-4 and glass-light for professional appearance",
      "forms": "Use form-grid--2 for dual-column layouts, Required=\"true\" for mandatory fields"
    },
    "accessibility": {
      "colors": "All color combinations meet WCAG AA contrast requirements",
      "focus": "Focus rings automatically applied to interactive elements",
      "touchTargets": "Minimum 44px touch targets for mobile"
    }
  },
  "components": {
    "RBreadcrumbs": {
      "category": "Navigation",
      "avoidUsage": "Don't use for primary navigation - use RNavMenu instead. Avoid for single-level pages.",
      "complexity": "Simple",
      "aiPrompt": "Create breadcrumb navigation for page hierarchy",
      "parameters": {
        "AdditionalAttributes": {
          "aiHint": "",
          "type": "Dictionary<string, object>",
          "name": "AdditionalAttributes",
          "isRequired": true,
          "description": "Custom content"
        },
        "Separator": {
          "aiHint": "",
          "type": "string",
          "name": "Separator",
          "isRequired": true,
          "description": "Custom separator text (default: chevron icon)"
        },
        "Size": {
          "aiHint": "",
          "type": "BreadcrumbSize",
          "name": "Size",
          "isRequired": true,
          "description": "Size variant"
        },
        "CollapsibleOnMobile": {
          "aiHint": "",
          "type": "bool",
          "name": "CollapsibleOnMobile",
          "isRequired": true,
          "description": "Whether to collapse items on mobile"
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Additional CSS classes"
        },
        "Items": {
          "aiHint": "",
          "type": "List<BreadcrumbItem>",
          "name": "Items",
          "isRequired": true,
          "description": "Breadcrumb items"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "Max items to show before collapsing"
        }
      },
      "name": "RBreadcrumbs",
      "commonUse": "page navigation, hierarchy display, user location indication",
      "filePath": "/Components/Navigation/RBreadcrumbs.razor",
      "patterns": {
        "responsive-breadcrumbs": "CollapsibleOnMobile for mobile-friendly navigation",
        "custom-separator": "Separator or SeparatorIcon for custom dividers",
        "basic-breadcrumbs": "Items list with BreadcrumbItem objects",
        "icon-breadcrumbs": "BreadcrumbItem with Icon property for visual hierarchy"
      },
      "description": "Professional breadcrumb navigation component for showing page hierarchy and navigation paths. Supports icons, custom separators, responsive collapsing, and accessibility features."
    },
    "RForm": {
      "category": "Form",
      "avoidUsage": "Don't use for simple single-field inputs or display-only content",
      "complexity": "Complex",
      "aiPrompt": "Create a professional form container with validation and submission handling",
      "parameters": {
        "AriaLabel": {
          "description": "",
          "aiHint": "",
          "name": "AriaLabel",
          "type": "string?",
          "isRequired": false
        },
        "Icon": {
          "aiHint": "Form description or instructions",
          "type": "string?",
          "name": "Icon",
          "isRequired": false,
          "description": ""
        },
        "ShowDefaultActions": {
          "aiHint": "Whether to show the form header section",
          "type": "bool",
          "name": "ShowDefaultActions",
          "isRequired": true,
          "description": ""
        },
        "Description": {
          "aiHint": "Form title displayed in header",
          "type": "string?",
          "name": "Description",
          "isRequired": false,
          "description": ""
        },
        "CancelText": {
          "aiHint": "Text for the submit button",
          "type": "string",
          "name": "CancelText",
          "isRequired": true,
          "description": ""
        },
        "ShowFormHeader": {
          "aiHint": "Icon displayed next to form title",
          "type": "bool",
          "name": "ShowFormHeader",
          "isRequired": true,
          "description": ""
        },
        "SubmitText": {
          "aiHint": "Show cancel button alongside submit",
          "type": "string",
          "name": "SubmitText",
          "isRequired": true,
          "description": ""
        },
        "FormFields": {
          "description": "",
          "aiHint": "",
          "name": "FormFields",
          "type": "RenderFragment?",
          "isRequired": false
        },
        "ChildContent": {
          "aiHint": "Form configuration options",
          "type": "RenderFragment?",
          "name": "ChildContent",
          "isRequired": false,
          "description": ""
        },
        "OnStateChanged": {
          "aiHint": "Called when form is submitted with invalid data",
          "type": "EventCallback<FormStateChangedEventArgs>",
          "name": "OnStateChanged",
          "isRequired": true,
          "description": ""
        },
        "OnCancel": {
          "aiHint": "Called when form state changes (submitting, success, error)",
          "type": "EventCallback",
          "name": "OnCancel",
          "isRequired": true,
          "description": ""
        },
        "CustomValidator": {
          "description": "",
          "aiHint": "",
          "name": "CustomValidator",
          "type": "FormValidationDelegate<TModel>?",
          "isRequired": false
        },
        "Title": {
          "aiHint": "Form title displayed in header",
          "type": "string?",
          "name": "Title",
          "isRequired": false,
          "description": ""
        },
        "RequireValidation": {
          "aiHint": "Text for the cancel button",
          "type": "bool",
          "name": "RequireValidation",
          "isRequired": true,
          "description": ""
        },
        "SubmitButtonFullWidth": {
          "aiHint": "Require validation before allowing submission",
          "type": "bool",
          "name": "SubmitButtonFullWidth",
          "isRequired": true,
          "description": ""
        },
        "Options": {
          "aiHint": "Form spacing density (Comfortable, Dense, UltraDense)",
          "type": "FormOptions",
          "name": "Options",
          "isRequired": true,
          "description": ""
        },
        "Density": {
          "aiHint": "Form layout style (Default, Executive, Modal, Compact)",
          "type": "FormDensity",
          "name": "Density",
          "isRequired": true,
          "description": ""
        },
        "ModelChanged": {
          "aiHint": "Data model bound to the form",
          "type": "EventCallback<TModel>",
          "name": "ModelChanged",
          "isRequired": true,
          "description": ""
        },
        "ValidationMode": {
          "aiHint": "Callback when model data changes",
          "type": "ValidationMode",
          "name": "ValidationMode",
          "isRequired": true,
          "description": ""
        },
        "Layout": {
          "aiHint": "Validation strategy (DataAnnotations, Custom, Hybrid)",
          "type": "FormLayout",
          "name": "Layout",
          "isRequired": true,
          "description": ""
        },
        "ShowCancelButton": {
          "aiHint": "Show default submit/cancel buttons",
          "type": "bool",
          "name": "ShowCancelButton",
          "isRequired": true,
          "description": ""
        },
        "Class": {
          "description": "",
          "aiHint": "",
          "name": "Class",
          "type": "string?",
          "isRequired": false
        },
        "FormActions": {
          "description": "",
          "aiHint": "",
          "name": "FormActions",
          "type": "RenderFragment?",
          "isRequired": false
        }
      },
      "name": "RForm",
      "commonUse": "user registration, data entry, settings forms, contact forms",
      "filePath": "/Components/Form/RForm.razor",
      "patterns": {
        "settings-form": "Layout=\"FormLayout.Executive\" ShowFormHeader=\"true\"",
        "basic-form": "Model=\"@myModel\" OnValidSubmit=\"HandleSubmit\"",
        "modal-form": "Layout=\"FormLayout.Modal\" ShowDefaultActions=\"true\"",
        "registration-form": "Title=\"Sign Up\" ValidationMode=\"ValidationMode.DataAnnotations\"",
        "dense-form": "Density=\"FormDensity.Dense\" for compact layouts"
      },
      "description": "Professional form component with validation, state management, and accessibility"
    },
    "RButton": {
      "category": "Core",
      "avoidUsage": "Don't use for navigation links - use RLink instead. Avoid for simple text without actions.",
      "complexity": "Simple",
      "aiPrompt": "Create a professional button for user actions",
      "parameters": {
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": "<ai-hint>Common icons: save, delete, edit, add, search, settings, home, arrow_forward</ai-hint>"
        },
        "FullWidth": {
          "aiHint": "",
          "type": "bool",
          "name": "FullWidth",
          "isRequired": true,
          "description": "Whether button is in loading state"
        },
        "AriaLabel": {
          "aiHint": "",
          "type": "string",
          "name": "AriaLabel",
          "isRequired": true,
          "description": "Child content for custom button content"
        },
        "OnClick": {
          "aiHint": "",
          "type": "EventCallback<MouseEventArgs>",
          "name": "OnClick",
          "isRequired": true,
          "description": "Additional CSS classes"
        },
        "Tooltip": {
          "aiHint": "",
          "type": "string",
          "name": "Tooltip",
          "isRequired": true,
          "description": "Auto-hide timeout for success message (milliseconds)"
        },
        "SuccessMessage": {
          "aiHint": "",
          "type": "string",
          "name": "SuccessMessage",
          "isRequired": true,
          "description": "Confirmation dialog title"
        },
        "Loading": {
          "aiHint": "",
          "type": "bool",
          "name": "Loading",
          "isRequired": true,
          "description": "Whether button is disabled"
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Blur event handler"
        },
        "ShowBadge": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowBadge",
          "isRequired": true,
          "description": "Prevent default click behavior"
        },
        "Text": {
          "aiHint": "",
          "type": "string",
          "name": "Text",
          "isRequired": true,
          "description": "<ai-hint>Use action verbs like Save, Delete, Create, Cancel. Keep concise.</ai-hint>"
        },
        "IconPosition": {
          "aiHint": "",
          "type": "IconPosition",
          "name": "IconPosition",
          "isRequired": true,
          "description": "<ai-hint>Start is most common, End for arrows/navigation, Top for stacked layouts</ai-hint>"
        },
        "BadgeCount": {
          "aiHint": "",
          "type": "int",
          "name": "BadgeCount",
          "isRequired": true,
          "description": "Show notification badge"
        },
        "Rounded": {
          "aiHint": "",
          "type": "bool",
          "name": "Rounded",
          "isRequired": true,
          "description": "Badge count number"
        },
        "OnMouseDown": {
          "aiHint": "",
          "type": "EventCallback<MouseEventArgs>",
          "name": "OnMouseDown",
          "isRequired": true,
          "description": "Click event handler"
        },
        "OnMouseUp": {
          "aiHint": "",
          "type": "EventCallback<MouseEventArgs>",
          "name": "OnMouseUp",
          "isRequired": true,
          "description": "Mouse down event handler"
        },
        "Title": {
          "aiHint": "",
          "type": "string",
          "name": "Title",
          "isRequired": true,
          "description": "Accessibility label"
        },
        "SuccessTimeout": {
          "aiHint": "",
          "type": "int",
          "name": "SuccessTimeout",
          "isRequired": true,
          "description": "Success message after action completion"
        },
        "Shortcut": {
          "aiHint": "",
          "type": "string",
          "name": "Shortcut",
          "isRequired": true,
          "description": "Whether to show tooltip on hover"
        },
        "Size": {
          "aiHint": "",
          "type": "ButtonSize",
          "name": "Size",
          "isRequired": true,
          "description": "<ai-hint>Medium is default, Large for prominent actions, Small for compact layouts</ai-hint>"
        },
        "Type": {
          "aiHint": "",
          "type": "ButtonType",
          "name": "Type",
          "isRequired": true,
          "description": "<ai-hint>Use Submit for form submission buttons, Button for regular actions</ai-hint>"
        },
        "ConfirmTitle": {
          "aiHint": "",
          "type": "string",
          "name": "ConfirmTitle",
          "isRequired": true,
          "description": "Confirmation message before action execution"
        },
        "OnBlur": {
          "aiHint": "",
          "type": "EventCallback<FocusEventArgs>",
          "name": "OnBlur",
          "isRequired": true,
          "description": "Focus event handler"
        },
        "TabIndex": {
          "aiHint": "",
          "type": "int",
          "name": "TabIndex",
          "isRequired": true,
          "description": "Title attribute"
        },
        "Target": {
          "aiHint": "",
          "type": "string",
          "name": "Target",
          "isRequired": true,
          "description": "<ai-hint>Use _blank to open in new window/tab</ai-hint>"
        },
        "LoadingText": {
          "aiHint": "",
          "type": "string",
          "name": "LoadingText",
          "isRequired": true,
          "description": "Progress percentage for progress button (0-100)"
        },
        "HasShadow": {
          "aiHint": "",
          "type": "bool",
          "name": "HasShadow",
          "isRequired": true,
          "description": "Whether button should have rounded corners"
        },
        "Progress": {
          "aiHint": "",
          "type": "int",
          "name": "Progress",
          "isRequired": true,
          "description": "Whether button requires special permissions"
        },
        "StopPropagation": {
          "aiHint": "",
          "type": "bool",
          "name": "StopPropagation",
          "isRequired": true,
          "description": "Tab index"
        },
        "OnFocus": {
          "aiHint": "",
          "type": "EventCallback<FocusEventArgs>",
          "name": "OnFocus",
          "isRequired": true,
          "description": "Mouse up event handler"
        },
        "PreventDefault": {
          "aiHint": "",
          "type": "bool",
          "name": "PreventDefault",
          "isRequired": true,
          "description": "Stop click propagation"
        },
        "ConfirmMessage": {
          "aiHint": "",
          "type": "string",
          "name": "ConfirmMessage",
          "isRequired": true,
          "description": "Elevation level (0-24)"
        },
        "Elevation": {
          "aiHint": "",
          "type": "int",
          "name": "Elevation",
          "isRequired": true,
          "description": "Whether button should have shadow"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "Whether button spans full width"
        },
        "Href": {
          "aiHint": "",
          "type": "string",
          "name": "Href",
          "isRequired": true,
          "description": "<ai-hint>Button will navigate to this URL when clicked, use _blank target for new window</ai-hint>"
        },
        "RequiresConfirmation": {
          "aiHint": "",
          "type": "bool",
          "name": "RequiresConfirmation",
          "isRequired": true,
          "description": "Keyboard shortcut hint (display only)"
        },
        "Variant": {
          "aiHint": "",
          "type": "ButtonVariant",
          "name": "Variant",
          "isRequired": true,
          "description": "<ai-hint>Primary for main actions, Secondary for supporting actions, Danger for destructive actions</ai-hint>"
        }
      },
      "name": "RButton",
      "commonUse": "forms, navigation, actions, toolbars, dashboards",
      "filePath": "/Components/Core/RButton.razor",
      "patterns": {
        "secondary-action": "Variant=\"ButtonVariant.Secondary\" for supporting actions like Cancel, Back",
        "icon-button": "Icon=\"icon_name\" IconPosition=\"IconPosition.Start\" for buttons with icons",
        "loading-button": "Loading=\"true\" LoadingText=\"Processing...\" for async operations",
        "primary-action": "Variant=\"ButtonVariant.Primary\" for main actions like Save, Submit, Create",
        "destructive-action": "Variant=\"ButtonVariant.Danger\" for destructive actions like Delete, Remove"
      },
      "description": "Professional button component with enterprise variants, AI-optimized for rapid development. Supports 9 variants, 5 sizes, loading states, elevation effects, and comprehensive accessibility."
    },
    "RMessageModal": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "Variant": {
          "aiHint": "",
          "type": "ModalVariant",
          "name": "Variant",
          "isRequired": true,
          "description": ""
        },
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": ""
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RMessageModal",
      "commonUse": "",
      "filePath": "/Components/Feedback/RMessageModal.razor",
      "patterns": {},
      "description": ""
    },
    "RThemeSwitcher": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {},
      "name": "RThemeSwitcher",
      "commonUse": "",
      "filePath": "/Components/Core/RThemeSwitcher.razor",
      "patterns": {},
      "description": ""
    },
    "REmptyState": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "Image": {
          "aiHint": "",
          "type": "string",
          "name": "Image",
          "isRequired": true,
          "description": ""
        },
        "ButtonIcon": {
          "aiHint": "",
          "type": "string",
          "name": "ButtonIcon",
          "isRequired": true,
          "description": ""
        },
        "ActionText": {
          "aiHint": "",
          "type": "string",
          "name": "ActionText",
          "isRequired": true,
          "description": ""
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": ""
        },
        "OnAction": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnAction",
          "isRequired": true,
          "description": ""
        },
        "Description": {
          "aiHint": "",
          "type": "string",
          "name": "Description",
          "isRequired": true,
          "description": ""
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": ""
        },
        "Title": {
          "aiHint": "",
          "type": "string",
          "name": "Title",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "REmptyState",
      "commonUse": "",
      "filePath": "/Components/Display/REmptyState.razor",
      "patterns": {},
      "description": ""
    },
    "RBadge": {
      "category": "Core",
      "avoidUsage": "Don't use for navigation buttons - use RButton instead. Avoid for large text content.",
      "complexity": "Simple",
      "aiPrompt": "Create a professional badge for status or count display",
      "parameters": {
        "AdditionalAttributes": {
          "aiHint": "",
          "type": "Dictionary<string, object>",
          "name": "AdditionalAttributes",
          "isRequired": true,
          "description": "Additional CSS classes"
        },
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": "<ai-hint>Common icons: check_circle, warning, error, info, star, notifications</ai-hint>"
        },
        "Size": {
          "aiHint": "",
          "type": "BadgeSize",
          "name": "Size",
          "isRequired": true,
          "description": "<ai-hint>Medium is default, Small for compact layouts, Large for prominence</ai-hint>"
        },
        "Variant": {
          "aiHint": "",
          "type": "BadgeVariant",
          "name": "Variant",
          "isRequired": true,
          "description": "<ai-hint>Primary for emphasis, Success for positive states, Warning for attention, Danger for errors</ai-hint>"
        },
        "Text": {
          "aiHint": "",
          "type": "string",
          "name": "Text",
          "isRequired": true,
          "description": "<ai-hint>Keep text short: \"Active\", \"5\", \"New\", \"Pending\". Use 1-10 characters max</ai-hint>"
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Click event handler for interactive badges"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "Child content for custom badge content"
        },
        "Clickable": {
          "aiHint": "",
          "type": "bool",
          "name": "Clickable",
          "isRequired": true,
          "description": "<ai-hint>Set to true for interactive badges that perform actions when clicked</ai-hint>"
        }
      },
      "name": "RBadge",
      "commonUse": "status indicators, counts, labels, notifications, tags",
      "filePath": "/Components/Core/RBadge.razor",
      "patterns": {
        "clickable-badge": "Clickable=\"true\" OnClick=\"HandleClick\" for interactive badges",
        "count-badge": "Text=\"5\" Variant=\"BadgeVariant.Primary\" for notification counts",
        "warning-badge": "Text=\"Pending\" Variant=\"BadgeVariant.Warning\" for attention states",
        "status-badge": "Text=\"Active\" Variant=\"BadgeVariant.Success\" for status indicators"
      },
      "description": "Professional badge component for status indicators, counts, and labels. Supports multiple variants, sizes, and interactive states with enterprise-grade styling."
    },
    "RSelectModal": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "AllowMultiple": {
          "aiHint": "",
          "type": "bool",
          "name": "AllowMultiple",
          "isRequired": true,
          "description": ""
        },
        "OnItemSelected": {
          "aiHint": "",
          "type": "EventCallback<T>",
          "name": "OnItemSelected",
          "isRequired": true,
          "description": ""
        },
        "SubTextSelector": {
          "aiHint": "",
          "type": "Func<T, string>",
          "name": "SubTextSelector",
          "isRequired": true,
          "description": ""
        },
        "OnDataChanged": {
          "aiHint": "",
          "type": "EventCallback<T>",
          "name": "OnDataChanged",
          "isRequired": true,
          "description": ""
        },
        "ItemTemplate": {
          "aiHint": "",
          "type": "RenderFragment<T>",
          "name": "ItemTemplate",
          "isRequired": true,
          "description": ""
        },
        "SearchFilter": {
          "aiHint": "",
          "type": "Func<T, string, bool>",
          "name": "SearchFilter",
          "isRequired": true,
          "description": ""
        },
        "DisplaySelector": {
          "aiHint": "",
          "type": "Func<T, string>",
          "name": "DisplaySelector",
          "isRequired": true,
          "description": ""
        },
        "SearchPlaceholder": {
          "aiHint": "",
          "type": "string",
          "name": "SearchPlaceholder",
          "isRequired": true,
          "description": ""
        },
        "ShowSelectedItems": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowSelectedItems",
          "isRequired": true,
          "description": ""
        },
        "ShowItemActions": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowItemActions",
          "isRequired": true,
          "description": ""
        },
        "ItemActions": {
          "aiHint": "",
          "type": "RenderFragment<T>",
          "name": "ItemActions",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RSelectModal",
      "commonUse": "",
      "filePath": "/Components/Feedback/RSelectModal.razor",
      "patterns": {},
      "description": ""
    },
    "RFormSection": {
      "category": "Form",
      "avoidUsage": "Don't use for single fields or when no grouping is needed",
      "complexity": "Intermediate",
      "aiPrompt": "Create a form section with header and organized field layout",
      "parameters": {
        "Icon": {
          "aiHint": "Section description or instructions",
          "type": "string?",
          "name": "Icon",
          "isRequired": false,
          "description": ""
        },
        "Description": {
          "aiHint": "Section title displayed in header",
          "type": "string?",
          "name": "Description",
          "isRequired": false,
          "description": ""
        },
        "Elevation": {
          "aiHint": "Icon displayed next to section title",
          "type": "SectionElevation",
          "name": "Elevation",
          "isRequired": true,
          "description": ""
        },
        "IsCollapsible": {
          "aiHint": "Whether to show the section header",
          "type": "bool",
          "name": "IsCollapsible",
          "isRequired": true,
          "description": ""
        },
        "HeaderActions": {
          "description": "",
          "aiHint": "",
          "name": "HeaderActions",
          "type": "RenderFragment?",
          "isRequired": false
        },
        "CssClass": {
          "description": "",
          "aiHint": "",
          "name": "CssClass",
          "type": "string?",
          "isRequired": false
        },
        "ChildContent": {
          "aiHint": "Callback when expanded state changes",
          "type": "RenderFragment?",
          "name": "ChildContent",
          "isRequired": false,
          "description": ""
        },
        "IsExpanded": {
          "aiHint": "Allow section to be collapsed/expanded",
          "type": "bool",
          "name": "IsExpanded",
          "isRequired": true,
          "description": ""
        },
        "ShowHeader": {
          "aiHint": "Number of columns for field layout (1-4)",
          "type": "bool",
          "name": "ShowHeader",
          "isRequired": true,
          "description": ""
        },
        "FieldColumns": {
          "aiHint": "Visual elevation level (None, Subtle, Medium, High)",
          "type": "int",
          "name": "FieldColumns",
          "isRequired": true,
          "description": ""
        },
        "IsExpandedChanged": {
          "aiHint": "Whether section is currently expanded",
          "type": "EventCallback<bool>",
          "name": "IsExpandedChanged",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RFormSection",
      "commonUse": "form organization, grouped fields, collapsible sections, multi-step forms",
      "filePath": "/Components/Form/RFormSection.razor",
      "patterns": {
        "elevated-section": "Title=\"Important Details\" Elevation=\"SectionElevation.Medium\"",
        "basic-section": "Title=\"Personal Information\" FieldColumns=\"2\"",
        "icon-section": "Title=\"Contact Info\" Icon=\"contact_mail\"",
        "collapsible-section": "Title=\"Advanced Settings\" IsCollapsible=\"true\""
      },
      "description": "Professional form section container with collapsible header and grid layout"
    },
    "RCard": {
      "category": "Core",
      "avoidUsage": "Don't use for navigation - use RLink instead. Avoid for simple text without structure.",
      "complexity": "Simple",
      "aiPrompt": "Create a professional card for content display",
      "parameters": {
        "AriaLabel": {
          "aiHint": "",
          "type": "string",
          "name": "AriaLabel",
          "isRequired": true,
          "description": "Stop click propagation"
        },
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": "<ai-hint>Common icons: dashboard, person, settings, analytics, payment, work</ai-hint>"
        },
        "FullBleedImage": {
          "aiHint": "",
          "type": "bool",
          "name": "FullBleedImage",
          "isRequired": true,
          "description": "Whether to remove padding from content"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "Whether image should be full bleed"
        },
        "Selected": {
          "aiHint": "",
          "type": "bool",
          "name": "Selected",
          "isRequired": true,
          "description": "Loading text to display"
        },
        "OnMouseLeave": {
          "aiHint": "",
          "type": "EventCallback<MouseEventArgs>",
          "name": "OnMouseLeave",
          "isRequired": true,
          "description": "Mouse enter event handler"
        },
        "Variant": {
          "aiHint": "",
          "type": "CardVariant",
          "name": "Variant",
          "isRequired": true,
          "description": "<ai-hint>Default for standard cards, Elevated for prominent cards, Glass for modern overlay effect</ai-hint>"
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Additional CSS classes"
        },
        "ImageSrc": {
          "aiHint": "",
          "type": "string",
          "name": "ImageSrc",
          "isRequired": true,
          "description": "<ai-hint>Use for hero images, thumbnails, or visual content in cards</ai-hint>"
        },
        "OnMouseEnter": {
          "aiHint": "",
          "type": "EventCallback<MouseEventArgs>",
          "name": "OnMouseEnter",
          "isRequired": true,
          "description": "Click event handler"
        },
        "StopPropagation": {
          "aiHint": "",
          "type": "bool",
          "name": "StopPropagation",
          "isRequired": true,
          "description": "Mouse leave event handler"
        },
        "MediaContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "MediaContent",
          "isRequired": true,
          "description": "Header content area"
        },
        "RibbonVariant": {
          "aiHint": "",
          "type": "RibbonVariant",
          "name": "RibbonVariant",
          "isRequired": true,
          "description": "Ribbon/badge text"
        },
        "Content": {
          "aiHint": "",
          "type": "string",
          "name": "Content",
          "isRequired": true,
          "description": "<ai-hint>Use for simple text content, or use ChildContent for complex layouts</ai-hint>"
        },
        "HeaderContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "HeaderContent",
          "isRequired": true,
          "description": "Main content"
        },
        "Title": {
          "aiHint": "",
          "type": "string",
          "name": "Title",
          "isRequired": true,
          "description": "<ai-hint>Use descriptive titles like \"Employee Details\", \"Payment Summary\", \"Settings\"</ai-hint>"
        },
        "Elevation": {
          "aiHint": "",
          "type": "int",
          "name": "Elevation",
          "isRequired": true,
          "description": "<ai-hint>Use 0 for flat, 2-4 for standard, 8+ for prominent cards. -1 uses variant default</ai-hint>"
        },
        "Disabled": {
          "aiHint": "",
          "type": "bool",
          "name": "Disabled",
          "isRequired": true,
          "description": "Whether card is selected/active"
        },
        "Subtitle": {
          "aiHint": "",
          "type": "string",
          "name": "Subtitle",
          "isRequired": true,
          "description": "<ai-hint>Use for additional context like dates, categories, or descriptions</ai-hint>"
        },
        "Clickable": {
          "aiHint": "",
          "type": "bool",
          "name": "Clickable",
          "isRequired": true,
          "description": "<ai-hint>Set to true for interactive cards that perform actions when clicked</ai-hint>"
        },
        "RibbonText": {
          "aiHint": "",
          "type": "string",
          "name": "RibbonText",
          "isRequired": true,
          "description": "Whether card is disabled"
        },
        "NoPadding": {
          "aiHint": "",
          "type": "bool",
          "name": "NoPadding",
          "isRequired": true,
          "description": "Ribbon variant"
        },
        "FooterContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "FooterContent",
          "isRequired": true,
          "description": "Media content area"
        },
        "OnClick": {
          "aiHint": "",
          "type": "EventCallback<MouseEventArgs>",
          "name": "OnClick",
          "isRequired": true,
          "description": "Footer content area"
        },
        "Loading": {
          "aiHint": "",
          "type": "bool",
          "name": "Loading",
          "isRequired": true,
          "description": "<ai-hint>Use during async operations to indicate processing state</ai-hint>"
        }
      },
      "name": "RCard",
      "commonUse": "dashboards, data display, content organization, information panels",
      "filePath": "/Components/Core/RCard.razor",
      "patterns": {
        "media-card": "ImageSrc=\"/image.jpg\" ImageAlt=\"Description\" for cards with images",
        "basic-card": "Title=\"Card Title\" Content=\"Card content\" for simple content cards",
        "elevated-card": "Elevation=\"4\" for cards that need prominence",
        "loading-card": "Loading=\"true\" LoadingText=\"Processing...\" for async operations",
        "clickable-card": "Clickable=\"true\" OnClick=\"HandleClick\" for interactive cards"
      },
      "description": "Professional card component for content containers with business-grade variants. Supports header, media, content areas, loading states, elevation effects, and comprehensive interaction patterns."
    },
    "RDatePickerBasic": {
      "category": "Form",
      "avoidUsage": "Don't use for complex date ranges or when calendar popup is needed",
      "complexity": "Simple",
      "aiPrompt": "Create a simple HTML5 date picker input",
      "parameters": {
        "OnBlur": {
          "aiHint": "",
          "type": "EventCallback<FocusEventArgs>",
          "name": "OnBlur",
          "isRequired": true,
          "description": ""
        },
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": ""
        },
        "Label": {
          "aiHint": "Callback when date value changes",
          "type": "string",
          "name": "Label",
          "isRequired": true,
          "description": ""
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "Start icon (deprecated - use Icon + IconPosition)"
        },
        "StartIcon": {
          "aiHint": "",
          "type": "string",
          "name": "StartIcon",
          "isRequired": true,
          "description": "Position of the icon"
        },
        "HelpText": {
          "aiHint": "Placeholder text when no date selected",
          "type": "string",
          "name": "HelpText",
          "isRequired": true,
          "description": ""
        },
        "ReadOnly": {
          "aiHint": "Disable the input field",
          "type": "bool",
          "name": "ReadOnly",
          "isRequired": true,
          "description": ""
        },
        "ValueChanged": {
          "aiHint": "Selected date value",
          "type": "EventCallback<DateTime?>",
          "name": "ValueChanged",
          "isRequired": true,
          "description": ""
        },
        "OnDateSelected": {
          "aiHint": "",
          "type": "EventCallback<DateTime?>",
          "name": "OnDateSelected",
          "isRequired": true,
          "description": ""
        },
        "Required": {
          "aiHint": "Show time selection alongside date",
          "type": "bool",
          "name": "Required",
          "isRequired": true,
          "description": "Start icon (deprecated - use Icon + IconPosition)"
        },
        "MaxDate": {
          "aiHint": "Minimum selectable date",
          "type": "DateTime?",
          "name": "MaxDate",
          "isRequired": false,
          "description": ""
        },
        "MinDate": {
          "aiHint": "Minimum selectable date",
          "type": "DateTime?",
          "name": "MinDate",
          "isRequired": false,
          "description": ""
        },
        "ErrorMessage": {
          "aiHint": "Help text displayed below the input",
          "type": "string",
          "name": "ErrorMessage",
          "isRequired": true,
          "description": ""
        },
        "Placeholder": {
          "aiHint": "Label text displayed above the input",
          "type": "string",
          "name": "Placeholder",
          "isRequired": true,
          "description": ""
        },
        "Disabled": {
          "aiHint": "Mark field as required",
          "type": "bool",
          "name": "Disabled",
          "isRequired": true,
          "description": ""
        },
        "ShowTime": {
          "aiHint": "Show time selection alongside date",
          "type": "bool",
          "name": "ShowTime",
          "isRequired": true,
          "description": "Start icon (deprecated - use Icon + IconPosition)"
        },
        "Value": {
          "aiHint": "Selected date value",
          "type": "DateTime?",
          "name": "Value",
          "isRequired": false,
          "description": ""
        },
        "OnFocus": {
          "aiHint": "",
          "type": "EventCallback<FocusEventArgs>",
          "name": "OnFocus",
          "isRequired": true,
          "description": ""
        },
        "HasError": {
          "aiHint": "Make the input read-only",
          "type": "bool",
          "name": "HasError",
          "isRequired": true,
          "description": ""
        },
        "IconPosition": {
          "aiHint": "",
          "type": "IconPosition",
          "name": "IconPosition",
          "isRequired": true,
          "description": "Icon for the component"
        },
        "Size": {
          "aiHint": "Maximum selectable date",
          "type": "FieldSize",
          "name": "Size",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RDatePickerBasic",
      "commonUse": "simple date input, forms, basic date selection",
      "filePath": "/Components/Form/RDatePickerBasic.razor",
      "patterns": {
        "required-date": "@bind-Value=\"requiredDate\" Required=\"true\" HasError=\"@(!date.HasValue)\"",
        "datetime-input": "@bind-Value=\"dateTime\" ShowTime=\"true\"",
        "future-date": "@bind-Value=\"futureDate\" MinDate=\"@DateTime.Today\"",
        "basic-date": "@bind-Value=\"date\" Label=\"Select Date\""
      },
      "description": "Simplified HTML5 date picker for basic date input scenarios"
    },
    "RActionGroup": {
      "category": "Core",
      "avoidUsage": "Don't use for single buttons - use RButton directly. Avoid for non-action content.",
      "complexity": "Simple",
      "aiPrompt": "Create a professional action group for organizing buttons",
      "parameters": {
        "Direction": {
          "aiHint": "",
          "type": "ActionGroupDirection",
          "name": "Direction",
          "isRequired": true,
          "description": "<ai-hint>Horizontal for most forms and toolbars, Vertical for dropdown menus and mobile layouts</ai-hint>"
        },
        "FullWidth": {
          "aiHint": "",
          "type": "bool",
          "name": "FullWidth",
          "isRequired": true,
          "description": "<ai-hint>Use for vertical menus and mobile layouts where buttons should span full width</ai-hint>"
        },
        "Spacing": {
          "aiHint": "",
          "type": "ActionGroupSpacing",
          "name": "Spacing",
          "isRequired": true,
          "description": "<ai-hint>Medium for most cases, Small for compact toolbars, Large for prominent spacing</ai-hint>"
        },
        "Responsive": {
          "aiHint": "",
          "type": "bool",
          "name": "Responsive",
          "isRequired": true,
          "description": "<ai-hint>True for responsive layouts that adapt to mobile, false for fixed layouts</ai-hint>"
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Additional CSS classes"
        },
        "Alignment": {
          "aiHint": "",
          "type": "ActionGroupAlignment",
          "name": "Alignment",
          "isRequired": true,
          "description": "<ai-hint>End for form actions (Save/Cancel), SpaceBetween for opposing actions, Center for balanced layouts</ai-hint>"
        }
      },
      "name": "RActionGroup",
      "commonUse": "form actions, toolbar buttons, navigation controls, modal actions",
      "filePath": "/Components/Core/RActionGroup.razor",
      "patterns": {
        "vertical-menu": "Direction=\"ActionGroupDirection.Vertical\" FullWidth=\"true\" for dropdown menus",
        "toolbar-actions": "Direction=\"ActionGroupDirection.Horizontal\" Spacing=\"ActionGroupSpacing.Small\" for compact toolbars",
        "form-actions": "Alignment=\"ActionGroupAlignment.End\" for form Save/Cancel buttons",
        "space-between": "Alignment=\"ActionGroupAlignment.SpaceBetween\" for opposing actions"
      },
      "description": "Professional action group component for organizing multiple buttons with consistent spacing and alignment. Supports horizontal/vertical layouts, responsive behavior, and flexible alignment options."
    },
    "RAccordion": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "AdditionalAttributes": {
          "aiHint": "",
          "type": "Dictionary<string, object>",
          "name": "AdditionalAttributes",
          "isRequired": true,
          "description": "Additional CSS classes"
        },
        "Separated": {
          "aiHint": "",
          "type": "bool",
          "name": "Separated",
          "isRequired": true,
          "description": "Whether to show borders between items"
        },
        "Variant": {
          "aiHint": "",
          "type": "AccordionVariant",
          "name": "Variant",
          "isRequired": true,
          "description": "Whether to show separators between items"
        },
        "CollapseIcon": {
          "aiHint": "",
          "type": "string",
          "name": "CollapseIcon",
          "isRequired": true,
          "description": "Expand icon"
        },
        "Multiple": {
          "aiHint": "",
          "type": "bool",
          "name": "Multiple",
          "isRequired": true,
          "description": "Accordion items content"
        },
        "ExpandIcon": {
          "aiHint": "",
          "type": "string",
          "name": "ExpandIcon",
          "isRequired": true,
          "description": "Icon position"
        },
        "Bordered": {
          "aiHint": "",
          "type": "bool",
          "name": "Bordered",
          "isRequired": true,
          "description": "Whether multiple items can be expanded at once"
        },
        "IconPosition": {
          "aiHint": "",
          "type": "AccordionIconPosition",
          "name": "IconPosition",
          "isRequired": true,
          "description": "Accordion style variant"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "Collapse icon"
        },
        "OnCollapsed": {
          "aiHint": "",
          "type": "EventCallback<string>",
          "name": "OnCollapsed",
          "isRequired": true,
          "description": "Callback when an item is expanded"
        }
      },
      "name": "RAccordion",
      "commonUse": "",
      "filePath": "/Components/Display/RAccordion.razor",
      "patterns": {},
      "description": ""
    },
    "RList": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "AdditionalAttributes": {
          "aiHint": "",
          "type": "Dictionary<string, object>",
          "name": "AdditionalAttributes",
          "isRequired": true,
          "description": "Child content"
        },
        "Variant": {
          "aiHint": "",
          "type": "ListVariant",
          "name": "Variant",
          "isRequired": true,
          "description": "Whether to show dividers between items"
        },
        "Size": {
          "aiHint": "",
          "type": "ListSize",
          "name": "Size",
          "isRequired": true,
          "description": "List title (for menu variant)"
        },
        "Divided": {
          "aiHint": "",
          "type": "bool",
          "name": "Divided",
          "isRequired": true,
          "description": "List layout variant"
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Additional CSS classes"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "List style variant"
        },
        "Layout": {
          "aiHint": "",
          "type": "ListLayout",
          "name": "Layout",
          "isRequired": true,
          "description": "List size variant"
        }
      },
      "name": "RList",
      "commonUse": "",
      "filePath": "/Components/Data/RList.razor",
      "patterns": {},
      "description": ""
    },
    "RConfirmationModal": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "IsProcessing": {
          "aiHint": "",
          "type": "bool",
          "name": "IsProcessing",
          "isRequired": true,
          "description": ""
        },
        "Variant": {
          "aiHint": "",
          "type": "ModalVariant",
          "name": "Variant",
          "isRequired": true,
          "description": ""
        },
        "ConfirmText": {
          "aiHint": "",
          "type": "string",
          "name": "ConfirmText",
          "isRequired": true,
          "description": ""
        },
        "CancelText": {
          "aiHint": "",
          "type": "string",
          "name": "CancelText",
          "isRequired": true,
          "description": ""
        },
        "OnCancel": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnCancel",
          "isRequired": true,
          "description": ""
        },
        "IconName": {
          "aiHint": "",
          "type": "string",
          "name": "IconName",
          "isRequired": true,
          "description": ""
        },
        "OnConfirm": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnConfirm",
          "isRequired": true,
          "description": ""
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": ""
        },
        "Message": {
          "aiHint": "",
          "type": "string",
          "name": "Message",
          "isRequired": true,
          "description": ""
        },
        "Title": {
          "aiHint": "",
          "type": "string",
          "name": "Title",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RConfirmationModal",
      "commonUse": "",
      "filePath": "/Components/Feedback/RConfirmationModal.razor",
      "patterns": {},
      "description": ""
    },
    "RFilterBar": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "FiltersCleared": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "FiltersCleared",
          "isRequired": true,
          "description": "Whether to show active filter count"
        },
        "StatusOptions": {
          "aiHint": "",
          "type": "Dictionary<string, string>",
          "name": "StatusOptions",
          "isRequired": true,
          "description": "Status filter value"
        },
        "DateRangeChanged": {
          "aiHint": "",
          "type": "EventCallback<DateRangeChangedEventArgs>",
          "name": "DateRangeChanged",
          "isRequired": true,
          "description": "Date to value"
        },
        "DateTo": {
          "description": "Date from value",
          "aiHint": "",
          "name": "DateTo",
          "type": "DateTime?",
          "isRequired": false
        },
        "StatusFilter": {
          "aiHint": "",
          "type": "string",
          "name": "StatusFilter",
          "isRequired": true,
          "description": "Whether to show status filter"
        },
        "StatusFilterChanged": {
          "aiHint": "",
          "type": "EventCallback<string>",
          "name": "StatusFilterChanged",
          "isRequired": true,
          "description": "Status filter options"
        },
        "CustomFilters": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "CustomFilters",
          "isRequired": true,
          "description": "Status filter changed callback"
        },
        "QuickFilters": {
          "aiHint": "",
          "type": "List<QuickFilterDefinition>",
          "name": "QuickFilters",
          "isRequired": true,
          "description": "Date range changed callback"
        },
        "QuickFilterToggled": {
          "aiHint": "",
          "type": "EventCallback<QuickFilterToggledEventArgs>",
          "name": "QuickFilterToggled",
          "isRequired": true,
          "description": "Active quick filter keys"
        },
        "ShowClearButton": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowClearButton",
          "isRequired": true,
          "description": "Custom filter content"
        },
        "FilterChanged": {
          "aiHint": "",
          "type": "EventCallback<FilterChangedEventArgs>",
          "name": "FilterChanged",
          "isRequired": true,
          "description": "Dynamic filter definitions"
        },
        "ShowFilterCount": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowFilterCount",
          "isRequired": true,
          "description": "Whether to show clear all button"
        },
        "ShowStatus": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowStatus",
          "isRequired": true,
          "description": "Quick filter toggled callback"
        },
        "Filters": {
          "aiHint": "",
          "type": "List<FilterDefinition>",
          "name": "Filters",
          "isRequired": true,
          "description": "Search input placeholder text"
        },
        "SearchPlaceholder": {
          "aiHint": "",
          "type": "string",
          "name": "SearchPlaceholder",
          "isRequired": true,
          "description": "Search value changed callback"
        },
        "SearchValueChanged": {
          "aiHint": "",
          "type": "EventCallback<string>",
          "name": "SearchValueChanged",
          "isRequired": true,
          "description": "Search input value"
        },
        "SearchValue": {
          "aiHint": "",
          "type": "string",
          "name": "SearchValue",
          "isRequired": true,
          "description": "Whether to show search input"
        },
        "DateFrom": {
          "description": "Whether to show date range filter",
          "aiHint": "",
          "name": "DateFrom",
          "type": "DateTime?",
          "isRequired": false
        },
        "ActiveQuickFilters": {
          "aiHint": "",
          "type": "HashSet<string>",
          "name": "ActiveQuickFilters",
          "isRequired": true,
          "description": "Quick filter button definitions"
        },
        "ShowDateRange": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowDateRange",
          "isRequired": true,
          "description": "Filter changed callback"
        }
      },
      "name": "RFilterBar",
      "commonUse": "",
      "filePath": "/Components/Data/RFilterBar.razor",
      "patterns": {},
      "description": ""
    },
    "RSection": {
      "category": "Layout",
      "avoidUsage": "Don't use for main app layout - use RAppShell instead. Avoid for simple content without headers.",
      "complexity": "Simple",
      "aiPrompt": "Create content section with header and body",
      "parameters": {
        "OnToggleCollapse": {
          "aiHint": "",
          "type": "EventCallback<bool>",
          "name": "OnToggleCollapse",
          "isRequired": true,
          "description": "Section click event handler"
        },
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": "Icon for header"
        },
        "Subtitle": {
          "aiHint": "",
          "type": "string",
          "name": "Subtitle",
          "isRequired": true,
          "description": "Section subtitle"
        },
        "TitleContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "TitleContent",
          "isRequired": true,
          "description": "Main content"
        },
        "NoFooterBorder": {
          "aiHint": "",
          "type": "bool",
          "name": "NoFooterBorder",
          "isRequired": true,
          "description": "Whether to remove header border"
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Additional CSS classes"
        },
        "Title": {
          "aiHint": "",
          "type": "string",
          "name": "Title",
          "isRequired": true,
          "description": "Section title"
        },
        "NoHeaderBorder": {
          "aiHint": "",
          "type": "bool",
          "name": "NoHeaderBorder",
          "isRequired": true,
          "description": "Callback when collapsed state changes"
        },
        "IsCollapsible": {
          "aiHint": "",
          "type": "bool",
          "name": "IsCollapsible",
          "isRequired": true,
          "description": "Whether section is collapsible"
        },
        "NoPadding": {
          "aiHint": "",
          "type": "bool",
          "name": "NoPadding",
          "isRequired": true,
          "description": "Whether to remove content padding"
        },
        "FooterContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "FooterContent",
          "isRequired": true,
          "description": "Title content area"
        },
        "OnClick": {
          "aiHint": "",
          "type": "EventCallback<MouseEventArgs>",
          "name": "OnClick",
          "isRequired": true,
          "description": "Footer content area"
        },
        "IsCollapsedChanged": {
          "aiHint": "",
          "type": "EventCallback<bool>",
          "name": "IsCollapsedChanged",
          "isRequired": true,
          "description": "Whether section is collapsed (if collapsible)"
        }
      },
      "name": "RSection",
      "commonUse": "page sections, content organization, collapsible panels, form groups",
      "filePath": "/Components/Layout/RSection.razor",
      "patterns": {
        "action-section": "TitleContent for sections with header actions",
        "basic-section": "Title and ChildContent for simple content sections",
        "icon-section": "Icon and Title for branded section headers",
        "collapsible-section": "IsCollapsible=\"true\" for expandable content panels"
      },
      "description": "Professional content section component with header, collapsible content, and footer areas. Ideal for organizing page content with consistent styling and optional interactive features."
    },
    "RNavMenu": {
      "category": "Navigation",
      "avoidUsage": "Don't use for breadcrumbs - use RBreadcrumbs instead. Avoid for action menus - use RDropdown.",
      "complexity": "Complex",
      "aiPrompt": "Create navigation menu for app sidebar",
      "parameters": {
        "Items": {
          "aiHint": "",
          "type": "List<NavMenuItem>",
          "name": "Items",
          "isRequired": true,
          "description": "Navigation items"
        },
        "ItemFilter": {
          "aiHint": "",
          "type": "Func<NavMenuItem, bool>",
          "name": "ItemFilter",
          "isRequired": true,
          "description": "Filter function for items"
        },
        "SidebarCollapsed": {
          "aiHint": "",
          "type": "bool",
          "name": "SidebarCollapsed",
          "isRequired": true,
          "description": "Custom navigation content"
        }
      },
      "name": "RNavMenu",
      "commonUse": "sidebar navigation, main menu, hierarchical navigation, app structure",
      "filePath": "/Components/Navigation/RNavMenu.razor",
      "patterns": {
        "badge-nav": "NavMenuItem with Badge for notifications and counts",
        "collapsible-nav": "Responsive to SidebarCollapsed cascading parameter",
        "hierarchical-nav": "NavMenuItem with Children for nested menu structure",
        "basic-nav": "Items list with NavMenuItem objects for simple navigation"
      },
      "description": "Professional navigation menu component for sidebar and main navigation with hierarchical support. Supports collapsible groups, badges, icons, and responsive behavior for enterprise applications."
    },
    "RFormModal": {
      "category": "Form",
      "avoidUsage": "Don't use for complex custom forms - create dedicated form components instead",
      "complexity": "Complex",
      "aiPrompt": "Create a modal with auto-generated form fields from a model",
      "parameters": {
        "FormParameters": {
          "aiHint": "Custom form component type to use instead of auto-generation",
          "type": "Dictionary<string, object>",
          "name": "FormParameters",
          "isRequired": true,
          "description": ""
        },
        "ShowValidationSummary": {
          "aiHint": "Additional parameters passed to custom form component",
          "type": "bool",
          "name": "ShowValidationSummary",
          "isRequired": true,
          "description": ""
        },
        "FormComponent": {
          "aiHint": "Initial data model for the form",
          "type": "Type",
          "name": "FormComponent",
          "isRequired": true,
          "description": ""
        },
        "OnDataChanged": {
          "aiHint": "Save function called on form submission",
          "type": "EventCallback<T>",
          "name": "OnDataChanged",
          "isRequired": true,
          "description": ""
        },
        "ChildContent": {
          "aiHint": "Callback when form data changes",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RFormModal",
      "commonUse": "quick edit modals, auto-generated forms, dynamic data entry",
      "filePath": "/Components/Feedback/RFormModal.razor",
      "patterns": {
        "validation-form": "OnValidate=\"ValidateModel\" ShowValidationSummary=\"true\"",
        "custom-form": "FormComponent=\"@typeof(MyFormComponent)\"",
        "auto-form": "InitialData=\"@model\" OnSave=\"HandleSave\""
      },
      "description": "Generic form modal component for dynamic form generation and validation"
    },
    "RToastContainer": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {},
      "name": "RToastContainer",
      "commonUse": "",
      "filePath": "/Components/Feedback/RToastContainer.razor",
      "patterns": {},
      "description": ""
    },
    "RChip": {
      "category": "Core",
      "avoidUsage": "Don't use for buttons - use RButton. Avoid for large content blocks.",
      "complexity": "Simple",
      "aiPrompt": "Create a chip/tag for filters, selections, or labels",
      "parameters": {
        "OnClose": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnClose",
          "isRequired": true,
          "description": ""
        },
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": ""
        },
        "Size": {
          "aiHint": "",
          "type": "ChipSize",
          "name": "Size",
          "isRequired": true,
          "description": ""
        },
        "Variant": {
          "aiHint": "",
          "type": "ChipVariant",
          "name": "Variant",
          "isRequired": true,
          "description": ""
        },
        "Closeable": {
          "aiHint": "",
          "type": "bool",
          "name": "Closeable",
          "isRequired": true,
          "description": ""
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": ""
        },
        "Disabled": {
          "aiHint": "",
          "type": "bool",
          "name": "Disabled",
          "isRequired": true,
          "description": ""
        },
        "Selected": {
          "aiHint": "",
          "type": "bool",
          "name": "Selected",
          "isRequired": true,
          "description": ""
        },
        "IconPosition": {
          "aiHint": "",
          "type": "IconPosition",
          "name": "IconPosition",
          "isRequired": true,
          "description": ""
        },
        "OnClick": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnClick",
          "isRequired": true,
          "description": ""
        },
        "Clickable": {
          "aiHint": "",
          "type": "bool",
          "name": "Clickable",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RChip",
      "commonUse": "filter chips, tag lists, multi-select indicators, status tags",
      "filePath": "/Components/Core/RChip.razor",
      "patterns": {
        "removable-chip": "Closeable=\"true\" OnClose=\"RemoveChip\" for deletable tags",
        "filter-chip": "Clickable=\"true\" OnClick=\"ToggleFilter\" for interactive filters",
        "selected-chip": "Selected=\"true\" for active state indication"
      },
      "description": "Professional chip component for tags, filters, and selections with interactive states. Supports removable chips, selection indicators, icons, and multiple variants."
    },
    "RStatsCard": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": "</summary>"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "</summary>"
        },
        "Elevation": {
          "aiHint": "",
          "type": "int",
          "name": "Elevation",
          "isRequired": true,
          "description": "</summary>"
        },
        "BadgeSize": {
          "aiHint": "",
          "type": "BadgeSize",
          "name": "BadgeSize",
          "isRequired": true,
          "description": "</summary>"
        },
        "IconSize": {
          "aiHint": "",
          "type": "int",
          "name": "IconSize",
          "isRequired": true,
          "description": "</summary>"
        },
        "IconColor": {
          "aiHint": "",
          "type": "string",
          "name": "IconColor",
          "isRequired": true,
          "description": "</summary>"
        },
        "BadgeText": {
          "aiHint": "",
          "type": "string",
          "name": "BadgeText",
          "isRequired": true,
          "description": "</summary>"
        },
        "ValueColor": {
          "aiHint": "",
          "type": "string",
          "name": "ValueColor",
          "isRequired": true,
          "description": "</summary>"
        },
        "Clickable": {
          "aiHint": "",
          "type": "bool",
          "name": "Clickable",
          "isRequired": true,
          "description": "</summary>"
        },
        "Value": {
          "aiHint": "",
          "type": "string",
          "name": "Value",
          "isRequired": true,
          "description": "</summary>"
        },
        "Subtitle": {
          "aiHint": "",
          "type": "string",
          "name": "Subtitle",
          "isRequired": true,
          "description": "</summary>"
        },
        "OnClick": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnClick",
          "isRequired": true,
          "description": "</summary>"
        },
        "BadgeVariant": {
          "aiHint": "",
          "type": "BadgeVariant",
          "name": "BadgeVariant",
          "isRequired": true,
          "description": "</summary>"
        }
      },
      "name": "RStatsCard",
      "commonUse": "",
      "filePath": "/Components/Display/RStatsCard.razor",
      "patterns": {},
      "description": ""
    },
    "RThemeProvider": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "InitialTheme": {
          "aiHint": "",
          "type": "ThemeConfiguration",
          "name": "InitialTheme",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RThemeProvider",
      "commonUse": "",
      "filePath": "/Components/Core/RThemeProvider.razor",
      "patterns": {},
      "description": ""
    },
    "RVirtualList": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "LoadingMoreTemplate": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "LoadingMoreTemplate",
          "isRequired": true,
          "description": "Template for load more button"
        },
        "ItemHeight": {
          "aiHint": "",
          "type": "int",
          "name": "ItemHeight",
          "isRequired": true,
          "description": "Template for loading more items"
        },
        "HasMoreItems": {
          "aiHint": "",
          "type": "bool",
          "name": "HasMoreItems",
          "isRequired": true,
          "description": "Height of the container in pixels"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "Callback when more items need to be loaded"
        },
        "SkeletonHeight": {
          "aiHint": "",
          "type": "string",
          "name": "SkeletonHeight",
          "isRequired": true,
          "description": "Number of skeleton items to show when loading"
        },
        "ItemTemplate": {
          "aiHint": "",
          "type": "RenderFragment<T>",
          "name": "ItemTemplate",
          "isRequired": true,
          "description": "Items to display in the virtual list"
        },
        "EmptyTemplate": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "EmptyTemplate",
          "isRequired": true,
          "description": "Template for loading state"
        },
        "AdditionalAttributes": {
          "aiHint": "",
          "type": "Dictionary<string, object>",
          "name": "AdditionalAttributes",
          "isRequired": true,
          "description": "Size variant for spacing"
        },
        "OnLoadMore": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnLoadMore",
          "isRequired": true,
          "description": "Height of skeleton items"
        },
        "SkeletonCount": {
          "aiHint": "",
          "type": "int",
          "name": "SkeletonCount",
          "isRequired": true,
          "description": "Whether currently loading initial items"
        },
        "AutoLoadMore": {
          "aiHint": "",
          "type": "bool",
          "name": "AutoLoadMore",
          "isRequired": true,
          "description": "Buffer size for items outside visible area"
        },
        "IsLoading": {
          "aiHint": "",
          "type": "bool",
          "name": "IsLoading",
          "isRequired": true,
          "description": "Whether there are more items to load"
        },
        "ContainerHeight": {
          "aiHint": "",
          "type": "int",
          "name": "ContainerHeight",
          "isRequired": true,
          "description": "Height of each item in pixels"
        },
        "BufferSize": {
          "aiHint": "",
          "type": "int",
          "name": "BufferSize",
          "isRequired": true,
          "description": "Additional CSS classes"
        },
        "LoadingTemplate": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "LoadingTemplate",
          "isRequired": true,
          "description": "Template for rendering each item"
        },
        "Size": {
          "aiHint": "",
          "type": "string",
          "name": "Size",
          "isRequired": true,
          "description": "Auto-load more when scrolling near bottom"
        },
        "LoadMoreTemplate": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "LoadMoreTemplate",
          "isRequired": true,
          "description": "Template for empty state"
        }
      },
      "name": "RVirtualList",
      "commonUse": "",
      "filePath": "/Components/Data/RVirtualList.razor",
      "patterns": {},
      "description": ""
    },
    "RMetric": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "Suffix": {
          "aiHint": "",
          "type": "string",
          "name": "Suffix",
          "isRequired": true,
          "description": "Value prefix (e.g., \"$\", \"+\")"
        },
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": "Subtitle or description"
        },
        "Label": {
          "aiHint": "",
          "type": "string",
          "name": "Label",
          "isRequired": true,
          "description": "Metric value to display"
        },
        "ShowChange": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowChange",
          "isRequired": true,
          "description": "Whether metric is loading"
        },
        "Prefix": {
          "aiHint": "",
          "type": "string",
          "name": "Prefix",
          "isRequired": true,
          "description": "Icon to display"
        },
        "Variant": {
          "aiHint": "",
          "type": "string",
          "name": "Variant",
          "isRequired": true,
          "description": "Value suffix (e.g., \"%\", \"units\")"
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Whether change is currency"
        },
        "ChangeIsCurrency": {
          "aiHint": "",
          "type": "bool",
          "name": "ChangeIsCurrency",
          "isRequired": true,
          "description": "Change suffix (e.g., \"%\", \"pts\")"
        },
        "Clickable": {
          "aiHint": "",
          "type": "bool",
          "name": "Clickable",
          "isRequired": true,
          "description": "Click handler for interactive metrics"
        },
        "IsLoading": {
          "aiHint": "",
          "type": "bool",
          "name": "IsLoading",
          "isRequired": true,
          "description": "Format string for value display"
        },
        "ChangeSuffix": {
          "aiHint": "",
          "type": "string",
          "name": "ChangeSuffix",
          "isRequired": true,
          "description": "Change value (positive/negative)"
        },
        "Change": {
          "description": "Whether to show change indicator",
          "aiHint": "",
          "name": "Change",
          "type": "decimal?",
          "isRequired": false
        },
        "Subtitle": {
          "aiHint": "",
          "type": "string",
          "name": "Subtitle",
          "isRequired": true,
          "description": "Metric label/title"
        },
        "Format": {
          "aiHint": "",
          "type": "string",
          "name": "Format",
          "isRequired": true,
          "description": "Metric size"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "Custom content area"
        },
        "OnClick": {
          "aiHint": "",
          "type": "EventCallback<MouseEventArgs>",
          "name": "OnClick",
          "isRequired": true,
          "description": "Additional CSS classes"
        },
        "Size": {
          "aiHint": "",
          "type": "string",
          "name": "Size",
          "isRequired": true,
          "description": "Metric variant for styling"
        }
      },
      "name": "RMetric",
      "commonUse": "",
      "filePath": "/Components/Display/RMetric.razor",
      "patterns": {},
      "description": ""
    },
    "RSwitcher": {
      "category": "Form",
      "avoidUsage": "Don't use for simple on/off toggles - use checkbox instead",
      "complexity": "Intermediate",
      "aiPrompt": "Create a switcher for selecting between multiple options or states",
      "parameters": {
        "ShowLabels": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowLabels",
          "isRequired": true,
          "description": ""
        },
        "ItemLoadingSelector": {
          "aiHint": "",
          "type": "Func<TValue, bool>",
          "name": "ItemLoadingSelector",
          "isRequired": true,
          "description": ""
        },
        "ItemIconSelector": {
          "aiHint": "",
          "type": "Func<TValue, string>",
          "name": "ItemIconSelector",
          "isRequired": true,
          "description": ""
        },
        "ItemTitleSelector": {
          "aiHint": "",
          "type": "Func<TValue, string>",
          "name": "ItemTitleSelector",
          "isRequired": true,
          "description": ""
        },
        "Variant": {
          "aiHint": "Visual style variant (Standard, Pills, Tabs, Buttons)",
          "type": "SwitcherVariant",
          "name": "Variant",
          "isRequired": true,
          "description": ""
        },
        "ShowActiveIndicator": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowActiveIndicator",
          "isRequired": true,
          "description": ""
        },
        "ItemLabelSelector": {
          "aiHint": "Callback when selection changes",
          "type": "Func<TValue, string>",
          "name": "ItemLabelSelector",
          "isRequired": true,
          "description": ""
        },
        "ItemAriaLabelSelector": {
          "aiHint": "",
          "type": "Func<TValue, string>",
          "name": "ItemAriaLabelSelector",
          "isRequired": true,
          "description": ""
        },
        "ItemDisabledSelector": {
          "aiHint": "",
          "type": "Func<TValue, bool>",
          "name": "ItemDisabledSelector",
          "isRequired": true,
          "description": ""
        },
        "SelectedValueChanged": {
          "aiHint": "Currently selected value",
          "type": "EventCallback<TValue>",
          "name": "SelectedValueChanged",
          "isRequired": true,
          "description": ""
        },
        "Direction": {
          "aiHint": "Size of switcher items (Small, Medium, Large)",
          "type": "SwitcherDirection",
          "name": "Direction",
          "isRequired": true,
          "description": ""
        },
        "AdditionalClass": {
          "aiHint": "Layout direction (Horizontal, Vertical)",
          "type": "string",
          "name": "AdditionalClass",
          "isRequired": true,
          "description": ""
        },
        "SelectedValue": {
          "aiHint": "Collection of items to switch between",
          "type": "TValue",
          "name": "SelectedValue",
          "isRequired": true,
          "description": ""
        },
        "Size": {
          "aiHint": "Visual style variant (Standard, Pills, Tabs, Buttons)",
          "type": "SwitcherSize",
          "name": "Size",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RSwitcher",
      "commonUse": "tab switching, view toggles, option selection, filters",
      "filePath": "/Components/Form/RSwitcher.razor",
      "patterns": {
        "pill-switcher": "Items=\"@options\" Variant=\"SwitcherVariant.Pills\"",
        "compact-switcher": "Items=\"@items\" Variant=\"SwitcherVariant.Compact\" Size=\"SwitcherSize.Small\"",
        "button-group": "Items=\"@actions\" Variant=\"SwitcherVariant.Buttons\"",
        "tab-switcher": "Items=\"@tabItems\" ShowLabels=\"true\" Variant=\"SwitcherVariant.Tabs\""
      },
      "description": "Professional switcher component for toggling between multiple options"
    },
    "RTabItem": {
      "category": "Navigation",
      "avoidUsage": "Don't use outside RTabs container. Use RButton for standalone buttons.",
      "complexity": "Simple",
      "aiPrompt": "Create individual tab item for RTabs container",
      "parameters": {
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": "Icon for tab"
        },
        "Closable": {
          "aiHint": "",
          "type": "bool",
          "name": "Closable",
          "isRequired": true,
          "description": "Whether tab can be closed"
        },
        "Text": {
          "aiHint": "",
          "type": "string",
          "name": "Text",
          "isRequired": true,
          "description": "Tab text/title"
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Badge variant (danger, warning, success)"
        },
        "BadgeCount": {
          "aiHint": "",
          "type": "int",
          "name": "BadgeCount",
          "isRequired": true,
          "description": "Badge count to display"
        },
        "Disabled": {
          "aiHint": "",
          "type": "bool",
          "name": "Disabled",
          "isRequired": true,
          "description": "Icon position"
        },
        "Id": {
          "aiHint": "",
          "type": "string",
          "name": "Id",
          "isRequired": true,
          "description": "Unique identifier for this tab"
        }
      },
      "name": "RTabItem",
      "commonUse": "tab content organization, document tabs, settings sections",
      "filePath": "/Components/Navigation/RTabItem.razor",
      "patterns": {
        "badge-tab": "BadgeCount for notification indicators",
        "basic-tab": "Text and ChildContent for simple tab item",
        "icon-tab": "Icon=\"icon_name\" for tab with icon",
        "closable-tab": "Closable=\"true\" for removable tabs"
      },
      "description": "Individual tab item component for RTabs container with icon, badge, and content support. Supports closable tabs, disabled states, and badge notifications for professional tab experiences."
    },
    "RFormField": {
      "category": "Form",
      "avoidUsage": "Don't use for display-only data or readonly content",
      "complexity": "Complex",
      "aiPrompt": "Create a professional form field for user input with validation",
      "parameters": {
        "Disabled": {
          "aiHint": "",
          "type": "bool",
          "name": "Disabled",
          "isRequired": true,
          "description": "Whether to show required indicator (*)"
        },
        "OnKeyDown": {
          "aiHint": "",
          "type": "EventCallback<KeyboardEventArgs>",
          "name": "OnKeyDown",
          "isRequired": true,
          "description": "Called on blur"
        },
        "ValueChanged": {
          "aiHint": "Current value of the input field",
          "type": "EventCallback<string>",
          "name": "ValueChanged",
          "isRequired": true,
          "description": "Input field value"
        },
        "FullWidth": {
          "aiHint": "",
          "type": "bool",
          "name": "FullWidth",
          "isRequired": true,
          "description": "Icon on the right side of the input"
        },
        "Value": {
          "aiHint": "Label text displayed above the field",
          "type": "string",
          "name": "Value",
          "isRequired": true,
          "description": "Field label text"
        },
        "ErrorMessage": {
          "aiHint": "",
          "type": "string",
          "name": "ErrorMessage",
          "isRequired": true,
          "description": "Help text below the input"
        },
        "ReadOnly": {
          "aiHint": "",
          "type": "bool",
          "name": "ReadOnly",
          "isRequired": true,
          "description": "Whether field is disabled"
        },
        "Density": {
          "aiHint": "Visual style variant of the field",
          "type": "FormDensity",
          "name": "Density",
          "isRequired": true,
          "description": "Field style variant (Default, Clean, Outlined, Filled)"
        },
        "AutoResize": {
          "aiHint": "",
          "type": "bool",
          "name": "AutoResize",
          "isRequired": true,
          "description": "Number of textarea rows"
        },
        "CheckboxText": {
          "aiHint": "",
          "type": "string",
          "name": "CheckboxText",
          "isRequired": true,
          "description": "Checkbox checked state"
        },
        "EndIcon": {
          "aiHint": "",
          "type": "string",
          "name": "EndIcon",
          "isRequired": true,
          "description": "Icon on the left side of the input"
        },
        "MinValue": {
          "aiHint": "",
          "type": "string",
          "name": "MinValue",
          "isRequired": true,
          "description": "Radio options content"
        },
        "HelpText": {
          "aiHint": "Placeholder text shown when field is empty",
          "type": "string",
          "name": "HelpText",
          "isRequired": true,
          "description": "Placeholder text"
        },
        "OnInput": {
          "aiHint": "",
          "type": "EventCallback<string>",
          "name": "OnInput",
          "isRequired": true,
          "description": "Custom input content for FieldType.Custom"
        },
        "Placeholder": {
          "aiHint": "Placeholder text shown when field is empty",
          "type": "string",
          "name": "Placeholder",
          "isRequired": true,
          "description": "Callback when value changes"
        },
        "CheckedChanged": {
          "aiHint": "",
          "type": "EventCallback<bool>",
          "name": "CheckedChanged",
          "isRequired": true,
          "description": "Checkbox text/label"
        },
        "InputClass": {
          "aiHint": "",
          "type": "string",
          "name": "InputClass",
          "isRequired": true,
          "description": "Additional CSS classes for the field group"
        },
        "HasError": {
          "aiHint": "",
          "type": "bool",
          "name": "HasError",
          "isRequired": true,
          "description": "Whether field is readonly"
        },
        "OnFocus": {
          "aiHint": "",
          "type": "EventCallback<FocusEventArgs>",
          "name": "OnFocus",
          "isRequired": true,
          "description": "Called on input event (real-time)"
        },
        "MaxLength": {
          "aiHint": "",
          "type": "int",
          "name": "MaxLength",
          "isRequired": true,
          "description": "Whether to show character count"
        },
        "AutoComplete": {
          "aiHint": "",
          "type": "string",
          "name": "AutoComplete",
          "isRequired": true,
          "description": "Maximum character length"
        },
        "IsChecked": {
          "aiHint": "",
          "type": "bool",
          "name": "IsChecked",
          "isRequired": true,
          "description": "Select options content"
        },
        "Step": {
          "aiHint": "",
          "type": "string",
          "name": "Step",
          "isRequired": true,
          "description": "Maximum value for number/range inputs"
        },
        "ShowRangeValue": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowRangeValue",
          "isRequired": true,
          "description": "Step value for number/range inputs"
        },
        "Size": {
          "aiHint": "Type of input field (Text, Email, Password, Select, etc.)",
          "type": "FieldSize",
          "name": "Size",
          "isRequired": true,
          "description": "Field type"
        },
        "Rows": {
          "aiHint": "",
          "type": "int",
          "name": "Rows",
          "isRequired": true,
          "description": "Whether input spans full width"
        },
        "ValidationContext": {
          "description": "Field name for binding to validation context (auto-derived from Label if not set)",
          "aiHint": "",
          "name": "ValidationContext",
          "type": "FormValidationContext?",
          "isRequired": false
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Autocomplete attribute"
        },
        "AllowMultiple": {
          "aiHint": "",
          "type": "bool",
          "name": "AllowMultiple",
          "isRequired": true,
          "description": "Accepted file types"
        },
        "SelectOptions": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "SelectOptions",
          "isRequired": true,
          "description": "Select placeholder option"
        },
        "OnKeyUp": {
          "aiHint": "",
          "type": "EventCallback<KeyboardEventArgs>",
          "name": "OnKeyUp",
          "isRequired": true,
          "description": "Called on key down"
        },
        "OnEndIconClick": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnEndIconClick",
          "isRequired": true,
          "description": "Called when start icon is clicked"
        },
        "FieldType": {
          "aiHint": "Unique identifier for the input field",
          "type": "FieldType",
          "name": "FieldType",
          "isRequired": true,
          "description": "Input field identifier"
        },
        "OnStartIconClick": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnStartIconClick",
          "isRequired": true,
          "description": "Called on key up"
        },
        "SelectPlaceholder": {
          "aiHint": "",
          "type": "string",
          "name": "SelectPlaceholder",
          "isRequired": true,
          "description": "Whether textarea auto-resizes"
        },
        "StartIcon": {
          "aiHint": "",
          "type": "string",
          "name": "StartIcon",
          "isRequired": true,
          "description": "Additional CSS classes for the input element"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "Whether field is in loading state"
        },
        "OnBlur": {
          "aiHint": "",
          "type": "EventCallback<FocusEventArgs>",
          "name": "OnBlur",
          "isRequired": true,
          "description": "Called on focus"
        },
        "AcceptTypes": {
          "aiHint": "",
          "type": "string",
          "name": "AcceptTypes",
          "isRequired": true,
          "description": "Suffix for range value display"
        },
        "FieldName": {
          "aiHint": "",
          "type": "string",
          "name": "FieldName",
          "isRequired": true,
          "description": "Error message to display"
        },
        "ShowCharacterCount": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowCharacterCount",
          "isRequired": true,
          "description": "File change callback"
        },
        "FileChanged": {
          "aiHint": "",
          "type": "EventCallback<InputFileChangeEventArgs>",
          "name": "FileChanged",
          "isRequired": true,
          "description": "Allow multiple file selection"
        },
        "RangeValueSuffix": {
          "aiHint": "",
          "type": "string",
          "name": "RangeValueSuffix",
          "isRequired": true,
          "description": "Show current value for range input"
        },
        "RadioOptions": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "RadioOptions",
          "isRequired": true,
          "description": "Callback when checkbox changes"
        },
        "ShowRequiredIndicator": {
          "aiHint": "Mark field as required for form validation",
          "type": "bool",
          "name": "ShowRequiredIndicator",
          "isRequired": true,
          "description": "Whether field is required"
        },
        "MaxValue": {
          "aiHint": "",
          "type": "string",
          "name": "MaxValue",
          "isRequired": true,
          "description": "Minimum value for number/range inputs"
        },
        "Variant": {
          "aiHint": "Visual style variant of the field",
          "type": "FieldVariant",
          "name": "Variant",
          "isRequired": true,
          "description": "Field size variant"
        },
        "Label": {
          "aiHint": "Label text displayed above the field",
          "type": "string",
          "name": "Label",
          "isRequired": true,
          "description": "Field density for spacing control"
        }
      },
      "name": "RFormField",
      "commonUse": "text input, email validation, password fields, dropdowns, checkboxes, file uploads",
      "filePath": "/Components/Form/RFormField.razor",
      "patterns": {
        "email-field": "FieldType=\"FieldType.Email\" Required=\"true\" for email validation",
        "required-field": "Required=\"true\" ShowRequiredIndicator=\"true\"",
        "select-dropdown": "FieldType=\"FieldType.Select\" with SelectOptions",
        "floating-label": "Variant=\"FieldVariant.FloatingLabel\" for modern forms",
        "password-field": "FieldType=\"FieldType.Password\" with strength indicators",
        "checkbox-field": "FieldType=\"FieldType.Checkbox\" with CheckboxText",
        "file-upload": "FieldType=\"FieldType.File\" with AcceptTypes",
        "text-input": "FieldType=\"FieldType.Text\" for basic text input"
      },
      "description": "Universal form field component with professional validation and utility-first CSS"
    },
    "RProgressBar": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "Indeterminate": {
          "aiHint": "",
          "type": "bool",
          "name": "Indeterminate",
          "isRequired": true,
          "description": ""
        },
        "Variant": {
          "aiHint": "",
          "type": "ProgressVariant",
          "name": "Variant",
          "isRequired": true,
          "description": ""
        },
        "Label": {
          "aiHint": "",
          "type": "string",
          "name": "Label",
          "isRequired": true,
          "description": ""
        },
        "Size": {
          "aiHint": "",
          "type": "ProgressSize",
          "name": "Size",
          "isRequired": true,
          "description": ""
        },
        "ShowLabel": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowLabel",
          "isRequired": true,
          "description": ""
        },
        "Animated": {
          "aiHint": "",
          "type": "bool",
          "name": "Animated",
          "isRequired": true,
          "description": ""
        },
        "LabelInside": {
          "aiHint": "",
          "type": "bool",
          "name": "LabelInside",
          "isRequired": true,
          "description": ""
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": ""
        },
        "LabelFormat": {
          "aiHint": "",
          "type": "string",
          "name": "LabelFormat",
          "isRequired": true,
          "description": ""
        },
        "Striped": {
          "aiHint": "",
          "type": "bool",
          "name": "Striped",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RProgressBar",
      "commonUse": "",
      "filePath": "/Components/Display/RProgressBar.razor",
      "patterns": {},
      "description": ""
    },
    "RSectionDivider": {
      "category": "Core",
      "avoidUsage": "Don't overuse - only for logical section breaks. Avoid for simple line separation.",
      "complexity": "Simple",
      "aiPrompt": "Create a professional section divider for content organization",
      "parameters": {
        "Subtitle": {
          "aiHint": "",
          "type": "string",
          "name": "Subtitle",
          "isRequired": true,
          "description": "<ai-hint>Use for helpful descriptions like \"Update your profile information\" or instructions</ai-hint>"
        },
        "Variant": {
          "aiHint": "",
          "type": "SectionDividerVariant",
          "name": "Variant",
          "isRequired": true,
          "description": "<ai-hint>Primary for important sections, Success for completed areas, Warning for attention needed</ai-hint>"
        },
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": "<ai-hint>Common icons: settings, person, security, payment, work, home, info</ai-hint>"
        },
        "Size": {
          "aiHint": "",
          "type": "SectionDividerSize",
          "name": "Size",
          "isRequired": true,
          "description": "<ai-hint>Default for most sections, Compact for tight layouts, Large for prominent sections</ai-hint>"
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Additional CSS classes"
        },
        "Alignment": {
          "aiHint": "",
          "type": "SectionDividerAlignment",
          "name": "Alignment",
          "isRequired": true,
          "description": "<ai-hint>Left for standard sections, Center for balanced layouts, Right for special cases</ai-hint>"
        },
        "ShowLine": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowLine",
          "isRequired": true,
          "description": "<ai-hint>True for visual separation, false for text-only section headers</ai-hint>"
        },
        "Title": {
          "aiHint": "",
          "type": "string",
          "name": "Title",
          "isRequired": true,
          "description": "<ai-hint>Use descriptive section names like \"Personal Information\", \"Security Settings\", \"Billing Details\"</ai-hint>"
        }
      },
      "name": "RSectionDivider",
      "commonUse": "page sections, form organization, content separation, feature grouping",
      "filePath": "/Components/Core/RSectionDivider.razor",
      "patterns": {
        "compact-divider": "Size=\"SectionDividerSize.Compact\" for tight layouts",
        "prominent-section": "Size=\"SectionDividerSize.Large\" Variant=\"SectionDividerVariant.Primary\" for important sections",
        "centered-section": "Alignment=\"SectionDividerAlignment.Center\" for balanced layouts",
        "titled-section": "Title=\"User Settings\" Icon=\"settings\" for labeled content sections"
      },
      "description": "Professional section divider component for organizing content areas with titles, icons, and visual separation. Supports multiple sizes, alignments, and semantic variants with enterprise-grade styling."
    },
    "RModalProvider": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {},
      "name": "RModalProvider",
      "commonUse": "",
      "filePath": "/Components/Feedback/RModalProvider.razor",
      "patterns": {},
      "description": ""
    },
    "RDropdown": {
      "category": "Navigation",
      "avoidUsage": "Don't use for simple text inputs - use RFormField instead. Avoid for navigation - use RNavMenu.",
      "complexity": "Complex",
      "aiPrompt": "Create dropdown menu for item selection",
      "parameters": {
        "EmptyText": {
          "aiHint": "",
          "type": "string",
          "name": "EmptyText",
          "isRequired": true,
          "description": ""
        },
        "Footer": {
          "aiHint": "",
          "type": "string",
          "name": "Footer",
          "isRequired": true,
          "description": ""
        },
        "OnClosed": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnClosed",
          "isRequired": true,
          "description": ""
        },
        "SelectedValue": {
          "aiHint": "",
          "type": "TValue",
          "name": "SelectedValue",
          "isRequired": true,
          "description": ""
        },
        "LoadingText": {
          "aiHint": "",
          "type": "string",
          "name": "LoadingText",
          "isRequired": true,
          "description": ""
        },
        "OnOpened": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnOpened",
          "isRequired": true,
          "description": ""
        },
        "EmptyContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "EmptyContent",
          "isRequired": true,
          "description": ""
        },
        "ItemLabelSelector": {
          "aiHint": "",
          "type": "Func<TValue, string>",
          "name": "ItemLabelSelector",
          "isRequired": true,
          "description": ""
        },
        "CloseOnSelect": {
          "aiHint": "",
          "type": "bool",
          "name": "CloseOnSelect",
          "isRequired": true,
          "description": ""
        },
        "IsLoading": {
          "aiHint": "",
          "type": "bool",
          "name": "IsLoading",
          "isRequired": true,
          "description": ""
        },
        "ItemDisabledSelector": {
          "aiHint": "",
          "type": "Func<TValue, bool>",
          "name": "ItemDisabledSelector",
          "isRequired": true,
          "description": ""
        },
        "Items": {
          "aiHint": "",
          "type": "IEnumerable<TValue>",
          "name": "Items",
          "isRequired": true,
          "description": ""
        },
        "SeparatorAfterSelector": {
          "aiHint": "",
          "type": "Func<TValue, bool>",
          "name": "SeparatorAfterSelector",
          "isRequired": true,
          "description": ""
        },
        "AdditionalClass": {
          "aiHint": "",
          "type": "string",
          "name": "AdditionalClass",
          "isRequired": true,
          "description": ""
        },
        "Position": {
          "aiHint": "",
          "type": "DropdownPosition",
          "name": "Position",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RDropdown",
      "commonUse": "select menus, action menus, option lists, context menus",
      "filePath": "/Components/Navigation/RDropdown.razor",
      "patterns": {
        "loading-dropdown": "IsLoading=\"true\" for async data loading",
        "action-dropdown": "Button trigger with action items for context menus",
        "basic-dropdown": "Items list with TriggerContent for basic selection",
        "searchable-dropdown": "Filterable items with search functionality"
      },
      "description": "Professional dropdown component for item selection with keyboard navigation and accessibility. Supports custom triggers, loading states, search filtering, and flexible item rendering."
    },
    "RTimeline": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "Variant": {
          "aiHint": "",
          "type": "TimelineVariant",
          "name": "Variant",
          "isRequired": true,
          "description": "Timeline items to display"
        },
        "DateFormat": {
          "aiHint": "",
          "type": "string",
          "name": "DateFormat",
          "isRequired": true,
          "description": "Number of skeleton items to show when loading"
        },
        "IsLoading": {
          "aiHint": "",
          "type": "bool",
          "name": "IsLoading",
          "isRequired": true,
          "description": "Timeline variant"
        },
        "Orientation": {
          "aiHint": "",
          "type": "string",
          "name": "Orientation",
          "isRequired": true,
          "description": "Whether timeline is compact"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "Whether to show relative times (e.g., \"2 hours ago\")"
        },
        "ShowRelativeTime": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowRelativeTime",
          "isRequired": true,
          "description": "Date format for timestamps"
        },
        "LoadingItemCount": {
          "aiHint": "",
          "type": "int",
          "name": "LoadingItemCount",
          "isRequired": true,
          "description": "Whether timeline is loading"
        },
        "IsCompact": {
          "aiHint": "",
          "type": "bool",
          "name": "IsCompact",
          "isRequired": true,
          "description": "Additional CSS classes"
        }
      },
      "name": "RTimeline",
      "commonUse": "",
      "filePath": "/Components/Display/RTimeline.razor",
      "patterns": {},
      "description": ""
    },
    "RInfoItem": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": "Value text for the info item"
        },
        "Size": {
          "aiHint": "",
          "type": "InfoItemSize",
          "name": "Size",
          "isRequired": true,
          "description": "Whether this field is required"
        },
        "EmphasizeValue": {
          "aiHint": "",
          "type": "bool",
          "name": "EmphasizeValue",
          "isRequired": true,
          "description": "Layout variant"
        },
        "Value": {
          "aiHint": "",
          "type": "string",
          "name": "Value",
          "isRequired": true,
          "description": "Label text for the info item"
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Additional CSS classes"
        },
        "IsRequired": {
          "aiHint": "",
          "type": "bool",
          "name": "IsRequired",
          "isRequired": true,
          "description": "Material icon name"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "Whether to emphasize the value"
        },
        "Layout": {
          "aiHint": "",
          "type": "InfoItemLayout",
          "name": "Layout",
          "isRequired": true,
          "description": "Size variant"
        }
      },
      "name": "RInfoItem",
      "commonUse": "",
      "filePath": "/Components/Display/RInfoItem.razor",
      "patterns": {},
      "description": ""
    },
    "RFileUpload": {
      "category": "Form",
      "avoidUsage": "Don't use for simple text input or when files are not needed",
      "complexity": "Complex",
      "aiPrompt": "Create a file upload component with drag-drop and file validation",
      "parameters": {
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": "Icon for upload area"
        },
        "IsDisabled": {
          "aiHint": "Visual style mode (DropZone, Button, Inline, Minimal)",
          "type": "bool",
          "name": "IsDisabled",
          "isRequired": true,
          "description": "Display mode for the upload component"
        },
        "ShowBrowseButton": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowBrowseButton",
          "isRequired": true,
          "description": "Allow file removal"
        },
        "UploadText": {
          "aiHint": "",
          "type": "string",
          "name": "UploadText",
          "isRequired": true,
          "description": "Show browse button in drop zone"
        },
        "ShowPreview": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowPreview",
          "isRequired": true,
          "description": "Allow duplicate files"
        },
        "OnUploadComplete": {
          "aiHint": "",
          "type": "EventCallback<RFileUploadResult>",
          "name": "OnUploadComplete",
          "isRequired": true,
          "description": "Called when files are selected"
        },
        "HelpText": {
          "aiHint": "",
          "type": "string",
          "name": "HelpText",
          "isRequired": true,
          "description": "Upload area hint text"
        },
        "IconPosition": {
          "aiHint": "",
          "type": "IconPosition",
          "name": "IconPosition",
          "isRequired": true,
          "description": "Icon for the component"
        },
        "Files": {
          "aiHint": "",
          "type": "List<RFileInfo>",
          "name": "Files",
          "isRequired": true,
          "description": "Start icon for button mode (deprecated - use Icon + IconPosition)"
        },
        "MaxSize": {
          "aiHint": "Array of allowed file extensions or MIME types",
          "type": "long",
          "name": "MaxSize",
          "isRequired": true,
          "description": "Allowed file types (extensions like .pdf, .jpg or MIME types)"
        },
        "BrowseButtonText": {
          "aiHint": "",
          "type": "string",
          "name": "BrowseButtonText",
          "isRequired": true,
          "description": "Button text for button mode"
        },
        "GenerateThumbnails": {
          "aiHint": "",
          "type": "bool",
          "name": "GenerateThumbnails",
          "isRequired": true,
          "description": "Enable drag and drop"
        },
        "ShowProgress": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowProgress",
          "isRequired": true,
          "description": "Show file preview/list"
        },
        "UploadIcon": {
          "aiHint": "",
          "type": "string",
          "name": "UploadIcon",
          "isRequired": true,
          "description": "Browse button text in drop zone"
        },
        "HintText": {
          "aiHint": "",
          "type": "string",
          "name": "HintText",
          "isRequired": true,
          "description": "Upload area title text"
        },
        "AllowRemove": {
          "aiHint": "",
          "type": "bool",
          "name": "AllowRemove",
          "isRequired": true,
          "description": "Generate thumbnails for images"
        },
        "AllowDuplicates": {
          "aiHint": "Allow selecting multiple files at once",
          "type": "bool",
          "name": "AllowDuplicates",
          "isRequired": true,
          "description": "Allow multiple file selection"
        },
        "ButtonText": {
          "aiHint": "",
          "type": "string",
          "name": "ButtonText",
          "isRequired": true,
          "description": "Help text below component"
        },
        "DragDrop": {
          "aiHint": "",
          "type": "bool",
          "name": "DragDrop",
          "isRequired": true,
          "description": "Show upload progress"
        },
        "StartIcon": {
          "aiHint": "",
          "type": "string",
          "name": "StartIcon",
          "isRequired": true,
          "description": "Position of the icon"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "Whether component is disabled"
        },
        "MaxFiles": {
          "aiHint": "Maximum file size in bytes",
          "type": "int",
          "name": "MaxFiles",
          "isRequired": true,
          "description": "Maximum file size in bytes"
        },
        "OnFileRemoved": {
          "aiHint": "",
          "type": "EventCallback<string>",
          "name": "OnFileRemoved",
          "isRequired": true,
          "description": "Called when upload progress changes"
        },
        "Multiple": {
          "aiHint": "Allow selecting multiple files at once",
          "type": "bool",
          "name": "Multiple",
          "isRequired": true,
          "description": "Maximum number of files"
        },
        "InputId": {
          "aiHint": "Unique identifier for the file upload component",
          "type": "string",
          "name": "InputId",
          "isRequired": true,
          "description": "Component identifier"
        },
        "OnFilesSelected": {
          "aiHint": "",
          "type": "EventCallback<RFileUploadResult>",
          "name": "OnFilesSelected",
          "isRequired": true,
          "description": "Callback when files change"
        },
        "DisplayMode": {
          "aiHint": "Visual style mode (DropZone, Button, Inline, Minimal)",
          "type": "RFileUploadDisplayMode",
          "name": "DisplayMode",
          "isRequired": true,
          "description": "Input element identifier"
        },
        "OnProgressChanged": {
          "aiHint": "",
          "type": "EventCallback<(string FileId, double Progress)>",
          "name": "OnProgressChanged",
          "isRequired": true,
          "description": "Called when upload completes"
        }
      },
      "name": "RFileUpload",
      "commonUse": "document upload, image upload, file attachments, media upload",
      "filePath": "/Components/Form/RFileUpload.razor",
      "patterns": {
        "multiple-files": "Multiple=\"true\" MaxFiles=\"5\" ShowPreview=\"true\"",
        "document-upload": "AllowedTypes=\"new[] { \\\".pdf\\\", \\\".docx\\\" }\" MaxSize=\"10MB\"",
        "inline-mode": "DisplayMode=\"RFileUploadDisplayMode.Inline\" ShowPreview=\"false\"",
        "image-upload": "AllowedTypes=\"new[] { \\\".jpg\\\", \\\".png\\\" }\" GenerateThumbnails=\"true\"",
        "button-mode": "DisplayMode=\"RFileUploadDisplayMode.Button\" ButtonText=\"Upload Files\""
      },
      "description": "Professional file upload component with drag-drop, validation, and preview"
    },
    "RDetailModal": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "ShowMetadata": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowMetadata",
          "isRequired": true,
          "description": ""
        },
        "IncludedProperties": {
          "aiHint": "",
          "type": "List<string>",
          "name": "IncludedProperties",
          "isRequired": true,
          "description": ""
        },
        "PropertyLabels": {
          "aiHint": "",
          "type": "Dictionary<string, string>",
          "name": "PropertyLabels",
          "isRequired": true,
          "description": ""
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": ""
        },
        "ShowPropertyGrid": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowPropertyGrid",
          "isRequired": true,
          "description": ""
        },
        "ExcludedProperties": {
          "aiHint": "",
          "type": "List<string>",
          "name": "ExcludedProperties",
          "isRequired": true,
          "description": ""
        },
        "DetailTemplate": {
          "aiHint": "",
          "type": "RenderFragment<T>",
          "name": "DetailTemplate",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RDetailModal",
      "commonUse": "",
      "filePath": "/Components/Feedback/RDetailModal.razor",
      "patterns": {},
      "description": ""
    },
    "RDatePicker": {
      "category": "Form",
      "avoidUsage": "Don't use for simple date input - use RDatePickerBasic instead",
      "complexity": "Complex",
      "aiPrompt": "Create a date/time picker with calendar popup and validation",
      "parameters": {
        "Icon": {
          "aiHint": "Size of the picker input (Small, Medium, Large)",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": ""
        },
        "Disabled": {
          "aiHint": "",
          "type": "bool",
          "name": "Disabled",
          "isRequired": true,
          "description": ""
        },
        "OnCalendarOpen": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnCalendarOpen",
          "isRequired": true,
          "description": ""
        },
        "ValueChanged": {
          "aiHint": "Selected date/time value",
          "type": "EventCallback<DateTime?>",
          "name": "ValueChanged",
          "isRequired": true,
          "description": ""
        },
        "ShowTime": {
          "aiHint": "Enable date range selection",
          "type": "bool",
          "name": "ShowTime",
          "isRequired": true,
          "description": ""
        },
        "Required": {
          "aiHint": "Array of disabled days of week",
          "type": "bool",
          "name": "Required",
          "isRequired": true,
          "description": ""
        },
        "Use24HourFormat": {
          "aiHint": "Show time picker alongside date",
          "type": "bool",
          "name": "Use24HourFormat",
          "isRequired": true,
          "description": ""
        },
        "Value": {
          "aiHint": "Selected date/time value",
          "type": "DateTime?",
          "name": "Value",
          "isRequired": false,
          "description": ""
        },
        "ErrorMessage": {
          "aiHint": "",
          "type": "string",
          "name": "ErrorMessage",
          "isRequired": true,
          "description": ""
        },
        "ReadOnly": {
          "aiHint": "",
          "type": "bool",
          "name": "ReadOnly",
          "isRequired": true,
          "description": ""
        },
        "OnDateSelected": {
          "aiHint": "",
          "type": "EventCallback<DateTime?>",
          "name": "OnDateSelected",
          "isRequired": true,
          "description": ""
        },
        "Format": {
          "aiHint": "Placeholder text when no date selected",
          "type": "string",
          "name": "Format",
          "isRequired": true,
          "description": ""
        },
        "DisabledDates": {
          "aiHint": "Maximum selectable date",
          "type": "Func<DateTime, bool>",
          "name": "DisabledDates",
          "isRequired": true,
          "description": ""
        },
        "IconPosition": {
          "aiHint": "",
          "type": "IconPosition",
          "name": "IconPosition",
          "isRequired": true,
          "description": "Icon for the component"
        },
        "ShowTodayButton": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowTodayButton",
          "isRequired": true,
          "description": ""
        },
        "OnCalendarClose": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnCalendarClose",
          "isRequired": true,
          "description": ""
        },
        "HasError": {
          "aiHint": "",
          "type": "bool",
          "name": "HasError",
          "isRequired": true,
          "description": ""
        },
        "Range": {
          "aiHint": "Enable date range selection",
          "type": "bool",
          "name": "Range",
          "isRequired": true,
          "description": "Start icon (deprecated - use Icon + IconPosition)"
        },
        "ShowClearButton": {
          "aiHint": "Minute interval for time picker",
          "type": "bool",
          "name": "ShowClearButton",
          "isRequired": true,
          "description": ""
        },
        "EndValueChanged": {
          "aiHint": "End date for range selection",
          "type": "EventCallback<DateTime?>",
          "name": "EndValueChanged",
          "isRequired": true,
          "description": ""
        },
        "HelperText": {
          "aiHint": "",
          "type": "string",
          "name": "HelperText",
          "isRequired": true,
          "description": ""
        },
        "Size": {
          "aiHint": "Date format string",
          "type": "FieldSize",
          "name": "Size",
          "isRequired": true,
          "description": ""
        },
        "ShowWeekNumbers": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowWeekNumbers",
          "isRequired": true,
          "description": ""
        },
        "StartIcon": {
          "aiHint": "",
          "type": "string",
          "name": "StartIcon",
          "isRequired": true,
          "description": "Position of the icon"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "Start icon (deprecated - use Icon + IconPosition)"
        },
        "EndValue": {
          "aiHint": "Callback when date/time value changes",
          "type": "DateTime?",
          "name": "EndValue",
          "isRequired": false,
          "description": ""
        },
        "MinDate": {
          "aiHint": "Minimum selectable date",
          "type": "DateTime?",
          "name": "MinDate",
          "isRequired": false,
          "description": ""
        },
        "MaxDate": {
          "aiHint": "Minimum selectable date",
          "type": "DateTime?",
          "name": "MaxDate",
          "isRequired": false,
          "description": ""
        },
        "Placeholder": {
          "aiHint": "Label text displayed above the picker",
          "type": "string",
          "name": "Placeholder",
          "isRequired": true,
          "description": ""
        },
        "MinuteInterval": {
          "aiHint": "Use 24-hour time format instead of AM/PM",
          "type": "int",
          "name": "MinuteInterval",
          "isRequired": true,
          "description": ""
        },
        "Label": {
          "aiHint": "Callback when end date changes",
          "type": "string",
          "name": "Label",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RDatePicker",
      "commonUse": "date selection, appointment scheduling, event planning, form dates",
      "filePath": "/Components/Form/RDatePicker.razor",
      "patterns": {
        "datetime": "@bind-Value=\"dateTime\" ShowTime=\"true\" Use24HourFormat=\"false\"",
        "business-days": "DisabledDaysOfWeek=\"@weekends\" MinDate=\"@DateTime.Today\"",
        "date-range": "@bind-Value=\"startDate\" @bind-EndValue=\"endDate\" Range=\"true\"",
        "date-only": "@bind-Value=\"selectedDate\" ShowTime=\"false\"",
        "restricted-dates": "MinDate=\"@DateTime.Today\" MaxDate=\"@futureDate\""
      },
      "description": "Professional date and time picker with calendar popup and time selection"
    },
    "RDataTableColumn": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "HeaderTemplate": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "HeaderTemplate",
          "isRequired": true,
          "description": ""
        },
        "CellClass": {
          "aiHint": "",
          "type": "string",
          "name": "CellClass",
          "isRequired": true,
          "description": ""
        },
        "Header": {
          "aiHint": "",
          "type": "string",
          "name": "Header",
          "isRequired": true,
          "description": ""
        },
        "MaxWidth": {
          "aiHint": "",
          "type": "string",
          "name": "MaxWidth",
          "isRequired": true,
          "description": ""
        },
        "Parent": {
          "aiHint": "",
          "type": "RDataTable<TItem>",
          "name": "Parent",
          "isRequired": true,
          "description": ""
        },
        "CellTemplate": {
          "aiHint": "",
          "type": "RenderFragment<TItem>",
          "name": "CellTemplate",
          "isRequired": true,
          "description": ""
        },
        "Width": {
          "aiHint": "",
          "type": "string",
          "name": "Width",
          "isRequired": true,
          "description": ""
        },
        "HeaderClass": {
          "aiHint": "",
          "type": "string",
          "name": "HeaderClass",
          "isRequired": true,
          "description": ""
        },
        "Sortable": {
          "aiHint": "",
          "type": "bool",
          "name": "Sortable",
          "isRequired": true,
          "description": ""
        },
        "MinWidth": {
          "aiHint": "",
          "type": "string",
          "name": "MinWidth",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RDataTableColumn",
      "commonUse": "",
      "filePath": "/Components/Data/RDataTableColumn.razor",
      "patterns": {},
      "description": ""
    },
    "RSkeleton": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "Count": {
          "aiHint": "",
          "type": "int",
          "name": "Count",
          "isRequired": true,
          "description": ""
        },
        "Animated": {
          "aiHint": "",
          "type": "bool",
          "name": "Animated",
          "isRequired": true,
          "description": ""
        },
        "Height": {
          "aiHint": "",
          "type": "string",
          "name": "Height",
          "isRequired": true,
          "description": ""
        },
        "Width": {
          "aiHint": "",
          "type": "string",
          "name": "Width",
          "isRequired": true,
          "description": ""
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": ""
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RSkeleton",
      "commonUse": "",
      "filePath": "/Components/Display/RSkeleton.razor",
      "patterns": {},
      "description": ""
    },
    "RAppShell": {
      "category": "Layout",
      "avoidUsage": "Don't use for simple pages without navigation. Use RSection for content organization instead.",
      "complexity": "Complex",
      "aiPrompt": "Create complete app layout with header and sidebar",
      "parameters": {
        "ShowSidebarToggle": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowSidebarToggle",
          "isRequired": true,
          "description": "Show/hide user menu"
        },
        "ShowThemeToggle": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowThemeToggle",
          "isRequired": true,
          "description": "Show/hide notifications button"
        },
        "SidebarFooter": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "SidebarFooter",
          "isRequired": true,
          "description": "Custom navigation content"
        },
        "QuickActionsFloating": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "QuickActionsFloating",
          "isRequired": true,
          "description": "Quick actions in header"
        },
        "UserMenuClicked": {
          "aiHint": "",
          "type": "EventCallback<AppUser>",
          "name": "UserMenuClicked",
          "isRequired": true,
          "description": "Notification button clicked callback"
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Status bar content"
        },
        "NotificationCount": {
          "aiHint": "",
          "type": "int",
          "name": "NotificationCount",
          "isRequired": true,
          "description": "Breadcrumb items"
        },
        "Navigation": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "Navigation",
          "isRequired": true,
          "description": "Custom logo content"
        },
        "ShowSearch": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowSearch",
          "isRequired": true,
          "description": "Show/hide search functionality"
        },
        "HeaderRight": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "HeaderRight",
          "isRequired": true,
          "description": "Left side header content"
        },
        "ShowNotifications": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowNotifications",
          "isRequired": true,
          "description": "Make search collapsible on the right side"
        },
        "NotificationsClicked": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "NotificationsClicked",
          "isRequired": true,
          "description": "Search query changed callback"
        },
        "SidebarCollapsedChanged": {
          "aiHint": "",
          "type": "EventCallback<bool>",
          "name": "SidebarCollapsedChanged",
          "isRequired": true,
          "description": "Theme changed callback"
        },
        "ThemeChanged": {
          "aiHint": "",
          "type": "EventCallback<string>",
          "name": "ThemeChanged",
          "isRequired": true,
          "description": "Whether content should be centered when max width is applied"
        },
        "Title": {
          "aiHint": "",
          "type": "string",
          "name": "Title",
          "isRequired": true,
          "description": "App title (required)"
        },
        "Theme": {
          "aiHint": "",
          "type": "string",
          "name": "Theme",
          "isRequired": true,
          "description": "Theme mode (light/dark/system)"
        },
        "ContentCentered": {
          "aiHint": "",
          "type": "bool",
          "name": "ContentCentered",
          "isRequired": true,
          "description": "Content maximum width (e.g., \"1200px\", \"90%\"). Default is no constraint."
        },
        "CurrentUser": {
          "aiHint": "",
          "type": "AppUser",
          "name": "CurrentUser",
          "isRequired": true,
          "description": "Current user for user menu and permissions"
        },
        "PageTitle": {
          "aiHint": "",
          "type": "string",
          "name": "PageTitle",
          "isRequired": true,
          "description": "Show/hide quick actions"
        },
        "NavigationItems": {
          "aiHint": "",
          "type": "List<AppNavItem>",
          "name": "NavigationItems",
          "isRequired": true,
          "description": "Navigation items (smart default)"
        },
        "SearchChanged": {
          "aiHint": "",
          "type": "EventCallback<string>",
          "name": "SearchChanged",
          "isRequired": true,
          "description": "Sidebar state changed callback"
        },
        "ShowToasts": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowToasts",
          "isRequired": true,
          "description": "Show/hide header"
        },
        "ShowUserMenu": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowUserMenu",
          "isRequired": true,
          "description": "Show/hide theme toggle"
        },
        "ShowSidebar": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowSidebar",
          "isRequired": true,
          "description": "Show/hide sidebar"
        },
        "ShowStatusBar": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowStatusBar",
          "isRequired": true,
          "description": "Show/hide breadcrumbs"
        },
        "PageSubtitle": {
          "aiHint": "",
          "type": "string",
          "name": "PageSubtitle",
          "isRequired": true,
          "description": "Page title for header"
        },
        "ShowQuickActions": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowQuickActions",
          "isRequired": true,
          "description": "Show/hide status bar"
        },
        "QuickActions": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "QuickActions",
          "isRequired": true,
          "description": "User menu dropdown content"
        },
        "ContentMaxWidth": {
          "aiHint": "",
          "type": "string",
          "name": "ContentMaxWidth",
          "isRequired": true,
          "description": "Main content"
        },
        "ShowBreadcrumbs": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowBreadcrumbs",
          "isRequired": true,
          "description": "Show/hide sidebar toggle button"
        },
        "LogoContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "LogoContent",
          "isRequired": true,
          "description": "User permissions for nav filtering"
        },
        "UserMenu": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "UserMenu",
          "isRequired": true,
          "description": "Right side header content"
        },
        "StatusBar": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "StatusBar",
          "isRequired": true,
          "description": "Floating quick actions"
        },
        "HeaderLeft": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "HeaderLeft",
          "isRequired": true,
          "description": "Sidebar footer content"
        }
      },
      "name": "RAppShell",
      "commonUse": "main app layout, admin dashboards, enterprise applications, SaaS platforms",
      "filePath": "/Components/Layout/RAppShell.razor",
      "patterns": {
        "zero-config": "Title only for minimal app setup",
        "dashboard-layout": "NavigationItems + CurrentUser for admin dashboards",
        "responsive-shell": "Auto-responsive sidebar and mobile-friendly behavior",
        "full-enterprise": "All parameters for complete enterprise application"
      },
      "description": "Complete application shell with header, sidebar, navigation, search, and theme support. Zero-config setup for enterprise Blazor applications with professional styling and full responsiveness."
    },
    "RConfirmModal": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": ""
        },
        "Details": {
          "aiHint": "",
          "type": "string",
          "name": "Details",
          "isRequired": true,
          "description": ""
        },
        "IsDestructive": {
          "aiHint": "",
          "type": "bool",
          "name": "IsDestructive",
          "isRequired": true,
          "description": ""
        },
        "OnResult": {
          "aiHint": "",
          "type": "EventCallback<bool>",
          "name": "OnResult",
          "isRequired": true,
          "description": ""
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": ""
        },
        "ShowWarning": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowWarning",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RConfirmModal",
      "commonUse": "",
      "filePath": "/Components/Feedback/RConfirmModal.razor",
      "patterns": {},
      "description": ""
    },
    "RSummaryItem": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "ShowSeparator": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowSeparator",
          "isRequired": true,
          "description": "Value emphasis style"
        },
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": "Value text for the summary item"
        },
        "Size": {
          "aiHint": "",
          "type": "SummaryItemSize",
          "name": "Size",
          "isRequired": true,
          "description": "Material icon name"
        },
        "Value": {
          "aiHint": "",
          "type": "string",
          "name": "Value",
          "isRequired": true,
          "description": "Label text for the summary item"
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Additional CSS classes"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "Whether to show separator line"
        },
        "Layout": {
          "aiHint": "",
          "type": "SummaryItemLayout",
          "name": "Layout",
          "isRequired": true,
          "description": "Size variant"
        },
        "Emphasis": {
          "aiHint": "",
          "type": "SummaryItemEmphasis",
          "name": "Emphasis",
          "isRequired": true,
          "description": "Layout variant"
        }
      },
      "name": "RSummaryItem",
      "commonUse": "",
      "filePath": "/Components/Display/RSummaryItem.razor",
      "patterns": {},
      "description": ""
    },
    "RAvatar": {
      "category": "Core",
      "avoidUsage": "Don't use for decorative icons - use Icon component instead. Avoid for non-user content.",
      "complexity": "Simple",
      "aiPrompt": "Create a professional avatar for user representation",
      "parameters": {
        "ImageSrc": {
          "aiHint": "",
          "type": "string",
          "name": "ImageSrc",
          "isRequired": true,
          "description": "<ai-hint>Use high-quality square images for best results. Falls back to text/icon if not provided</ai-hint>"
        },
        "Variant": {
          "aiHint": "",
          "type": "AvatarVariant",
          "name": "Variant",
          "isRequired": true,
          "description": "<ai-hint>Default for neutral, Primary for branded, Success/Warning/Error for status-based styling</ai-hint>"
        },
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": "<ai-hint>Common icons: person, account_circle, face, group. Defaults to \"person\"</ai-hint>"
        },
        "Size": {
          "aiHint": "",
          "type": "AvatarSize",
          "name": "Size",
          "isRequired": true,
          "description": "<ai-hint>Medium is default, Large for prominent display, Small for compact layouts</ai-hint>"
        },
        "IsClickable": {
          "aiHint": "",
          "type": "bool",
          "name": "IsClickable",
          "isRequired": true,
          "description": "<ai-hint>Set to true for interactive avatars that open profiles, menus, or perform actions</ai-hint>"
        },
        "Text": {
          "aiHint": "",
          "type": "string",
          "name": "Text",
          "isRequired": true,
          "description": "<ai-hint>Use 1-2 character initials like \"JD\", \"AB\". Automatically uppercase</ai-hint>"
        },
        "Alt": {
          "aiHint": "",
          "type": "string",
          "name": "Alt",
          "isRequired": true,
          "description": "<ai-hint>Use descriptive text like \"John Doe's profile picture\" for screen readers</ai-hint>"
        },
        "BadgeCount": {
          "aiHint": "",
          "type": "int",
          "name": "BadgeCount",
          "isRequired": true,
          "description": "<ai-hint>Shows actual count, displays \"99+\" for values over 99</ai-hint>"
        },
        "Status": {
          "aiHint": "",
          "type": "AvatarStatus",
          "name": "Status",
          "isRequired": true,
          "description": "<ai-hint>Online for active users, Away for inactive, Busy for do-not-disturb, Offline for unavailable</ai-hint>"
        },
        "ShowBadge": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowBadge",
          "isRequired": true,
          "description": "<ai-hint>Use for unread message counts, notification indicators, or pending items</ai-hint>"
        },
        "ShowStatus": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowStatus",
          "isRequired": true,
          "description": "<ai-hint>Use for presence indicators in chat, team lists, or user directories</ai-hint>"
        },
        "OnClick": {
          "aiHint": "",
          "type": "EventCallback<MouseEventArgs>",
          "name": "OnClick",
          "isRequired": true,
          "description": "Additional CSS classes"
        }
      },
      "name": "RAvatar",
      "commonUse": "user profiles, team members, contact lists, navigation headers",
      "filePath": "/Components/Core/RAvatar.razor",
      "patterns": {
        "initials-avatar": "Text=\"JD\" Variant=\"AvatarVariant.Primary\" for text-based avatars",
        "notification-avatar": "ShowBadge=\"true\" BadgeCount=\"3\" for unread counts",
        "clickable-avatar": "IsClickable=\"true\" OnClick=\"HandleClick\" for interactive avatars",
        "status-avatar": "ShowStatus=\"true\" Status=\"AvatarStatus.Online\" for presence indicators",
        "user-avatar": "ImageSrc=\"/avatar.jpg\" Alt=\"User Name\" for profile pictures"
      },
      "description": "Professional avatar component for user representation with status indicators and interactive features. Supports images, initials, icons, status badges, and notification counts with responsive sizing."
    },
    "RModal": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": ""
        },
        "Subtitle": {
          "aiHint": "",
          "type": "string",
          "name": "Subtitle",
          "isRequired": true,
          "description": ""
        },
        "FooterContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "FooterContent",
          "isRequired": true,
          "description": ""
        },
        "OnCancel": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnCancel",
          "isRequired": true,
          "description": ""
        },
        "CancelText": {
          "aiHint": "",
          "type": "string",
          "name": "CancelText",
          "isRequired": true,
          "description": ""
        },
        "ButtonSize": {
          "aiHint": "",
          "type": "ButtonSize",
          "name": "ButtonSize",
          "isRequired": true,
          "description": ""
        },
        "Variant": {
          "aiHint": "",
          "type": "ModalVariant",
          "name": "Variant",
          "isRequired": true,
          "description": ""
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": ""
        },
        "CloseOnBackdrop": {
          "aiHint": "",
          "type": "bool",
          "name": "CloseOnBackdrop",
          "isRequired": true,
          "description": ""
        },
        "ProcessingMessage": {
          "aiHint": "",
          "type": "string",
          "name": "ProcessingMessage",
          "isRequired": true,
          "description": ""
        },
        "ShowCloseButton": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowCloseButton",
          "isRequired": true,
          "description": ""
        },
        "OnPrimaryAction": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnPrimaryAction",
          "isRequired": true,
          "description": ""
        },
        "PrimaryText": {
          "aiHint": "",
          "type": "string",
          "name": "PrimaryText",
          "isRequired": true,
          "description": ""
        },
        "Title": {
          "aiHint": "",
          "type": "string",
          "name": "Title",
          "isRequired": true,
          "description": ""
        },
        "PrimaryIcon": {
          "aiHint": "",
          "type": "string",
          "name": "PrimaryIcon",
          "isRequired": true,
          "description": ""
        },
        "Size": {
          "aiHint": "",
          "type": "ModalSize",
          "name": "Size",
          "isRequired": true,
          "description": ""
        },
        "PrimaryButtonClass": {
          "aiHint": "",
          "type": "string",
          "name": "PrimaryButtonClass",
          "isRequired": true,
          "description": ""
        },
        "ShowPrimaryButtonSpinner": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowPrimaryButtonSpinner",
          "isRequired": true,
          "description": ""
        },
        "CancelButtonClass": {
          "aiHint": "",
          "type": "string",
          "name": "CancelButtonClass",
          "isRequired": true,
          "description": ""
        },
        "ShowProcessingOverlay": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowProcessingOverlay",
          "isRequired": true,
          "description": ""
        },
        "ShowFooter": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowFooter",
          "isRequired": true,
          "description": ""
        },
        "HeaderContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "HeaderContent",
          "isRequired": true,
          "description": ""
        },
        "OnClose": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnClose",
          "isRequired": true,
          "description": ""
        },
        "HasUnsavedChanges": {
          "aiHint": "",
          "type": "bool",
          "name": "HasUnsavedChanges",
          "isRequired": true,
          "description": ""
        },
        "IsProcessing": {
          "aiHint": "",
          "type": "bool",
          "name": "IsProcessing",
          "isRequired": true,
          "description": ""
        },
        "ShowCancelButton": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowCancelButton",
          "isRequired": true,
          "description": ""
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": ""
        },
        "ShowHeader": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowHeader",
          "isRequired": true,
          "description": ""
        },
        "PrimaryButtonDisabled": {
          "aiHint": "",
          "type": "bool",
          "name": "PrimaryButtonDisabled",
          "isRequired": true,
          "description": ""
        },
        "ProcessingButtonText": {
          "aiHint": "",
          "type": "string",
          "name": "ProcessingButtonText",
          "isRequired": true,
          "description": ""
        },
        "ShowPrimaryButton": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowPrimaryButton",
          "isRequired": true,
          "description": ""
        },
        "CancelIcon": {
          "aiHint": "",
          "type": "string",
          "name": "CancelIcon",
          "isRequired": true,
          "description": ""
        },
        "ShowUnsavedIndicator": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowUnsavedIndicator",
          "isRequired": true,
          "description": ""
        },
        "CloseOnEscape": {
          "aiHint": "",
          "type": "bool",
          "name": "CloseOnEscape",
          "isRequired": true,
          "description": ""
        },
        "IsVisibleChanged": {
          "aiHint": "",
          "type": "EventCallback<bool>",
          "name": "IsVisibleChanged",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RModal",
      "commonUse": "",
      "filePath": "/Components/Feedback/RModal.razor",
      "patterns": {},
      "description": ""
    },
    "RGrid": {
      "category": "Layout",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "grid, layout, responsive, stats, cards",
      "parameters": {
        "Variant": {
          "aiHint": "",
          "type": "GridVariant",
          "name": "Variant",
          "isRequired": true,
          "description": ""
        },
        "Gap": {
          "description": "",
          "aiHint": "",
          "name": "Gap",
          "type": "string?",
          "isRequired": false
        },
        "MinColumnWidth": {
          "description": "",
          "aiHint": "",
          "name": "MinColumnWidth",
          "type": "int?",
          "isRequired": false
        },
        "Type": {
          "aiHint": "",
          "type": "GridType",
          "name": "Type",
          "isRequired": true,
          "description": ""
        },
        "Class": {
          "description": "",
          "aiHint": "",
          "name": "Class",
          "type": "string?",
          "isRequired": false
        }
      },
      "name": "RGrid",
      "commonUse": "Dashboard grids, stats cards, responsive layouts, card containers",
      "filePath": "/Components/Layout/RGrid.razor",
      "patterns": {
        "stats-grid": "<RGrid Type=\"GridType.Stats\" Variant=\"GridVariant.Compact\">\r\n    <RCard Title=\"Metric 1\" />\r\n    <RCard Title=\"Metric 2\" />\r\n</RGrid>"
      },
      "description": "Professional responsive grid component with RR.Blazor patterns"
    },
    "RPreviewModal": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "OnCopy": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnCopy",
          "isRequired": true,
          "description": ""
        },
        "ContentType": {
          "aiHint": "",
          "type": "string",
          "name": "ContentType",
          "isRequired": true,
          "description": ""
        },
        "ShowWordCount": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowWordCount",
          "isRequired": true,
          "description": ""
        },
        "AllowCopy": {
          "aiHint": "",
          "type": "bool",
          "name": "AllowCopy",
          "isRequired": true,
          "description": ""
        },
        "OnDownload": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnDownload",
          "isRequired": true,
          "description": ""
        },
        "FileName": {
          "aiHint": "",
          "type": "string",
          "name": "FileName",
          "isRequired": true,
          "description": ""
        },
        "AllowDownload": {
          "aiHint": "",
          "type": "bool",
          "name": "AllowDownload",
          "isRequired": true,
          "description": ""
        },
        "ShowMetadata": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowMetadata",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RPreviewModal",
      "commonUse": "",
      "filePath": "/Components/Feedback/RPreviewModal.razor",
      "patterns": {},
      "description": ""
    },
    "RDataTable": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": ""
        },
        "Subtitle": {
          "aiHint": "",
          "type": "string",
          "name": "Subtitle",
          "isRequired": true,
          "description": ""
        },
        "FooterContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "FooterContent",
          "isRequired": true,
          "description": ""
        },
        "SelectedItems": {
          "aiHint": "",
          "type": "List<TItem>",
          "name": "SelectedItems",
          "isRequired": true,
          "description": ""
        },
        "AllowUnsorted": {
          "aiHint": "",
          "type": "bool",
          "name": "AllowUnsorted",
          "isRequired": true,
          "description": ""
        },
        "MultiSelection": {
          "aiHint": "",
          "type": "bool",
          "name": "MultiSelection",
          "isRequired": true,
          "description": ""
        },
        "ShowPagination": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowPagination",
          "isRequired": true,
          "description": ""
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": ""
        },
        "Items": {
          "aiHint": "",
          "type": "List<TItem>",
          "name": "Items",
          "isRequired": true,
          "description": ""
        },
        "PageSizeOptions": {
          "aiHint": "",
          "type": "List<int>",
          "name": "PageSizeOptions",
          "isRequired": true,
          "description": ""
        },
        "RowTemplate": {
          "aiHint": "",
          "type": "RenderFragment<TItem>",
          "name": "RowTemplate",
          "isRequired": true,
          "description": ""
        },
        "TotalItems": {
          "aiHint": "",
          "type": "int",
          "name": "TotalItems",
          "isRequired": true,
          "description": ""
        },
        "SortColumn": {
          "aiHint": "",
          "type": "string",
          "name": "SortColumn",
          "isRequired": true,
          "description": ""
        },
        "Dense": {
          "aiHint": "",
          "type": "bool",
          "name": "Dense",
          "isRequired": true,
          "description": ""
        },
        "OnSort": {
          "aiHint": "",
          "type": "EventCallback<string>",
          "name": "OnSort",
          "isRequired": true,
          "description": ""
        },
        "ShowFilters": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowFilters",
          "isRequired": true,
          "description": ""
        },
        "Title": {
          "aiHint": "",
          "type": "string",
          "name": "Title",
          "isRequired": true,
          "description": ""
        },
        "IsRowClickable": {
          "aiHint": "",
          "type": "bool",
          "name": "IsRowClickable",
          "isRequired": true,
          "description": ""
        },
        "HeaderContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "HeaderContent",
          "isRequired": true,
          "description": ""
        },
        "OnPageChange": {
          "aiHint": "",
          "type": "EventCallback<int>",
          "name": "OnPageChange",
          "isRequired": true,
          "description": ""
        },
        "IsLoading": {
          "aiHint": "",
          "type": "bool",
          "name": "IsLoading",
          "isRequired": true,
          "description": ""
        },
        "ShowTableHeader": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowTableHeader",
          "isRequired": true,
          "description": ""
        },
        "ItemSize": {
          "aiHint": "",
          "type": "float",
          "name": "ItemSize",
          "isRequired": true,
          "description": ""
        },
        "CurrentPage": {
          "aiHint": "",
          "type": "int",
          "name": "CurrentPage",
          "isRequired": true,
          "description": ""
        },
        "PageSize": {
          "aiHint": "",
          "type": "int",
          "name": "PageSize",
          "isRequired": true,
          "description": ""
        },
        "Striped": {
          "aiHint": "",
          "type": "bool",
          "name": "Striped",
          "isRequired": true,
          "description": ""
        },
        "Hoverable": {
          "aiHint": "",
          "type": "bool",
          "name": "Hoverable",
          "isRequired": true,
          "description": ""
        },
        "LoadingMessage": {
          "aiHint": "",
          "type": "string",
          "name": "LoadingMessage",
          "isRequired": true,
          "description": ""
        },
        "SingleSelection": {
          "aiHint": "",
          "type": "bool",
          "name": "SingleSelection",
          "isRequired": true,
          "description": ""
        },
        "ColumnsContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ColumnsContent",
          "isRequired": true,
          "description": ""
        },
        "SelectedItem": {
          "aiHint": "",
          "type": "TItem",
          "name": "SelectedItem",
          "isRequired": true,
          "description": ""
        },
        "EmptyStateContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "EmptyStateContent",
          "isRequired": true,
          "description": ""
        },
        "Filters": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "Filters",
          "isRequired": true,
          "description": ""
        },
        "Height": {
          "aiHint": "",
          "type": "string",
          "name": "Height",
          "isRequired": true,
          "description": ""
        },
        "EmptyMessage": {
          "aiHint": "",
          "type": "string",
          "name": "EmptyMessage",
          "isRequired": true,
          "description": ""
        },
        "ShowHeader": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowHeader",
          "isRequired": true,
          "description": ""
        },
        "SortDescending": {
          "aiHint": "",
          "type": "bool",
          "name": "SortDescending",
          "isRequired": true,
          "description": ""
        },
        "RowClassFunc": {
          "aiHint": "",
          "type": "Func<TItem, string>",
          "name": "RowClassFunc",
          "isRequired": true,
          "description": ""
        },
        "Virtualize": {
          "aiHint": "",
          "type": "bool",
          "name": "Virtualize",
          "isRequired": true,
          "description": ""
        },
        "RowClass": {
          "aiHint": "",
          "type": "string",
          "name": "RowClass",
          "isRequired": true,
          "description": ""
        },
        "Elevation": {
          "aiHint": "",
          "type": "int",
          "name": "Elevation",
          "isRequired": true,
          "description": ""
        },
        "FixedHeader": {
          "aiHint": "",
          "type": "bool",
          "name": "FixedHeader",
          "isRequired": true,
          "description": ""
        },
        "OnRowClick": {
          "aiHint": "",
          "type": "EventCallback<TItem>",
          "name": "OnRowClick",
          "isRequired": true,
          "description": ""
        },
        "TableHeader": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "TableHeader",
          "isRequired": true,
          "description": ""
        },
        "SelectedItemChanged": {
          "aiHint": "",
          "type": "EventCallback<TItem>",
          "name": "SelectedItemChanged",
          "isRequired": true,
          "description": ""
        }
      },
      "name": "RDataTable",
      "commonUse": "",
      "filePath": "/Components/Data/RDataTable.razor",
      "patterns": {},
      "description": ""
    },
    "RListItem": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": "Meta text"
        },
        "AdditionalAttributes": {
          "aiHint": "",
          "type": "Dictionary<string, object>",
          "name": "AdditionalAttributes",
          "isRequired": true,
          "description": "Click event handler"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "Icon size"
        },
        "AvatarContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "AvatarContent",
          "isRequired": true,
          "description": "Main content"
        },
        "IconPosition": {
          "aiHint": "",
          "type": "IconPosition",
          "name": "IconPosition",
          "isRequired": true,
          "description": "Icon"
        },
        "BadgeContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "BadgeContent",
          "isRequired": true,
          "description": "Meta content"
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Additional CSS classes"
        },
        "Actions": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "Actions",
          "isRequired": true,
          "description": "Badge content"
        },
        "MetaContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "MetaContent",
          "isRequired": true,
          "description": "Avatar content"
        },
        "IsDisabled": {
          "aiHint": "",
          "type": "bool",
          "name": "IsDisabled",
          "isRequired": true,
          "description": "Whether item is active/selected"
        },
        "IconSize": {
          "aiHint": "",
          "type": "IconSize",
          "name": "IconSize",
          "isRequired": true,
          "description": "Icon color variant"
        },
        "BadgeText": {
          "aiHint": "",
          "type": "string",
          "name": "BadgeText",
          "isRequired": true,
          "description": "Avatar text (for avatar lists)"
        },
        "MetaText": {
          "aiHint": "",
          "type": "string",
          "name": "MetaText",
          "isRequired": true,
          "description": "Item description"
        },
        "Subtitle": {
          "aiHint": "",
          "type": "string",
          "name": "Subtitle",
          "isRequired": true,
          "description": "Item title"
        },
        "Clickable": {
          "aiHint": "",
          "type": "bool",
          "name": "Clickable",
          "isRequired": true,
          "description": "Badge variant"
        },
        "IconVariant": {
          "aiHint": "",
          "type": "string",
          "name": "IconVariant",
          "isRequired": true,
          "description": "Item style variant"
        },
        "AvatarText": {
          "aiHint": "",
          "type": "string",
          "name": "AvatarText",
          "isRequired": true,
          "description": "Icon position"
        },
        "IsActive": {
          "aiHint": "",
          "type": "bool",
          "name": "IsActive",
          "isRequired": true,
          "description": "Whether item is clickable"
        },
        "Description": {
          "aiHint": "",
          "type": "string",
          "name": "Description",
          "isRequired": true,
          "description": "Item subtitle"
        },
        "ItemVariant": {
          "aiHint": "",
          "type": "ListItemVariant",
          "name": "ItemVariant",
          "isRequired": true,
          "description": "Whether item is disabled"
        },
        "OnClick": {
          "aiHint": "",
          "type": "EventCallback<MouseEventArgs>",
          "name": "OnClick",
          "isRequired": true,
          "description": "Action buttons"
        },
        "BadgeVariant": {
          "aiHint": "",
          "type": "BadgeVariant",
          "name": "BadgeVariant",
          "isRequired": true,
          "description": "Badge text"
        }
      },
      "name": "RListItem",
      "commonUse": "",
      "filePath": "/Components/Data/RListItem.razor",
      "patterns": {},
      "description": ""
    },
    "RTabs": {
      "category": "Navigation",
      "avoidUsage": "Don't use for navigation breadcrumbs - use RBreadcrumbs instead. Avoid for simple toggles.",
      "complexity": "Complex",
      "aiPrompt": "Create professional tabs for content organization",
      "parameters": {
        "Variant": {
          "aiHint": "",
          "type": "TabsVariant",
          "name": "Variant",
          "isRequired": true,
          "description": "Tab variant style"
        },
        "OnAddTab": {
          "aiHint": "",
          "type": "EventCallback",
          "name": "OnAddTab",
          "isRequired": true,
          "description": "Called when tab selection changes"
        },
        "Size": {
          "aiHint": "",
          "type": "ButtonSize",
          "name": "Size",
          "isRequired": true,
          "description": "Size of tabs"
        },
        "OnTabChanged": {
          "aiHint": "",
          "type": "EventCallback<TabChangedEventArgs>",
          "name": "OnTabChanged",
          "isRequired": true,
          "description": "Child content containing RTabItem components"
        },
        "ActiveTabId": {
          "aiHint": "",
          "type": "string",
          "name": "ActiveTabId",
          "isRequired": true,
          "description": "Active tab ID"
        },
        "NoPadding": {
          "aiHint": "",
          "type": "bool",
          "name": "NoPadding",
          "isRequired": true,
          "description": "Whether tab content has no padding"
        },
        "ShowAddButton": {
          "aiHint": "",
          "type": "bool",
          "name": "ShowAddButton",
          "isRequired": true,
          "description": "Whether to show add tab button"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "Use fade only animation (no slide)"
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Additional CSS classes"
        },
        "OnTabClosed": {
          "aiHint": "",
          "type": "EventCallback<TabClosedEventArgs>",
          "name": "OnTabClosed",
          "isRequired": true,
          "description": "Called when add tab button is clicked"
        }
      },
      "name": "RTabs",
      "commonUse": "dashboards, forms, data views, settings panels, multi-step workflows",
      "filePath": "/Components/Navigation/RTabs.razor",
      "patterns": {
        "card-tabs": "Variant=\"TabsVariant.Card\" for separated tab sections",
        "closable-tabs": "IsClosable=\"true\" on RTabItem for document-style tabs",
        "badge-tabs": "BadgeCount on RTabItem for notification indicators",
        "basic-tabs": "RTabs with RTabItem children for content organization",
        "pills-tabs": "Variant=\"TabsVariant.Pills\" for compact tab layouts"
      },
      "description": "Professional tab container for organizing content with smooth animations and enterprise styling. Supports multiple variants, badges, closable tabs, keyboard navigation, and accessibility."
    },
    "RAccordionItem": {
      "category": "Unknown",
      "avoidUsage": "",
      "complexity": "Simple",
      "aiPrompt": "",
      "parameters": {
        "Expanded": {
          "aiHint": "",
          "type": "bool",
          "name": "Expanded",
          "isRequired": true,
          "description": "Icon to display in header"
        },
        "Subtitle": {
          "aiHint": "",
          "type": "string",
          "name": "Subtitle",
          "isRequired": true,
          "description": "Accordion item title"
        },
        "Icon": {
          "aiHint": "",
          "type": "string",
          "name": "Icon",
          "isRequired": true,
          "description": "Accordion item subtitle"
        },
        "AdditionalAttributes": {
          "aiHint": "",
          "type": "Dictionary<string, object>",
          "name": "AdditionalAttributes",
          "isRequired": true,
          "description": "Additional CSS classes"
        },
        "Class": {
          "aiHint": "",
          "type": "string",
          "name": "Class",
          "isRequired": true,
          "description": "Item content"
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Additional header content"
        },
        "Disabled": {
          "aiHint": "",
          "type": "bool",
          "name": "Disabled",
          "isRequired": true,
          "description": "Whether the item is expanded initially"
        },
        "Id": {
          "aiHint": "",
          "type": "string",
          "name": "Id",
          "isRequired": true,
          "description": "Whether the item is disabled"
        },
        "HeaderContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "HeaderContent",
          "isRequired": true,
          "description": "Unique identifier for the item"
        }
      },
      "name": "RAccordionItem",
      "commonUse": "",
      "filePath": "/Components/Display/RAccordionItem.razor",
      "patterns": {},
      "description": ""
    },
    "RDivider": {
      "category": "Core",
      "avoidUsage": "Don't overuse - only for logical content separation. Avoid decorative usage.",
      "complexity": "Simple",
      "aiPrompt": "Create a professional divider for visual separation",
      "parameters": {
        "Variant": {
          "aiHint": "",
          "type": "DividerVariant",
          "name": "Variant",
          "isRequired": true,
          "description": "<ai-hint>Horizontal for section breaks, Vertical for inline separation between elements</ai-hint>"
        },
        "Text": {
          "aiHint": "",
          "type": "string",
          "name": "Text",
          "isRequired": true,
          "description": "<ai-hint>Use for section labels like \"Settings\", \"Advanced Options\", \"OR\". Keep short</ai-hint>"
        },
        "TextAlign": {
          "aiHint": "",
          "type": "DividerTextAlign",
          "name": "TextAlign",
          "isRequired": true,
          "description": "<ai-hint>Center for balanced labels, Left for section headers, Right for special cases</ai-hint>"
        },
        "ChildContent": {
          "aiHint": "",
          "type": "RenderFragment",
          "name": "ChildContent",
          "isRequired": true,
          "description": "Additional CSS classes"
        },
        "Style": {
          "aiHint": "",
          "type": "DividerStyle",
          "name": "Style",
          "isRequired": true,
          "description": "<ai-hint>Solid for standard dividers, Dashed for softer separation, Dotted for subtle breaks</ai-hint>"
        },
        "AdditionalAttributes": {
          "aiHint": "",
          "type": "Dictionary<string, object>",
          "name": "AdditionalAttributes",
          "isRequired": true,
          "description": "Child content"
        }
      },
      "name": "RDivider",
      "commonUse": "section separation, menu dividers, form sections, content organization",
      "filePath": "/Components/Core/RDivider.razor",
      "patterns": {
        "simple-divider": "No parameters for basic horizontal line",
        "styled-divider": "Style=\"DividerStyle.Dashed\" for different visual styles",
        "vertical-divider": "Variant=\"DividerVariant.Vertical\" for inline separation",
        "section-divider": "Text=\"Settings\" for labeled sections"
      },
      "description": "Professional divider component for visual separation with text support and multiple styles. Supports horizontal/vertical orientation, customizable styling, and automatic menu integration."
    }
  },
  "aiPatterns": [
    {
      "code": "<RCard Title=\"Revenue\" Elevation=\"4\" class=\"glass-light\"><div class=\"pa-6\"><div class=\"d-flex justify-between align-center\"><span class=\"text-2xl font-bold\">$42,580</span><RBadge Text=\"+12%\" Variant=\"Success\" /></div></div></RCard>",
      "name": "Executive Dashboard Widget",
      "category": "Business",
      "prompt": "Create a professional metrics card for executive dashboard",
      "useCase": "dashboards, analytics, metrics display"
    },
    {
      "code": "<RForm TModel=\"AccountSetupModel\" ValidationMode=\"Hybrid\"><FormFields><RFormField FieldType=\"Email\" Label=\"Email\" Size=\"Large\" Variant=\"FloatingLabel\" StartIcon=\"email\" /></FormFields></RForm>",
      "name": "Form Section Layout",
      "category": "Forms",
      "prompt": "Create organized form section with validation",
      "useCase": "forms, data entry, user management"
    },
    {
      "code": "<div class=\"d-flex justify-between mb-4\"><RFormField Type=\"Search\" class=\"flex-grow-1\" /><RButton Text=\"Add\" Variant=\"Primary\" /></div><RDataTable Items=\"@data\" class=\"elevation-2\" />",
      "name": "Data Management Interface",
      "category": "Data",
      "prompt": "Create table with search and actions",
      "useCase": "CRUD operations, data tables, management interfaces"
    },
    {
      "code": "<RCard Elevation=\"8\" Class=\"glass-frost backdrop-blur-xl\"><div class=\"pa-2\"><h5 class=\"text-h6 font-semibold mb-0\">Title</h5><p class=\"text-caption text--secondary\">Description</p></div></RCard>",
      "name": "Professional Card with Glass Effect",
      "category": "Layout",
      "prompt": "Create elevated card with glassmorphism for account setup",
      "useCase": "account setup, login forms, professional cards"
    },
    {
      "code": "<RFormField Label=\"Password\" FieldType=\"@(showPassword ? FieldType.Text : FieldType.Password)\" StartIcon=\"lock\" EndIcon=\"@(showPassword ? \\\"visibility_off\\\" : \\\"visibility\\\")\" OnEndIconClick=\"ToggleVisibility\" Size=\"Medium\" Required />",
      "name": "Form Field with Icons",
      "category": "Forms",
      "prompt": "Create password field with visibility toggle",
      "useCase": "password fields, secure inputs, icon interactions"
    },
    {
      "code": "<RSectionDivider Title=\"Security Setup\" Icon=\"security\" Variant=\"Primary\" Size=\"Compact\" ShowLine=\"true\" />",
      "name": "Section Divider with Icon",
      "category": "Layout",
      "prompt": "Create section divider for form organization",
      "useCase": "form sections, content organization, visual hierarchy"
    },
    {
      "code": "<div class=\"d-grid gap-1 grid-cols-1 grid-cols-md-2\"><RFormField Label=\"First Name\" StartIcon=\"person\" /><RFormField Label=\"Last Name\" StartIcon=\"person\" /></div>",
      "name": "Responsive Grid Layout",
      "category": "Layout",
      "prompt": "Create responsive two-column form grid",
      "useCase": "responsive forms, multi-column layouts, mobile-first design"
    },
    {
      "code": "<RButton Text=\"@(isProcessing ? \\\"Processing...\\\" : \\\"Submit\\\")\" Icon=\"@(isProcessing ? \\\"progress_activity\\\" : \\\"check\\\")\" Variant=\"Primary\" Elevation=\"4\" Loading=\"@isProcessing\" Disabled=\"@isProcessing\" Class=\"w-full\" />",
      "name": "Loading Button State",
      "category": "Interaction",
      "prompt": "Create button with loading state",
      "useCase": "form submission, async operations, loading states"
    }
  ],
  "cssVariables": {
    "--space-{sizes}": {
      "pattern": "--space-{size}",
      "aiHint": "Standard spacing scale for consistent layouts",
      "sizes": [
        "0",
        "0-5",
        "1",
        "1-5",
        "10",
        "11",
        "12",
        "14",
        "16",
        "2",
        "2-5",
        "20",
        "24",
        "28",
        "3",
        "3-5",
        "32",
        "36",
        "4",
        "40",
        "44",
        "48",
        "5",
        "52",
        "56",
        "6",
        "60",
        "64",
        "7",
        "72",
        "8",
        "80",
        "9",
        "96",
        "px"
      ]
    },
    "--font-{weight}": {
      "pattern": "--font-{weight}",
      "aiHint": "Font weight scale from thin to black",
      "weights": [
        "black",
        "bold",
        "extrabold",
        "extralight",
        "light",
        "medium",
        "normal",
        "semibold",
        "thin"
      ]
    },
    "--shadow-{variants}": {
      "pattern": "--shadow-{level}",
      "aiHint": "Elevation shadow system",
      "variants": [
        "2xl",
        "lg",
        "md",
        "sm",
        "xl"
      ]
    },
    "--color-{category}-{variant}": {
      "pattern": "--color-{category}-{variant}",
      "aiHint": "Use --color-text-primary for main text, --color-background-elevated for cards",
      "variants": {
        "border": [
          "light",
          "medium",
          "strong"
        ],
        "info": "bg",
        "interactive": [
          "focus",
          "ghost",
          "ghost-hover",
          "hover",
          "light",
          "primary",
          "primary-active",
          "primary-hover",
          "secondary",
          "secondary-hover"
        ],
        "focus": "primary",
        "overlay": [
          "dark",
          "light",
          "medium"
        ],
        "background": [
          "elevated",
          "glass",
          "modal",
          "overlay",
          "primary",
          "secondary"
        ],
        "error": "bg",
        "text": [
          "accent",
          "inverse",
          "on-error",
          "on-info",
          "on-primary",
          "on-secondary",
          "on-success",
          "on-warning",
          "primary",
          "quaternary",
          "secondary",
          "tertiary"
        ],
        "neutral": "bg",
        "glass": [
          "heavy",
          "light",
          "medium"
        ],
        "success": "bg",
        "accent": [
          "cyan",
          "purple"
        ],
        "warning": "bg"
      },
      "categories": [
        "accent",
        "background",
        "border",
        "error",
        "focus",
        "glass",
        "info",
        "interactive",
        "neutral",
        "overlay",
        "success",
        "text",
        "warning"
      ]
    },
    "--radius-{variants}": {
      "pattern": "--radius-{size}",
      "aiHint": "Border radius scale",
      "variants": [
        "2xl",
        "full",
        "lg",
        "md",
        "none",
        "sm",
        "xl"
      ]
    },
    "--color-{status}": {
      "pattern": "--color-{status}",
      "aiHint": "Use for status colors like --color-error, --color-success",
      "values": [
        "error",
        "info",
        "neutral",
        "success",
        "warning"
      ]
    },
    "--font-family-{type}": {
      "pattern": "--font-family-{type}",
      "aiHint": "Font family types (primary, secondary, mono)",
      "types": [
        "mono",
        "primary",
        "secondary"
      ]
    }
  }
}
