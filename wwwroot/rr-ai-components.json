{
  "_ai_instructions": {
    "CRITICAL": "Use exact component format for UI generation",
    "EXTRACTION_INFO": {
      "total_components": 52,
      "extraction_method": "Generic component parsing"
    },
    "COMPONENT_FORMAT": "Each component has Purpose and Parameters with Type, enum values [brackets], and AI hints",
    "ESSENTIAL_ONLY": "Only essential parameters with AI hints shown. Standard Blazor parameters available but not documented.",
    "NAVIGATION": {
      "components": "Lines 16+: Components with structured format and essential parameters",
      "ai_instructions": "Lines 1-15: Read AI instructions first"
    },
    "USAGE_DIRECTIVE": "Use <RComponentName Parameter1='value' Parameter2='value' /> in Blazor markup"
  },
  "components": {
    "RAccordion": {
      "Purpose": "Accordion items content",
      "Parameters": {
        "ChildContent": "RenderFragment",
        "Variant": "AccordionVariant"
      }
    },
    "RDatePickerBasic": {
      "Purpose": "Simplified HTML5 date picker for basic date input scenarios",
      "Parameters": {
        "Value": "DateTime? - Selected date value",
        "ValueChanged": "EventCallback<DateTime?> - Callback when date value changes",
        "Label": "string - Label text displayed above the input",
        "Placeholder": "string - Placeholder text when no date selected",
        "HelpText": "string - Help text displayed below the input",
        "Icon": "string",
        "ShowTime": "bool - Show time selection alongside date",
        "Required": "bool - Mark field as required",
        "Disabled": "bool - Disable the input field",
        "ReadOnly": "bool - Make the input read-only",
        "MinDate": "DateTime? - Minimum selectable date",
        "MaxDate": "DateTime? - Maximum selectable date",
        "Size": "FieldSize"
      }
    },
    "RTabs": {
      "Purpose": "Professional tab container for organizing content with smooth animations and enterprise styling. Supports multiple variants, badges, closable tabs, keyboard navigation, and accessibility.",
      "Parameters": {
        "Variant": "TabsVariant",
        "Size": "ButtonSize",
        "ChildContent": "RenderFragment"
      }
    },
    "RThemeSwitcher": {
      "Purpose": "UI component",
      "Parameters": {}
    },
    "RSectionDivider": {
      "Purpose": "Professional section divider component for organizing content areas with titles, icons, and visual separation. Supports multiple sizes, alignments, and semantic variants with enterprise-grade styling.",
      "Parameters": {
        "Title": "string - Use descriptive section names like Personal Information, Security Settings",
        "Subtitle": "string - Use for helpful descriptions like Update your profile information",
        "Icon": "string[settings, person, security, payment, work, home, info] - Common icons: settings, person, security, payment, work, home",
        "ShowLine": "bool - True for visual separation, false for text-only headers",
        "Variant": "SectionDividerVariant[Default, Primary, Secondary, Success, Warning, Error, Info] - Primary for important sections, Success for completed, Warning for attention",
        "Size": "SectionDividerSize[Compact, Default, Large] - Default for most sections, Compact for tight layouts, Large for prominence",
        "Alignment": "SectionDividerAlignment[Left, Center, Right] - Left for standard sections, Center for balanced layouts, Right for special cases",
        "ChildContent": "RenderFragment"
      }
    },
    "RCard": {
      "Purpose": "Professional card component for content containers with business-grade variants. Supports header, media, content areas, loading states, elevation effects, and comprehensive interaction patterns.",
      "Parameters": {
        "Variant": "CardVariant[Default, Outlined, Elevated, Glass, Flat] - Default for standard cards, Elevated for prominence, Glass for modern overlays",
        "Title": "string - Use descriptive titles like User Details, Order Summary",
        "Subtitle": "string - Use for additional context like dates, categories, descriptions",
        "Content": "string - Use for simple text, or ChildContent for complex layouts",
        "Icon": "string[dashboard, person, settings, analytics, payment, work] - Common icons: dashboard, person, settings, analytics, payment",
        "ImageSrc": "string - Use for hero images, thumbnails, or visual content",
        "Clickable": "bool - Set to true for interactive cards that perform actions",
        "Loading": "bool - Use during async operations to show processing state",
        "Disabled": "bool",
        "ChildContent": "RenderFragment",
        "HeaderContent": "RenderFragment",
        "MediaContent": "RenderFragment",
        "FooterContent": "RenderFragment",
        "OnClick": "EventCallback<MouseEventArgs>",
        "Elevation": "int[0, 2, 4, 8, 16] - Use 0 for flat, 2-4 for standard, 8+ for prominent. -1 uses variant default"
      }
    },
    "RDropdown": {
      "Purpose": "Professional dropdown component for item selection with keyboard navigation and accessibility. Supports custom triggers, loading states, search filtering, and flexible item rendering.",
      "Parameters": {
        "Items": "IEnumerable<TValue>",
        "Disabled": "bool"
      }
    },
    "RThemeProvider": {
      "Purpose": "UI component",
      "Parameters": {
        "ChildContent": "RenderFragment"
      }
    },
    "RConfirmationModal": {
      "Purpose": "UI component",
      "Parameters": {
        "Title": "string",
        "Variant": "ModalVariant",
        "ChildContent": "RenderFragment"
      }
    },
    "RGrid": {
      "Purpose": "Professional responsive grid component with RR.Blazor patterns",
      "Parameters": {
        "ChildContent": "RenderFragment?",
        "Variant": "GridVariant"
      }
    },
    "RStatsCard": {
      "Purpose": "/// Card label text (displayed above the value) ///",
      "Parameters": {
        "Label": "string",
        "Value": "string",
        "Icon": "string",
        "OnClick": "EventCallback"
      }
    },
    "RFilterBar": {
      "Purpose": "Whether to show search input",
      "Parameters": {}
    },
    "RPreviewModal": {
      "Purpose": "UI component",
      "Parameters": {
        "Content": "string"
      }
    },
    "RFormModal": {
      "Purpose": "Generic form modal component for dynamic form generation and validation",
      "Parameters": {
        "InitialData": "T - Initial data model for the form",
        "FormComponent": "Type - Custom form component type to use instead of auto-generation",
        "FormParameters": "Dictionary<string, object> - Additional parameters passed to custom form component",
        "ShowValidationSummary": "bool - Show validation error summary",
        "OnDataChanged": "EventCallback<T> - Callback when form data changes",
        "ChildContent": "RenderFragment - Custom form content instead of auto-generation"
      }
    },
    "RInfoItem": {
      "Purpose": "Label text for the info item",
      "Parameters": {
        "Label": "string",
        "Value": "string",
        "Icon": "string",
        "Size": "InfoItemSize",
        "ChildContent": "RenderFragment"
      }
    },
    "RStatus": {
      "Purpose": "Unified status component that handles both indicator and message display patterns. Supports icon indicators, text messages, and various status types with professional styling.",
      "Parameters": {
        "Text": "string",
        "Icon": "string"
      }
    },
    "RMessageModal": {
      "Purpose": "UI component",
      "Parameters": {
        "Icon": "string",
        "Variant": "ModalVariant",
        "ChildContent": "RenderFragment"
      }
    },
    "RFormSection": {
      "Purpose": "Professional form section container with collapsible header and grid layout",
      "Parameters": {
        "Title": "string? - Section title displayed in header",
        "Description": "string? - Section description or instructions",
        "Icon": "string? - Icon displayed next to section title",
        "Elevation": "SectionElevation - Visual elevation level (None, Subtle, Medium, High)",
        "FieldColumns": "int - Number of columns for field layout (1-4)",
        "ShowHeader": "bool - Whether to show the section header",
        "Collapsible": "bool - Allow section to be collapsed/expanded",
        "Expanded": "bool - Whether section is currently expanded",
        "ExpandedChanged": "EventCallback<bool> - Callback when expanded state changes",
        "ChildContent": "RenderFragment?"
      }
    },
    "RVirtualList": {
      "Purpose": "Items to display in the virtual list",
      "Parameters": {
        "Items": "List<T>",
        "Loading": "bool",
        "Size": "string"
      }
    },
    "RDataTableColumn": {
      "Purpose": "UI component",
      "Parameters": {}
    },
    "RSection": {
      "Purpose": "Professional content section component with header, collapsible content, and footer areas. Ideal for organizing page content with consistent styling and optional interactive features.",
      "Parameters": {
        "Title": "string",
        "Icon": "string",
        "ChildContent": "RenderFragment",
        "FooterContent": "RenderFragment",
        "OnClick": "EventCallback<MouseEventArgs>"
      }
    },
    "RAvatar": {
      "Purpose": "Professional avatar component for user representation with status indicators and interactive features. Supports images, initials, icons, status badges, and notification counts with responsive sizing.",
      "Parameters": {
        "Size": "AvatarSize[ExtraSmall, Small, Medium, Large, ExtraLarge] - Medium is default, Large for prominent display, Small for compact layouts",
        "Variant": "AvatarVariant[Default, Primary, Success, Warning, Error, Gradient] - Default for neutral, Primary for branded, Success/Warning/Error for status",
        "ImageSrc": "string - Use high-quality square images. Falls back to text/icon if not provided",
        "Alt": "string - Use descriptive text like 'John Doe profile picture' for screen readers",
        "Text": "string - Use 1-2 character initials like JD, AB. Automatically uppercase",
        "Icon": "string[person, account_circle, face, group] - Common icons: person, account_circle, face, group. Defaults to person",
        "ShowStatus": "bool - Use for presence indicators in chat, team lists, user directories",
        "Status": "AvatarStatus[Online, Away, Busy, Offline] - Online for active, Away for inactive, Busy for do-not-disturb, Offline for unavailable",
        "ShowBadge": "bool - Use for unread message counts, notification indicators, pending items",
        "BadgeCount": "int - Shows actual count, displays 99+ for values over 99",
        "IsClickable": "bool - Set to true for interactive avatars that open profiles or menus",
        "OnClick": "EventCallback<MouseEventArgs>"
      }
    },
    "RForm": {
      "Purpose": "Professional form component with validation, state management, and accessibility",
      "Parameters": {
        "Model": "TModel - Data model bound to the form",
        "ModelChanged": "EventCallback<TModel> - Callback when model data changes",
        "ValidationMode": "ValidationMode - Validation strategy (DataAnnotations, Custom, Hybrid)",
        "Layout": "FormLayout - Form layout style (Default, Executive, Modal, Compact)",
        "Density": "FormDensity - Form spacing density (Comfortable, Dense, UltraDense)",
        "Options": "FormOptions - Form configuration options",
        "ChildContent": "RenderFragment?",
        "Title": "string? - Form title displayed in header",
        "Description": "string? - Form description or instructions",
        "Icon": "string? - Icon displayed next to form title",
        "ShowFormHeader": "bool - Whether to show the form header section",
        "ShowDefaultActions": "bool - Show default submit/cancel buttons",
        "ShowCancelButton": "bool - Show cancel button alongside submit",
        "SubmitText": "string - Text for the submit button",
        "CancelText": "string - Text for the cancel button",
        "RequireValidation": "bool - Require validation before allowing submission",
        "OnValidSubmit": "EventCallback<FormSubmissionEventArgs<TModel>> - Called when form is submitted with valid data",
        "OnInvalidSubmit": "EventCallback<FormSubmissionEventArgs<TModel>> - Called when form is submitted with invalid data",
        "OnStateChanged": "EventCallback<FormStateChangedEventArgs> - Called when form state changes (submitting, success, error)"
      }
    },
    "RSwitcher": {
      "Purpose": "Professional switcher component for toggling between multiple options",
      "Parameters": {
        "Items": "IEnumerable<TValue> - Collection of items to switch between",
        "SelectedValue": "TValue - Currently selected value",
        "SelectedValueChanged": "EventCallback<TValue> - Callback when selection changes",
        "Variant": "SwitcherVariant - Visual style variant (Standard, Pills, Tabs, Buttons)",
        "Size": "SwitcherSize - Size of switcher items (Small, Medium, Large)",
        "Direction": "SwitcherDirection - Layout direction (Horizontal, Vertical)",
        "AdditionalClass": "string - Additional CSS classes"
      }
    },
    "RTabItem": {
      "Purpose": "Individual tab item component for RTabs container with icon, badge, and content support. Supports closable tabs, disabled states, and badge notifications for professional tab experiences.",
      "Parameters": {
        "Text": "string",
        "Icon": "string",
        "Disabled": "bool",
        "ChildContent": "RenderFragment"
      }
    },
    "RSkeleton": {
      "Purpose": "UI component",
      "Parameters": {
        "ChildContent": "RenderFragment"
      }
    },
    "RMetric": {
      "Purpose": "Metric value to display",
      "Parameters": {
        "Value": "object",
        "Label": "string",
        "Icon": "string",
        "Variant": "string",
        "Size": "string",
        "Loading": "bool",
        "ChildContent": "RenderFragment",
        "OnClick": "EventCallback<MouseEventArgs>"
      }
    },
    "RActionGroup": {
      "Purpose": "Professional action group component for organizing multiple buttons with consistent spacing and alignment. Supports horizontal/vertical layouts, responsive behavior, and flexible alignment options.",
      "Parameters": {
        "Direction": "ActionGroupDirection[Horizontal, Vertical] - Horizontal for forms/toolbars, Vertical for dropdowns/mobile layouts",
        "Alignment": "ActionGroupAlignment[Start, Center, End, SpaceBetween, SpaceAround, SpaceEvenly] - End for form actions, SpaceBetween for opposing actions, Center for balanced",
        "Spacing": "ActionGroupSpacing[None, Small, Medium, Large, ExtraLarge] - Medium for most cases, Small for compact toolbars, Large for prominence",
        "FullWidth": "bool - Use for vertical menus and mobile layouts for full-width buttons",
        "Responsive": "bool - True for responsive mobile layouts, false for fixed layouts",
        "ChildContent": "RenderFragment"
      }
    },
    "RModal": {
      "Purpose": "UI component",
      "Parameters": {
        "Size": "ModalSize",
        "Variant": "ModalVariant",
        "Title": "string",
        "Icon": "string",
        "HeaderContent": "RenderFragment",
        "FooterContent": "RenderFragment",
        "ChildContent": "RenderFragment"
      }
    },
    "RSummaryItem": {
      "Purpose": "Label text for the summary item",
      "Parameters": {
        "Label": "string",
        "Value": "string",
        "Icon": "string",
        "Size": "SummaryItemSize",
        "ChildContent": "RenderFragment"
      }
    },
    "REmptyState": {
      "Purpose": "UI component",
      "Parameters": {
        "Icon": "string",
        "Title": "string",
        "ChildContent": "RenderFragment"
      }
    },
    "RTimeline": {
      "Purpose": "Timeline items to display",
      "Parameters": {
        "Items": "List<TimelineItem>",
        "Variant": "TimelineVariant",
        "Loading": "bool"
      }
    },
    "RNavMenu": {
      "Purpose": "Professional navigation menu component for sidebar and main navigation with hierarchical support. Supports collapsible groups, badges, icons, and responsive behavior for enterprise applications.",
      "Parameters": {
        "Items": "List<NavMenuItem>",
        "ChildContent": "RenderFragment"
      }
    },
    "RBreadcrumbs": {
      "Purpose": "Professional breadcrumb navigation component for showing page hierarchy and navigation paths. Supports icons, custom separators, responsive collapsing, and accessibility features.",
      "Parameters": {
        "Items": "List<BreadcrumbItem>",
        "Size": "BreadcrumbSize",
        "ChildContent": "RenderFragment"
      }
    },
    "RListItem": {
      "Purpose": "Item title",
      "Parameters": {
        "Title": "string",
        "Icon": "string",
        "Disabled": "bool",
        "ChildContent": "RenderFragment",
        "OnClick": "EventCallback<MouseEventArgs>"
      }
    },
    "RModalProvider": {
      "Purpose": "UI component",
      "Parameters": {}
    },
    "RAppShell": {
      "Purpose": "Complete application shell with header, sidebar, navigation, search, and theme support. Zero-config setup for enterprise Blazor applications with professional styling and full responsiveness.",
      "Parameters": {
        "Title": "string",
        "ChildContent": "RenderFragment"
      }
    },
    "RConfirmModal": {
      "Purpose": "UI component",
      "Parameters": {
        "Icon": "string",
        "ChildContent": "RenderFragment"
      }
    },
    "RDatePicker": {
      "Purpose": "Professional date and time picker with calendar popup and time selection",
      "Parameters": {
        "Value": "DateTime? - Selected date/time value",
        "ValueChanged": "EventCallback<DateTime?> - Callback when date/time value changes",
        "EndValue": "DateTime? - End date for range selection",
        "EndValueChanged": "EventCallback<DateTime?> - Callback when end date changes",
        "Label": "string - Label text displayed above the picker",
        "Placeholder": "string - Placeholder text when no date selected",
        "Format": "string - Date format string",
        "Size": "FieldSize - Size of the picker input (Small, Medium, Large)",
        "Icon": "string",
        "Range": "bool - Enable date range selection",
        "ShowTime": "bool - Show time picker alongside date",
        "Use24HourFormat": "bool - Use 24-hour time format instead of AM/PM",
        "MinuteInterval": "int - Minute interval for time picker",
        "MinDate": "DateTime? - Minimum selectable date",
        "MaxDate": "DateTime? - Maximum selectable date",
        "DisabledDates": "Func<DateTime, bool> - Function to disable specific dates",
        "DisabledDaysOfWeek": "DayOfWeek[] - Array of disabled days of week",
        "Disabled": "bool"
      }
    },
    "RButton": {
      "Purpose": "Professional button component with enterprise variants, AI-optimized for rapid development. Supports 9 variants including gradients, 5 sizes, loading states, elevation effects, glassmorphism, and comprehensive accessibility.",
      "Parameters": {
        "Variant": "ButtonVariant[Primary, Secondary, Danger, Ghost, Outline, Glass, Success, Warning, Info] - Primary for main actions, Secondary for supporting, Danger for destructive",
        "Size": "ButtonSize[Small, Medium, Large] - Medium is default, Large for prominent actions, Small for compact",
        "Type": "ButtonType[Button, Submit, Reset] - Submit for forms, Button for regular actions",
        "Text": "string - Use action verbs like Save, Delete, Create. Keep concise.",
        "Icon": "string[save, delete, edit, add, search, settings] - Common icons: save, delete, edit, add, search, settings",
        "IconPosition": "IconPosition[Start, End, Top, Bottom] - Start is most common, End for arrows, Top for stacked layouts",
        "Disabled": "bool",
        "Loading": "bool",
        "OnClick": "EventCallback<MouseEventArgs>",
        "ChildContent": "RenderFragment",
        "Title": "string",
        "Href": "string - Button navigates to this URL when clicked",
        "Target": "string[_blank, _self] - _blank for new window, _self for same window"
      }
    },
    "RChip": {
      "Purpose": "Professional chip component for tags, filters, and selections with interactive states. Supports removable chips, selection indicators, icons, and multiple variants.",
      "Parameters": {
        "Text": "string",
        "Icon": "string",
        "Variant": "ChipVariant",
        "Size": "ChipSize",
        "Disabled": "bool",
        "OnClick": "EventCallback"
      }
    },
    "RBadge": {
      "Purpose": "Professional badge component for status indicators, counts, and labels. Supports multiple variants, sizes, and interactive states with enterprise-grade styling.",
      "Parameters": {
        "Text": "string - Keep text short: Active, 5, New, Pending. Use 1-10 characters max",
        "Variant": "BadgeVariant[Primary, Secondary, Success, Warning, Danger, Info] - Primary for emphasis, Success for positive, Warning for attention, Danger for errors",
        "Size": "BadgeSize[Small, Medium, Large] - Medium is default, Small for compact layouts, Large for prominence",
        "Icon": "string[check_circle, warning, error, info, star, notifications] - Common icons: check_circle, warning, error, info, star, notifications",
        "Clickable": "bool - Set to true for interactive badges that perform actions",
        "OnClick": "EventCallback",
        "ChildContent": "RenderFragment"
      }
    },
    "RToastContainer": {
      "Purpose": "UI component",
      "Parameters": {}
    },
    "RAccordionItem": {
      "Purpose": "Accordion item title",
      "Parameters": {
        "Title": "string",
        "Icon": "string",
        "Disabled": "bool",
        "HeaderContent": "RenderFragment",
        "ChildContent": "RenderFragment"
      }
    },
    "RDataTable": {
      "Purpose": "UI component",
      "Parameters": {
        "Items": "List<TItem>",
        "Loading": "bool",
        "Title": "string",
        "Icon": "string",
        "HeaderContent": "RenderFragment",
        "FooterContent": "RenderFragment",
        "ChildContent": "RenderFragment"
      }
    },
    "RSelectModal": {
      "Purpose": "UI component",
      "Parameters": {
        "Items": "IEnumerable<T>"
      }
    },
    "RDetailModal": {
      "Purpose": "UI component",
      "Parameters": {
        "ChildContent": "RenderFragment"
      }
    },
    "RDivider": {
      "Purpose": "Professional divider component for visual separation with text support and multiple styles. Supports horizontal/vertical orientation, customizable styling, and automatic menu integration.",
      "Parameters": {
        "Text": "string - Use for section labels like Settings, Advanced Options, OR. Keep short",
        "Variant": "DividerVariant[Horizontal, Vertical] - Horizontal for section breaks, Vertical for inline separation",
        "Style": "DividerStyle[Solid, Dashed, Dotted] - Solid for standard, Dashed for softer, Dotted for subtle separation",
        "TextAlign": "DividerTextAlign[Left, Center, Right] - Center for balanced labels, Left for section headers, Right for special cases",
        "ChildContent": "RenderFragment"
      }
    },
    "RProgressBar": {
      "Purpose": "UI component",
      "Parameters": {
        "Value": "double",
        "Label": "string",
        "Variant": "ProgressVariant",
        "Size": "ProgressSize"
      }
    },
    "RList": {
      "Purpose": "List title (for menu variant)",
      "Parameters": {
        "Title": "string",
        "Size": "ListSize",
        "Variant": "ListVariant",
        "ChildContent": "RenderFragment"
      }
    },
    "RFormField": {
      "Purpose": "Universal form field component with professional validation and utility-first CSS",
      "Parameters": {
        "InputId": "string - Unique identifier for the input field",
        "Type": "FieldType - Type of input field (Text, Email, Password, Select, etc.)",
        "Size": "FieldSize",
        "Variant": "FieldVariant - Visual style variant of the field",
        "Label": "string - Label text displayed above the field",
        "Value": "string - Current value of the input field",
        "Placeholder": "string - Placeholder text shown when field is empty",
        "Required": "bool - Mark field as required for form validation",
        "Disabled": "bool",
        "Loading": "bool",
        "ChildContent": "RenderFragment"
      }
    },
    "RFileUpload": {
      "Purpose": "Professional file upload component with drag-drop, validation, and preview",
      "Parameters": {
        "ComponentId": "string - Unique identifier for the file upload component",
        "DisplayMode": "RFileUploadDisplayMode - Visual style mode (DropZone, Button, Inline, Minimal)",
        "Disabled": "bool",
        "AllowedTypes": "string[] - Array of allowed file extensions or MIME types",
        "MaxSize": "long - Maximum file size in bytes",
        "Multiple": "bool - Allow selecting multiple files at once",
        "Icon": "string"
      }
    }
  }
}
