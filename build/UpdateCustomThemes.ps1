[CmdletBinding()]
param(
    [Parameter(Mandatory=$false)]
    [string]$ProjectPath = ".",
    
    [Parameter(Mandatory=$false)]
    [string]$ThemeConfigFile = "rr-themes.json"
)

$ErrorActionPreference = "Stop"

function Update-CustomThemeImports {
    $customThemePath = Join-Path $ProjectPath "RR.Blazor/Styles/themes/_custom.scss"
    $configPath = Join-Path $ProjectPath $ThemeConfigFile
    
    Write-Host "Updating custom theme imports..." -ForegroundColor Cyan
    
    $header = @"
// Custom Theme Loader
// This file is automatically updated when custom themes are registered
// DO NOT EDIT MANUALLY - Generated by RR.Blazor Theme System
// Last updated: $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")

"@
    
    $imports = @()
    
    if (Test-Path $configPath) {
        Write-Host "Found theme configuration file: $configPath" -ForegroundColor Gray
        $config = Get-Content $configPath | ConvertFrom-Json
        
        foreach ($theme in $config.themes) {
            $themePath = $theme.path
            
            # Convert to relative path from RR.Blazor/Styles/themes/
            if ($themePath.StartsWith("~/")) {
                $themePath = $themePath.Substring(2)
            }
            
            # Make path relative to themes folder
            $relativePath = $themePath.Replace("\", "/")
            if (-not $relativePath.StartsWith("../")) {
                $relativePath = "../../../$relativePath"
            }
            
            $imports += "@import '$relativePath';"
            Write-Host "  Added theme: $($theme.name) -> $relativePath" -ForegroundColor Green
        }
    }
    else {
        Write-Host "No theme configuration file found. Using default setup." -ForegroundColor Yellow
        $imports += "// No custom themes configured"
        $imports += "// Create $ThemeConfigFile with theme definitions to enable custom themes"
    }
    
    $content = $header + ($imports -join "`n")
    
    # Ensure directory exists
    $dir = Split-Path $customThemePath -Parent
    if (-not (Test-Path $dir)) {
        New-Item -ItemType Directory -Path $dir -Force | Out-Null
    }
    
    # Write the file
    $content | Out-File -FilePath $customThemePath -Encoding UTF8
    
    Write-Host "`nCustom theme imports updated successfully!" -ForegroundColor Green
}

# Example theme config file format:
$exampleConfig = @'
{
  "themes": [
    {
      "name": "corporate",
      "path": "~/Themes/corporate.scss"
    },
    {
      "name": "modern",
      "path": "~/Themes/modern.scss"
    }
  ]
}
'@

try {
    Update-CustomThemeImports
    
    if (-not (Test-Path (Join-Path $ProjectPath $ThemeConfigFile))) {
        Write-Host "`nTo configure custom themes, create '$ThemeConfigFile' with:" -ForegroundColor Cyan
        Write-Host $exampleConfig -ForegroundColor Gray
    }
}
catch {
    Write-Host "Error updating custom themes: $_" -ForegroundColor Red
    exit 1
}