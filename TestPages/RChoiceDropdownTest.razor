@page "/test-choice-dropdown"

<h1>RChoice Dropdown Test</h1>

<div class="p-4 space-y-4">
    <h2>Basic Dropdown</h2>
    <RChoiceGeneric TValue="string"
                    Items="@simpleItems"
                    SelectedValue="@selectedValue"
                    SelectedValueChangedTyped="@((value) => selectedValue = value)"
                    Mode="ChoiceMode.Dropdown"
                    Label="Select an option"
                    ItemLabelSelectorTyped="@(item => item)" />
    
    <p>Selected: @selectedValue</p>
    
    <h2>Dropdown with Icons</h2>
    <RChoiceGeneric TValue="TestOption"
                    Items="@iconItems"
                    SelectedValue="@selectedOption"
                    SelectedValueChangedTyped="@((value) => selectedOption = value)"
                    Mode="ChoiceMode.Dropdown"
                    Label="Select option with icon"
                    ItemLabelSelectorTyped="@(item => item.Label)"
                    ItemIconSelectorTyped="@(item => item.Icon)" />
    
    <p>Selected: @(selectedOption?.Label ?? "None")</p>
</div>

@code {
    private string selectedValue = "";
    private TestOption selectedOption = null;
    
    private List<string> simpleItems = new()
    {
        "Option 1",
        "Option 2", 
        "Option 3",
        "Option 4",
        "Option 5"
    };
    
    private List<TestOption> iconItems = new()
    {
        new TestOption("Home", "home"),
        new TestOption("Settings", "settings"),
        new TestOption("Profile", "person"),
        new TestOption("Logout", "logout")
    };
    
    public class TestOption
    {
        public TestOption(string label, string icon)
        {
            Label = label;
            Icon = icon;
        }
        
        public string Label { get; set; }
        public string Icon { get; set; }
    }
}