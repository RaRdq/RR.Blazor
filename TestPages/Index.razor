@page "/test"
@page "/showcase"
@using RR.Blazor.Components.Core
@using RR.Blazor.Components.Display
@using RR.Blazor.Services
@using RR.Blazor.Models
@inject IRThemeService ThemeService
@implements IDisposable

<div class="pa-4">
    <h1 class="text-h3 mb-6">RR.Blazor Component Showcases</h1>
    
    <RCard Class="mb-6">
        <div class="pa-4">
            <div class="flex items-center justify-between mb-4">
                <div>
                    <h3 class="text-h6 mb-2">RThemeProvider Demo</h3>
                    <p class="text-sm text-muted">System Theme Auto-Detected: <strong>@(ThemeService?.IsSystemDark == true ? "Dark Mode" : "Light Mode")</strong></p>
                    <p class="text-sm text-muted">Current Active Theme: <strong>@(ThemeService?.CurrentTheme?.Name ?? "Loading...")</strong></p>
                    <p class="text-sm text-muted">Theme Mode: <strong>@(ThemeService?.CurrentTheme?.Mode.ToString() ?? "Loading...")</strong></p>
                </div>
                <RThemeSwitcher />
            </div>
        </div>
    </RCard>
    <RDivider Text="Available Showcases" Class="mb-6" />
    
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
        
        <RCard Text="All R* Components Showcase" 
               SubText="Complete demo collection: Core, Form, Feedback & System components with 17 individual R* component demos in organized sections"
               Icon="widgets"
               OnClick="@(() => Navigation.NavigateTo("/test/core-components"))"
               Class="cursor-pointer hover-elevated"
               Variant="CardVariant.Glass">
            <ChildContent>
                <div class="pa-4">
                    <p class="text-sm text-muted mb-4">Complete demo collection: Core, Form, Feedback & System components with 17 individual R* component demos in organized sections</p>
                    <div class="flex flex-wrap gap-2 mb-3">
                        <RChip StyleVariant="ChipStyle.Badge" Text="RButton" Variant="VariantType.Primary" Size="SizeType.Small"  />
                        <RChip StyleVariant="ChipStyle.Badge" Text="RCard" Variant="VariantType.Secondary" Size="SizeType.Small"  />
                        <RChip StyleVariant="ChipStyle.Badge" Text="RAlert" Variant="VariantType.Info" Size="SizeType.Small"  />
                        <RChip StyleVariant="ChipStyle.Badge" Text="RTextInput" Variant="VariantType.Success" Size="SizeType.Small"  />
                        <RChip StyleVariant="ChipStyle.Badge" Text="RProgressBar" Variant="VariantType.Warning" Size="SizeType.Small"  />
                        <RChip StyleVariant="ChipStyle.Badge" Text="+12 more" Variant="VariantType.Secondary" Size="SizeType.Small"  />
                    </div>
                </div>
                <div class="pa-4 pt-0 flex justify-center">
                    <RButton Text="View Showcase" 
                            Icon="arrow_forward" 
                            IconPlacement="IconPlacement.Right"
                            Variant="VariantType.Primary" />
                </div>
            </ChildContent>
        </RCard>
        
        <RCard Text="Data Components Showcase" 
               SubText="Tables, Grids, Lists, Charts and complex data display components with filtering, export, and virtualization"
               Icon="table_chart"
               OnClick="@(() => Navigation.NavigateTo("/test/data-showcase"))"
               Class="cursor-pointer hover-elevated"
               Variant="CardVariant.Glass">
            <ChildContent>
                <div class="pa-4">
                    <p class="text-sm text-muted mb-4">Tables, Grids, Lists, Charts and complex data display components with filtering, export, and virtualization</p>
                    <div class="flex flex-wrap gap-2 mb-3">
                        <RChip StyleVariant="ChipStyle.Badge" Text="RGrid" Variant="VariantType.Primary" Size="SizeType.Small"  />
                        <RChip StyleVariant="ChipStyle.Badge" Text="RTable" Variant="VariantType.Secondary" Size="SizeType.Small"  />
                        <RChip StyleVariant="ChipStyle.Badge" Text="RChart" Variant="VariantType.Info" Size="SizeType.Small"  />
                        <RChip StyleVariant="ChipStyle.Badge" Text="RFilter" Variant="VariantType.Success" Size="SizeType.Small"  />
                        <RChip StyleVariant="ChipStyle.Badge" Text="RPivotGrid" Variant="VariantType.Warning" Size="SizeType.Small"  />
                        <RChip StyleVariant="ChipStyle.Badge" Text="+15 more" Variant="VariantType.Secondary" Size="SizeType.Small"  />
                    </div>
                </div>
                <div class="pa-4 pt-0 flex justify-center">
                    <RButton Text="View Showcase" 
                            Icon="arrow_forward" 
                            IconPlacement="IconPlacement.Right"
                            Variant="VariantType.Primary" />
                </div>
            </ChildContent>
        </RCard>
        
    </div>
</div>

@code {
    [Inject] private NavigationManager Navigation { get; set; } = default!;
    
    protected override async Task OnInitializedAsync()
    {
        await ThemeService.InitializeAsync();
        StateHasChanged();
    }
    
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            ThemeService.ThemeChanged += OnThemeChanged;
        }
    }
    
    private void OnThemeChanged(ThemeConfiguration theme)
    {
        InvokeAsync(StateHasChanged);
    }
    
    public void Dispose()
    {
        ThemeService.ThemeChanged -= OnThemeChanged;
    }
}