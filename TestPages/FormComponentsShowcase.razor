@page "/showcase/form-components"
@using RR.Blazor.Components.Core
@using RR.Blazor.Components.Form
@using RR.Blazor.Enums
@using Microsoft.AspNetCore.Components
@using System.ComponentModel.DataAnnotations

<RThemeProvider>
    <div class="container pa-6">
        <RHeaderCard Title="RR.Blazor Form Components Showcase" 
                     Icon="edit_note">
            <ChildContent>
                Complete demonstration of all 11 form components with validation, variants, and professional form layouts
            </ChildContent>
        </RHeaderCard>

        <div class="space-y-8 mt-6">

            <!-- RCheckbox Component -->
            <RCard Variant="CardVariant.Outlined" Text="RCheckbox">
                <ChildContent>
                    <RSectionDivider Text="Checkbox Component" 
                                     Subtitle="Professional checkbox with enterprise styling and accessibility" 
                                     Icon="check_box" />
                    
                    <div class="space-y-6">
                        <!-- Basic Checkboxes -->
                        <div class="space-y-2">
                            <div class="text-h6 font-semibold">Basic Usage</div>
                            <div class="space-y-3">
                                <RCheckbox @bind-Value="checkboxModel.BasicChecked" Text="Basic checkbox" />
                                <RCheckbox @bind-Value="checkboxModel.WithIcon" Text="With icon" Icon="star" />
                                <RCheckbox @bind-Value="checkboxModel.Required" Text="Required field *" />
                                <RCheckbox @bind-Value="checkboxModel.Disabled" Text="Disabled checkbox" Disabled="true" />
                            </div>
                        </div>

                        <!-- Variants -->
                        <div class="space-y-2">
                            <div class="text-h6 font-semibold">Variants</div>
                            <div class="space-y-3">
                                <RCheckbox @bind-Value="checkboxModel.Default" Text="Default variant" />
                                <RCheckbox @bind-Value="checkboxModel.Primary" Text="Primary variant" Variant="CheckboxVariant.Primary" />
                                <RCheckbox @bind-Value="checkboxModel.Success" Text="Success variant" Variant="CheckboxVariant.Success" />
                                <RCheckbox @bind-Value="checkboxModel.Warning" Text="Warning variant" Variant="CheckboxVariant.Warning" />
                                <RCheckbox @bind-Value="checkboxModel.Error" Text="Error variant" Variant="CheckboxVariant.Danger" />
                            </div>
                        </div>

                        <!-- Sizes -->
                        <div class="space-y-2">
                            <div class="text-h6 font-semibold">Sizes</div>
                            <div class="space-y-3">
                                <RCheckbox @bind-Value="checkboxModel.Small" Text="Small size" Size="CheckboxSize.Small" />
                                <RCheckbox @bind-Value="checkboxModel.Medium" Text="Medium size" Size="CheckboxSize.Medium" />
                                <RCheckbox @bind-Value="checkboxModel.Large" Text="Large size" Size="CheckboxSize.Large" />
                            </div>
                        </div>

                        <!-- Professional Examples -->
                        <div class="space-y-2">
                            <div class="text-h6 font-semibold">Professional Examples</div>
                            <div class="space-y-3">
                                <RCheckbox @bind-Value="checkboxModel.Terms" Text="I agree to the Terms of Service" Icon="gavel" />
                                <RCheckbox @bind-Value="checkboxModel.Newsletter" Text="Subscribe to newsletter" Icon="mail" />
                                <RCheckbox @bind-Value="checkboxModel.Notifications" Text="Enable push notifications" Icon="notifications" />
                                <RCheckbox @bind-Value="checkboxModel.TwoFactor" Text="Enable two-factor authentication" Icon="security" />
                            </div>
                        </div>
                    </div>
                </ChildContent>
            </RCard>

            <!-- RDatePicker Component -->
            <RCard Variant="CardVariant.Outlined" Text="RDatePicker">
                <ChildContent>
                    <RSectionDivider Text="Date Picker Component" 
                                     Subtitle="Professional date and time picker with calendar popup and time selection" 
                                     Icon="calendar_today" />
                    
                    <div class="space-y-6">
                        <RFormSection Title="Date Picker Examples" FieldColumns="2">
                            <!-- Basic Date Picker -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Basic Date Selection</div>
                                <RDatePicker @bind-Value="dateModel.BasicDate" 
                                           Label="Select Date" 
                                           Placeholder="Choose a date..." />
                            </div>

                            <!-- With Time -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Date with Time</div>
                                <RDatePicker @bind-Value="dateModel.DateTime" 
                                           Label="Date & Time" 
                                           ShowTime="true"
                                           Placeholder="Select date and time..." />
                            </div>

                            <!-- Date Range -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Date Range</div>
                                <RDatePicker @bind-Value="dateModel.StartDate" 
                                           @bind-EndValue="dateModel.EndDate"
                                           Label="Date Range" 
                                           Range="true"
                                           Placeholder="Select date range..." />
                            </div>

                            <!-- With Constraints -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">With Min/Max Dates</div>
                                <RDatePicker @bind-Value="dateModel.ConstrainedDate" 
                                           Label="Future Dates Only" 
                                           MinDate="DateTime.Now"
                                           MaxDate="DateTime.Now.AddDays(90)"
                                           Placeholder="Next 90 days only..." />
                            </div>

                            <!-- Different Sizes -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Small Size</div>
                                <RDatePicker @bind-Value="dateModel.SmallDate" 
                                           Label="Small Picker" 
                                           Size="FieldSize.Small"
                                           Placeholder="Compact date picker..." />
                            </div>

                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Large Size</div>
                                <RDatePicker @bind-Value="dateModel.LargeDate" 
                                           Label="Large Picker" 
                                           Size="FieldSize.Large"
                                           Placeholder="Prominent date picker..." />
                            </div>

                            <!-- 24 Hour Format -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">24-Hour Format</div>
                                <RDatePicker @bind-Value="dateModel.Time24Hour" 
                                           Label="24-Hour Time" 
                                           ShowTime="true"
                                           Use24HourFormat="true"
                                           Placeholder="24-hour format..." />
                            </div>

                            <!-- Disabled -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Disabled State</div>
                                <RDatePicker @bind-Value="dateModel.DisabledDate" 
                                           Label="Disabled Picker" 
                                           Disabled="true"
                                           Placeholder="Cannot be modified..." />
                            </div>
                        </RFormSection>
                    </div>
                </ChildContent>
            </RCard>


            <!-- RFileUpload Component -->
            <RCard Variant="CardVariant.Outlined" Text="RFileUpload">
                <ChildContent>
                    <RSectionDivider Text="File Upload Component" 
                                     Subtitle="Professional file upload with drag-drop, validation, and preview" 
                                     Icon="upload_file" />
                    
                    <div class="space-y-6">
                        <!-- Display Modes -->
                        <div class="space-y-4">
                            <div class="text-h6 font-semibold">Display Modes</div>
                            
                            <div class="space-y-6">
                                <!-- Drop Zone Mode -->
                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">Drop Zone Mode</div>
                                    <RFileUpload ComponentId="dropzone-upload" 
                                               DisplayMode="RFileUploadDisplayMode.DropZone"
                                               AllowedTypes="@(new string[] { ".pdf", ".doc", ".docx", ".jpg", ".png" })"
                                               MaxSize="5242880"
                                               Multiple="true" />
                                </div>

                                <!-- Button Mode -->
                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">Button Mode</div>
                                    <RFileUpload ComponentId="button-upload" 
                                               DisplayMode="RFileUploadDisplayMode.Button"
                                               AllowedTypes="@(new string[] { ".xlsx", ".csv" })"
                                               MaxSize="10485760" />
                                </div>

                                <!-- Inline Mode -->
                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">Inline Mode</div>
                                    <RFileUpload ComponentId="inline-upload" 
                                               DisplayMode="RFileUploadDisplayMode.Inline"
                                               AllowedTypes="@(new string[] { ".jpg", ".jpeg", ".png", ".gif" })"
                                               MaxSize="2097152"
                                               Multiple="true" />
                                </div>

                                <!-- Minimal Mode -->
                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">Minimal Mode</div>
                                    <RFileUpload ComponentId="minimal-upload" 
                                               DisplayMode="RFileUploadDisplayMode.Minimal"
                                               AllowedTypes="@(new string[] { ".txt", ".log" })"
                                               MaxSize="1048576" />
                                </div>
                            </div>
                        </div>

                        <!-- Professional Examples -->
                        <div class="space-y-4">
                            <div class="text-h6 font-semibold">Professional Use Cases</div>
                            
                            <RFormSection Title="Document Upload Examples" FieldColumns="1">
                                <!-- Resume Upload -->
                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">Resume Upload</div>
                                    <RFileUpload ComponentId="resume-upload" 
                                               DisplayMode="RFileUploadDisplayMode.DropZone"
                                               AllowedTypes="@(new string[] { ".pdf", ".doc", ".docx" })"
                                               MaxSize="5242880"
                                               Icon="description" />
                                    <p class="text-sm text-muted">Accepted formats: PDF, DOC, DOCX (Max 5MB)</p>
                                </div>

                                <!-- Profile Photo -->
                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">Profile Photo</div>
                                    <RFileUpload ComponentId="photo-upload" 
                                               DisplayMode="RFileUploadDisplayMode.Button"
                                               AllowedTypes="@(new string[] { ".jpg", ".jpeg", ".png" })"
                                               MaxSize="2097152"
                                               Icon="photo_camera" />
                                    <p class="text-sm text-muted">Images only: JPG, PNG (Max 2MB)</p>
                                </div>

                                <!-- Bulk Document Upload -->
                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">Bulk Documents</div>
                                    <RFileUpload ComponentId="bulk-upload" 
                                               DisplayMode="RFileUploadDisplayMode.DropZone"
                                               Multiple="true"
                                               AllowedTypes="@(new string[] { ".pdf", ".doc", ".docx", ".txt", ".xlsx" })"
                                               MaxSize="10485760"
                                               Icon="folder_open" />
                                    <p class="text-sm text-muted">Multiple files allowed: Documents and spreadsheets (Max 10MB each)</p>
                                </div>
                            </RFormSection>
                        </div>

                        <!-- Disabled State -->
                        <div class="space-y-4">
                            <div class="text-h6 font-semibold">Disabled State</div>
                            <RFileUpload ComponentId="disabled-upload" 
                                       DisplayMode="RFileUploadDisplayMode.DropZone"
                                       Disabled="true"
                                       Icon="block" />
                        </div>
                    </div>
                </ChildContent>
            </RCard>

            <!-- RFormGeneric Component -->
            <RCard Variant="CardVariant.Outlined" Text="RFormGeneric">
                <ChildContent>
                    <RSectionDivider Text="Generic Form Component" 
                                     Subtitle="Professional form with validation, state management, and accessibility" 
                                     Icon="dynamic_form" />
                    
                    <div class="space-y-6">
                        <!-- User Registration Form -->
                        <div class="space-y-4">
                            <div class="text-h6 font-semibold">User Registration Form</div>
                            <RFormGeneric Model="userRegistrationModel" 
                                        OnValidSubmit="@OnUserRegistrationSubmit"
                                        OnInvalidSubmit="@OnUserRegistrationInvalid">
                                <RFormSection Title="Personal Information" Icon="person" FieldColumns="2">
                                    <RTextInput @bind-Value="userRegistrationModel.FirstName" 
                                              Label="First Name *" 
                                              Required="true" />
                                    <RTextInput @bind-Value="userRegistrationModel.LastName" 
                                              Label="Last Name *" 
                                              Required="true" />
                                    <RTextInput @bind-Value="userRegistrationModel.Email" 
                                              Label="Email Address *" 
                                              Type="FieldType.Email" 
                                              Required="true" />
                                    <RTextInput @bind-Value="userRegistrationModel.Phone" 
                                              Label="Phone Number" 
                                              Type="FieldType.Tel" />
                                </RFormSection>

                                <RFormSection Title="Account Settings" Icon="settings" FieldColumns="1">
                                    <RTextInput @bind-Value="userRegistrationModel.Username" 
                                              Label="Username *" 
                                              Required="true" />
                                    <RTextInput @bind-Value="userRegistrationModel.Password" 
                                              Label="Password *" 
                                              Type="FieldType.Password" 
                                              ShowPasswordToggle="true"
                                              Required="true" />
                                    <RChoice SelectedValue="@userRegistrationModel.Role" 
                                           SelectedValueChanged="@((object value) => userRegistrationModel.Role = value?.ToString() ?? "")"
                                           Label="Role" 
                                           Items="@roleOptions" 
                                           Variant="ChoiceVariant.Dropdown" 
                                           Placeholder="Select a role..." />
                                </RFormSection>

                                <RFormSection Title="Preferences" Icon="tune" FieldColumns="1">
                                    <RCheckbox @bind-Value="userRegistrationModel.NewsletterSubscription" 
                                             Text="Subscribe to newsletter" />
                                    <RCheckbox @bind-Value="userRegistrationModel.TermsAccepted" 
                                             Text="I agree to the Terms of Service *" 
                                             Required="true" />
                                </RFormSection>

                                <RActionGroup Pattern="ActionGroupPattern.CancelSave" />
                            </RFormGeneric>
                        </div>

                        <!-- Profile Update Form -->
                        <div class="space-y-4">
                            <div class="text-h6 font-semibold">Profile Update Form</div>
                            <RFormGeneric Model="profileUpdateModel" 
                                        OnValidSubmit="@OnProfileUpdateSubmit">
                                <RFormSection Title="Profile Information" Icon="account_circle" FieldColumns="2">
                                    <RTextInput @bind-Value="profileUpdateModel.DisplayName" 
                                              Label="Display Name" />
                                    <RTextInput @bind-Value="profileUpdateModel.JobTitle" 
                                              Label="Job Title" />
                                    <RTextInput @bind-Value="profileUpdateModel.Department" 
                                              Label="Department" />
                                    <RTextInput @bind-Value="profileUpdateModel.Location" 
                                              Label="Location" />
                                </RFormSection>

                                <RFormSection Title="Contact Information" Icon="contact_mail" FieldColumns="1">
                                    <RTextInput @bind-Value="profileUpdateModel.Bio" 
                                              Label="Bio" 
                                              IsMultiLine="true" 
                                              Rows="3" />
                                </RFormSection>

                                <RActionGroup Alignment="ActionGroupAlignment.End">
                                    <RButton Text="Update Profile" Variant="ButtonVariant.Primary" Type="ButtonType.Submit" />
                                </RActionGroup>
                            </RFormGeneric>
                        </div>
                    </div>
                </ChildContent>
            </RCard>

            <!-- RFormSection Component -->
            <RCard Variant="CardVariant.Outlined" Text="RFormSection">
                <ChildContent>
                    <RSectionDivider Text="Form Section Component" 
                                     Subtitle="Professional form section container with collapsible header and grid layout" 
                                     Icon="view_module" />
                    
                    <div class="space-y-6">
                        <!-- Basic Form Sections -->
                        <div class="space-y-4">
                            <div class="text-h6 font-semibold">Form Organization</div>
                            
                            <!-- Personal Information Section -->
                            <RFormSection Title="Personal Information" 
                                        Description="Basic details about the user" 
                                        Icon="person" 
                                        FieldColumns="2">
                                <RTextInput @bind-Value="sectionModel.FirstName" Label="First Name" />
                                <RTextInput @bind-Value="sectionModel.LastName" Label="Last Name" />
                                <RTextInput @bind-Value="sectionModel.Email" Label="Email" Type="FieldType.Email" />
                                <RTextInput @bind-Value="sectionModel.Phone" Label="Phone" Type="FieldType.Tel" />
                            </RFormSection>

                            <!-- Address Section -->
                            <RFormSection Title="Address Information" 
                                        Description="Mailing and billing address details" 
                                        Icon="location_on" 
                                        FieldColumns="1">
                                <RTextInput @bind-Value="sectionModel.Street" Label="Street Address" />
                                <div class="grid grid-cols-3 gap-4">
                                    <RTextInput @bind-Value="sectionModel.City" Label="City" />
                                    <RTextInput @bind-Value="sectionModel.State" Label="State" />
                                    <RTextInput @bind-Value="sectionModel.ZipCode" Label="ZIP Code" />
                                </div>
                            </RFormSection>

                            <!-- Collapsible Section -->
                            <RFormSection Title="Advanced Settings" 
                                        Description="Optional configuration settings" 
                                        Icon="settings" 
                                        Collapsible="true" 
                                        @bind-Expanded="advancedSectionExpanded"
                                        FieldColumns="2">
                                <RCheckbox @bind-Value="sectionModel.NotificationsEnabled" Text="Enable notifications" />
                                <RCheckbox @bind-Value="sectionModel.AutoBackup" Text="Automatic backup" />
                                <RChoice SelectedValue="@sectionModel.Theme" 
                                   SelectedValueChanged="@((object value) => sectionModel.Theme = value?.ToString() ?? "")"
                                   Label="Theme Preference" 
                                   Items="@themeOptions" 
                                   Variant="ChoiceVariant.Dropdown" 
                                   Placeholder="Choose theme..." />
                                <RChoice SelectedValue="@sectionModel.Language" 
                                       SelectedValueChanged="@((object value) => sectionModel.Language = value?.ToString() ?? "")"
                                       Label="Language" 
                                       Items="@languageOptions" 
                                       Variant="ChoiceVariant.Dropdown" 
                                       Placeholder="Select language..." />
                            </RFormSection>

                            <!-- Different Elevations -->
                            <RFormSection Title="Elevated Section" 
                                        Description="Section with medium elevation" 
                                        Icon="layers" 
                                        Elevation="SectionElevation.Medium"
                                        FieldColumns="3">
                                <RTextInput @bind-Value="sectionModel.Field1" Label="Field 1" />
                                <RTextInput @bind-Value="sectionModel.Field2" Label="Field 2" />
                                <RTextInput @bind-Value="sectionModel.Field3" Label="Field 3" />
                            </RFormSection>

                            <!-- Single Column Layout -->
                            <RFormSection Title="Full Width Section" 
                                        Description="Single column layout for wide fields" 
                                        Icon="view_stream" 
                                        FieldColumns="1">
                                <RTextInput @bind-Value="sectionModel.FullWidthField" 
                                          Label="Full Width Text Field" 
                                          IsMultiLine="true" 
                                          Rows="4" />
                            </RFormSection>
                        </div>
                    </div>
                </ChildContent>
            </RCard>

            <!-- RRadio Component -->
            <RCard Variant="CardVariant.Outlined" Text="RRadio">
                <ChildContent>
                    <RSectionDivider Text="Radio Button Component" 
                                     Subtitle="Professional radio button with enterprise styling and accessibility" 
                                     Icon="radio_button_checked" />
                    
                    <div class="space-y-6">
                        <!-- Basic Radio Groups -->
                        <div class="space-y-4">
                            <div class="text-h6 font-semibold">Radio Button Groups</div>
                            
                            <!-- Size Preference -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Size Options</div>
                                <div class="space-y-2">
                                    <RRadio @bind-SelectedValue="radioModel.SizePreference" 
                                          Value="small"
                                          Text="Small" 
                                          Size="RadioSize.Small" />
                                    <RRadio @bind-SelectedValue="radioModel.SizePreference" 
                                          Value="medium"
                                          Text="Medium" 
                                          Size="RadioSize.Medium" />
                                    <RRadio @bind-SelectedValue="radioModel.SizePreference" 
                                          Value="large"
                                          Text="Large" 
                                          Size="RadioSize.Large" />
                                </div>
                            </div>

                            <!-- Variants -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Variant Options</div>
                                <div class="space-y-2">
                                    <RRadio @bind-SelectedValue="radioModel.VariantChoice" 
                                          Value="default"
                                          Text="Default variant" />
                                    <RRadio @bind-SelectedValue="radioModel.VariantChoice" 
                                          Value="primary"
                                          Text="Primary variant" 
                                          Variant="RadioVariant.Primary" />
                                    <RRadio @bind-SelectedValue="radioModel.VariantChoice" 
                                          Value="success"
                                          Text="Success variant" 
                                          Variant="RadioVariant.Success" />
                                    <RRadio @bind-SelectedValue="radioModel.VariantChoice" 
                                          Value="warning"
                                          Text="Warning variant" 
                                          Variant="RadioVariant.Warning" />
                                </div>
                            </div>

                            <!-- With Icons -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Payment Method</div>
                                <div class="space-y-2">
                                    <RRadio @bind-SelectedValue="radioModel.PaymentMethod" 
                                          Value="credit_card" 
                                          Text="Credit Card" 
                                          Icon="credit_card" />
                                    <RRadio @bind-SelectedValue="radioModel.PaymentMethod" 
                                          Value="paypal" 
                                          Text="PayPal" 
                                          Icon="account_balance_wallet" />
                                    <RRadio @bind-SelectedValue="radioModel.PaymentMethod" 
                                          Value="bank_transfer" 
                                          Text="Bank Transfer" 
                                          Icon="account_balance" />
                                    <RRadio @bind-SelectedValue="radioModel.PaymentMethod" 
                                          Value="crypto" 
                                          Text="Cryptocurrency" 
                                          Icon="currency_bitcoin" />
                                </div>
                            </div>

                            <!-- Professional Use Cases -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Notification Frequency</div>
                                <div class="space-y-2">
                                    <RRadio @bind-SelectedValue="radioModel.NotificationFrequency" 
                                          Value="immediately" 
                                          Text="Immediately" 
                                          Icon="notifications_active" />
                                    <RRadio @bind-SelectedValue="radioModel.NotificationFrequency" 
                                          Value="daily" 
                                          Text="Daily Digest" 
                                          Icon="today" />
                                    <RRadio @bind-SelectedValue="radioModel.NotificationFrequency" 
                                          Value="weekly" 
                                          Text="Weekly Summary" 
                                          Icon="date_range" />
                                    <RRadio @bind-SelectedValue="radioModel.NotificationFrequency" 
                                          Value="never" 
                                          Text="Never" 
                                          Icon="notifications_off" />
                                </div>
                            </div>

                            <!-- Disabled Options -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Subscription Plan (Some Disabled)</div>
                                <div class="space-y-2">
                                    <RRadio @bind-SelectedValue="radioModel.SubscriptionPlan" 
                                          Value="free" 
                                          Text="Free Plan" 
                                          Icon="free_breakfast" />
                                    <RRadio @bind-SelectedValue="radioModel.SubscriptionPlan" 
                                          Value="pro" 
                                          Text="Pro Plan" 
                                          Icon="star" />
                                    <RRadio @bind-SelectedValue="radioModel.SubscriptionPlan" 
                                          Value="enterprise" 
                                          Text="Enterprise Plan (Contact Sales)" 
                                          Icon="business" 
                                          Disabled="true" />
                                </div>
                            </div>
                        </div>
                    </div>
                </ChildContent>
            </RCard>

            <!-- RChoice Component (Enhanced with Form Integration) -->
            <RCard Variant="CardVariant.Outlined" Text="RChoice - Enhanced">
                <ChildContent>
                    <RSectionDivider Text="Enhanced Choice Component" 
                                     Subtitle="Smart choice component with form integration, validation, and auto-detection" 
                                     Icon="dynamic_form" />
                    
                    <div class="space-y-6">
                        <RFormSection Title="Form Integration Examples" FieldColumns="2">
                            <!-- Basic Choice with Label -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Country Selection (with Label)</div>
                                <RChoice SelectedValue="@selectModel.Country" 
                                       SelectedValueChanged="@((object value) => selectModel.Country = value?.ToString() ?? "")"
                                       Label="Country" 
                                       Items="@countryOptions" 
                                       Variant="ChoiceVariant.Dropdown" 
                                       Placeholder="Select your country..." 
                                       HelpText="Choose your primary country of residence" />
                            </div>

                            <!-- Department Choice with Validation -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Department (Required)</div>
                                <RChoice SelectedValue="@selectModel.Department" 
                                       SelectedValueChanged="@((object value) => selectModel.Department = value?.ToString() ?? "")"
                                       Label="Department" 
                                       Items="@departmentOptions" 
                                       Variant="ChoiceVariant.Dropdown" 
                                       Required="true" 
                                       Placeholder="Choose department..." 
                                       HasError="@(string.IsNullOrEmpty(selectModel.Department))" 
                                       ErrorMessage="@(string.IsNullOrEmpty(selectModel.Department) ? "Department is required" : "")" />
                            </div>

                            <!-- Priority Choice with Smart Detection -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Priority Level (Auto-Detection)</div>
                                <RChoice SelectedValue="@selectModel.Priority" 
                                       SelectedValueChanged="@((object value) => selectModel.Priority = value?.ToString() ?? "")"
                                       Label="Priority" 
                                       Items="@priorityOptions" 
                                       Variant="ChoiceVariant.Auto" 
                                       Placeholder="Set priority level..." 
                                       HelpText="Component automatically chooses inline vs dropdown based on options" />
                            </div>

                            <!-- Status Choice with Icons -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Project Status (with Icons)</div>
                                <RChoice SelectedValue="@selectModel.Status" 
                                       SelectedValueChanged="@((object value) => selectModel.Status = value?.ToString() ?? "")"
                                       Label="Status" 
                                       Items="@statusOptionsWithIcons" 
                                       Variant="ChoiceVariant.Dropdown" 
                                       ItemIconSelector="x => GetStatusIcon(x.ToString())" 
                                       Placeholder="Update status..." />
                            </div>

                            <!-- Role Choice with Loading State -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">User Role (Loading Demo)</div>
                                <RChoice SelectedValue="@selectModel.Role" 
                                       SelectedValueChanged="@((object value) => selectModel.Role = value?.ToString() ?? "")"
                                       Label="Role" 
                                       Items="@roleOptions" 
                                       Variant="ChoiceVariant.Dropdown" 
                                       Loading="@roleChoiceLoading" 
                                       Placeholder="Loading roles..." />
                                <button @onclick="ToggleRoleLoading" class="btn btn-sm btn-outline-primary mt-1">
                                    @(roleChoiceLoading ? "Stop Loading" : "Simulate Loading")
                                </button>
                            </div>

                            <!-- Category Choice with Error State -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Category (Error Demo)</div>
                                <RChoice SelectedValue="@selectModel.Category" 
                                       SelectedValueChanged="@((object value) => selectModel.Category = value?.ToString() ?? "")"
                                       Label="Category" 
                                       Items="@categoryOptions" 
                                       Variant="ChoiceVariant.Dropdown" 
                                       HasError="@categoryHasError" 
                                       ErrorMessage="@(categoryHasError ? "Please select a valid category" : "")" 
                                       Placeholder="Choose category..." />
                                <button @onclick="ToggleCategoryError" class="btn btn-sm btn-outline-danger mt-1">
                                    @(categoryHasError ? "Clear Error" : "Show Error")
                                </button>
                            </div>
                        </RFormSection>
                        
                        <!-- Inline vs Dropdown Comparison -->
                        <RFormSection Title="Smart Variant Detection" FieldColumns="2">
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Few Options (Auto → Inline)</div>
                                <RChoice SelectedValue="@selectModel.Size" 
                                       SelectedValueChanged="@((object value) => selectModel.Size = value?.ToString() ?? "")"
                                       Label="Size" 
                                       Items="@sizeOptions" 
                                       Variant="ChoiceVariant.Auto" 
                                       Placeholder="Pick size..." 
                                       HelpText="Automatically chooses inline for few options" />
                            </div>
                            
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Many Options (Auto → Dropdown)</div>
                                <RChoice SelectedValue="@selectModel.State" 
                                       SelectedValueChanged="@((object value) => selectModel.State = value?.ToString() ?? "")"
                                       Label="US State" 
                                       Items="@usStates" 
                                       Variant="ChoiceVariant.Auto" 
                                       Placeholder="Select state..." 
                                       HelpText="Automatically chooses dropdown for many options" />
                            </div>
                        </RFormSection>
                    </div>
                </ChildContent>
            </RCard>

            <!-- RChoice Switcher Styles -->
            <RCard Variant="CardVariant.Outlined" Text="RChoice - Switcher Styles">
                <ChildContent>
                    <RSectionDivider Text="Switcher Functionality with RChoice" 
                                     Subtitle="RChoice component with different styles for switcher-like behavior" 
                                     Icon="swap_horiz" />
                    
                    <div class="space-y-6">
                        <!-- Switcher Style Examples -->
                        <div class="space-y-4">
                            <div class="text-h6 font-semibold">Switcher Style Variants</div>
                            
                            <RFormSection Title="View Options & Switcher Styles" FieldColumns="2">
                                <!-- Tabs Style -->
                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">View Mode (Tabs Style)</div>
                                    <RChoice SelectedValue="@switcherModel.ViewMode" 
                                           SelectedValueChanged="@((object value) => switcherModel.ViewMode = value?.ToString() ?? "")"
                                           Items="@viewModeOptions" 
                                           Label="View Mode" 
                                           Variant="ChoiceVariant.Inline" 
                                           Style="ChoiceStyle.Tabs" />
                                    <small class="text-muted">Selected: @switcherModel.ViewMode</small>
                                </div>

                                <!-- Pills Style -->
                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">Theme Mode (Pills Style)</div>
                                    <RChoice SelectedValue="@switcherModel.ThemeMode" 
                                           SelectedValueChanged="@((object value) => switcherModel.ThemeMode = value?.ToString() ?? "")"
                                           Items="@themeModeOptions" 
                                           Label="Theme Mode" 
                                           Variant="ChoiceVariant.Inline" 
                                           Style="ChoiceStyle.Pills" />
                                    <small class="text-muted">Selected: @switcherModel.ThemeMode</small>
                                </div>

                                <!-- Buttons Style -->
                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">Layout Style (Buttons)</div>
                                    <RChoice SelectedValue="@switcherModel.LayoutStyle" 
                                           SelectedValueChanged="@((object value) => switcherModel.LayoutStyle = value?.ToString() ?? "")"
                                           Items="@layoutStyleOptions" 
                                           Label="Layout Style" 
                                           Variant="ChoiceVariant.Inline" 
                                           Style="ChoiceStyle.Buttons" />
                                    <small class="text-muted">Selected: @switcherModel.LayoutStyle</small>
                                </div>

                                <!-- Standard Style -->
                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">Display Size (Standard)</div>
                                    <RChoice SelectedValue="@switcherModel.DisplaySize" 
                                           SelectedValueChanged="@((object value) => switcherModel.DisplaySize = value?.ToString() ?? "")"
                                           Items="@displaySizeOptions" 
                                           Label="Display Size" 
                                           Variant="ChoiceVariant.Inline" 
                                           Style="ChoiceStyle.Standard" />
                                    <small class="text-muted">Selected: @switcherModel.DisplaySize</small>
                                </div>
                            </RFormSection>
                            
                            <!-- Interactive Demo -->
                            <RFormSection Title="Interactive Switcher Demo" FieldColumns="1">
                                <div class="space-y-3">
                                    <div class="text-lg font-semibold">Multi-Option Toggle Switcher</div>
                                    <RChoice SelectedValue="@switcherModel.ActiveTab" 
                                           SelectedValueChanged="@((object value) => switcherModel.ActiveTab = value?.ToString() ?? "")"
                                           Items="@tabOptions" 
                                           Label="Active Tab" 
                                           Variant="ChoiceVariant.Inline" 
                                           Style="ChoiceStyle.Tabs" 
                                           ShowLabels="true"
                                           ShowActiveIndicator="true" />
                                    
                                    <div class="mt-4 p-4 bg-surface-elevated rounded">
                                        <div class="text-base font-medium">Content for "@switcherModel.ActiveTab"</div>
                                        <p class="text-muted">
                                            @GetTabContent(switcherModel.ActiveTab)
                                        </p>
                                    </div>
                                </div>
                            </RFormSection>
                        </div>
                    </div>
                </ChildContent>
            </RCard>

            <!-- RTextInput Component -->
            <RCard Variant="CardVariant.Outlined" Text="RTextInput">
                <ChildContent>
                    <RSectionDivider Text="Text Input Component" 
                                     Subtitle="Professional text input with multiple field types and validation support" 
                                     Icon="text_fields" />
                    
                    <div class="space-y-6">
                        <RFormSection Title="Text Input Examples" FieldColumns="2">
                            <!-- Basic Text Input -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Basic Text</div>
                                <RTextInput @bind-Value="textInputModel.BasicText" 
                                          Label="Full Name" 
                                          Placeholder="Enter your full name..." />
                            </div>

                            <!-- Email Input -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Email Address</div>
                                <RTextInput @bind-Value="textInputModel.Email" 
                                          Label="Email" 
                                          Type="FieldType.Email" 
                                          Placeholder="user@example.com" />
                            </div>

                            <!-- Password Input -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Password</div>
                                <RTextInput @bind-Value="textInputModel.Password" 
                                          Label="Password" 
                                          Type="FieldType.Password" 
                                          ShowPasswordToggle="true"
                                          Placeholder="Enter password..." />
                            </div>

                            <!-- Phone Input -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Phone Number</div>
                                <RTextInput @bind-Value="textInputModel.Phone" 
                                          Label="Phone" 
                                          Type="FieldType.Tel" 
                                          Placeholder="(555) 123-4567" />
                            </div>

                            <!-- Number Input -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Age</div>
                                <RTextInput @bind-Value="textInputModel.Age" 
                                          Label="Age" 
                                          Type="FieldType.Number" 
                                          Min="18" 
                                          Max="120" 
                                          Placeholder="25" />
                            </div>

                            <!-- URL Input -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Website</div>
                                <RTextInput @bind-Value="textInputModel.Website" 
                                          Label="Website URL" 
                                          Type="FieldType.Url" 
                                          Placeholder="https://example.com" />
                            </div>

                            <!-- Search Input -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Search</div>
                                <RTextInput @bind-Value="textInputModel.SearchTerm" 
                                          Label="Search Products" 
                                          Type="FieldType.Search" 
                                          Placeholder="What are you looking for?" />
                            </div>

                            <!-- Autocomplete Input -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Username</div>
                                <RTextInput @bind-Value="textInputModel.Username" 
                                          Label="Username" 
                                          AutoComplete="username" 
                                          Name="username"
                                          Placeholder="Choose a username..." />
                            </div>
                        </RFormSection>

                        <!-- Multi-line Text Areas -->
                        <RFormSection Title="Multi-line Text Areas" FieldColumns="1">
                            <!-- Basic Textarea -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Description</div>
                                <RTextInput @bind-Value="textInputModel.Description" 
                                          Label="Project Description" 
                                          IsMultiLine="true" 
                                          Rows="3" 
                                          Placeholder="Describe your project..." />
                            </div>

                            <!-- Textarea with Character Count -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Bio (with character count)</div>
                                <RTextInput @bind-Value="textInputModel.Bio" 
                                          Label="Biography" 
                                          IsMultiLine="true" 
                                          Rows="4" 
                                          ShowCharacterCount="true" 
                                          Placeholder="Tell us about yourself..." />
                            </div>

                            <!-- Resizable Textarea -->
                            <div class="space-y-2">
                                <div class="text-lg font-semibold">Comments (resizable)</div>
                                <RTextInput @bind-Value="textInputModel.Comments" 
                                          Label="Additional Comments" 
                                          IsMultiLine="true" 
                                          Rows="2" 
                                          Resize="vertical" 
                                          Placeholder="Any additional comments..." />
                            </div>
                        </RFormSection>
                    </div>
                </ChildContent>
            </RCard>

            <!-- RToggleGeneric Component -->
            <RCard Variant="CardVariant.Outlined" Text="RToggleGeneric">
                <ChildContent>
                    <RSectionDivider Text="Toggle Component" 
                                     Subtitle="Professional toggle switch for boolean states with variants and sizes" 
                                     Icon="toggle_on" />
                    
                    <div class="space-y-6">
                        <!-- Basic Toggles -->
                        <div class="space-y-4">
                            <div class="text-h6 font-semibold">Toggle States</div>
                            
                            <RFormSection Title="Settings" FieldColumns="2">
                                <!-- Basic Toggle -->
                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">Notifications</div>
                                    <RToggleGeneric TValue="bool" @bind-Value="toggleModel.NotificationsEnabled" 
                                                  Text="Enable notifications" />
                                </div>

                                <!-- Toggle with Icon -->
                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">Dark Mode</div>
                                    <RToggleGeneric TValue="bool" @bind-Value="toggleModel.DarkModeEnabled" 
                                                  Text="Dark mode" 
                                                  Icon="dark_mode" />
                                </div>

                                <!-- Variants -->
                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">Auto-save (Primary)</div>
                                    <RToggleGeneric TValue="bool" @bind-Value="toggleModel.AutoSaveEnabled" 
                                                  Text="Auto-save documents" 
                                                  Variant="ToggleVariant.Rounded" />
                                </div>

                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">Backup (Success)</div>
                                    <RToggleGeneric TValue="bool" @bind-Value="toggleModel.BackupEnabled" 
                                                  Text="Automatic backup" 
                                                  Variant="ToggleVariant.Square" 
                                                  Icon="backup" />
                                </div>

                                <!-- Sizes -->
                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">Compact Toggle</div>
                                    <RToggleGeneric TValue="bool" @bind-Value="toggleModel.CompactOption" 
                                                  Text="Compact view" 
                                                  Size="ToggleSize.Small" />
                                </div>

                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">Large Toggle</div>
                                    <RToggleGeneric TValue="bool" @bind-Value="toggleModel.LargeOption" 
                                                  Text="Prominent setting" 
                                                  Size="ToggleSize.Large" />
                                </div>

                                <!-- Disabled Toggle -->
                                <div class="space-y-2">
                                    <div class="text-lg font-semibold">Disabled Option</div>
                                    <RToggleGeneric TValue="bool" @bind-Value="toggleModel.DisabledOption" 
                                                  Text="Premium feature (Upgrade required)" 
                                                  Disabled="true" 
                                                  Icon="lock" />
                                </div>
                            </RFormSection>
                        </div>

                        <!-- Professional Examples -->
                        <div class="space-y-4">
                            <div class="text-h6 font-semibold">Professional Use Cases</div>
                            
                            <RFormSection Title="Security Settings" Icon="security" FieldColumns="1">
                                <RToggleGeneric TValue="bool" @bind-Value="toggleModel.TwoFactorAuth" 
                                              Text="Two-factor authentication" 
                                              Icon="verified_user" 
                                              Variant="ToggleVariant.Square" />
                                <RToggleGeneric TValue="bool" @bind-Value="toggleModel.LoginAlerts" 
                                              Text="Email alerts for new logins" 
                                              Icon="email" />
                                <RToggleGeneric TValue="bool" @bind-Value="toggleModel.SessionTimeout" 
                                              Text="Automatic session timeout" 
                                              Icon="timer" 
                                              Variant="ToggleVariant.Standard" />
                            </RFormSection>

                            <RFormSection Title="Privacy Settings" Icon="privacy_tip" FieldColumns="1">
                                <RToggleGeneric TValue="bool" @bind-Value="toggleModel.PublicProfile" 
                                              Text="Make profile public" 
                                              Icon="public" />
                                <RToggleGeneric TValue="bool" @bind-Value="toggleModel.DataSharing" 
                                              Text="Allow data sharing for analytics" 
                                              Icon="share" />
                                <RToggleGeneric TValue="bool" @bind-Value="toggleModel.MarketingEmails" 
                                              Text="Receive marketing emails" 
                                              Icon="campaign" />
                            </RFormSection>

                            <RFormSection Title="Application Settings" Icon="settings_applications" FieldColumns="1">
                                <RToggleGeneric TValue="bool" @bind-Value="toggleModel.AdvancedFeatures" 
                                              Text="Enable advanced features" 
                                              Icon="tune" 
                                              Variant="ToggleVariant.Rounded" />
                                <RToggleGeneric TValue="bool" @bind-Value="toggleModel.BetaFeatures" 
                                              Text="Participate in beta testing" 
                                              Icon="science" 
                                              Variant="ToggleVariant.Standard" />
                                <RToggleGeneric TValue="bool" @bind-Value="toggleModel.CrashReporting" 
                                              Text="Send crash reports" 
                                              Icon="bug_report" />
                            </RFormSection>
                        </div>
                    </div>
                </ChildContent>
            </RCard>

            <!-- Complete Form Example -->
            <RCard Variant="CardVariant.Glass" Text="Complete Form Example">
                <ChildContent>
                    <RSectionDivider Text="Complete Form Showcase" 
                                     Subtitle="Professional form combining all components with validation" 
                                     Icon="description" />
                    
                    <RFormGeneric Model="completeFormModel" 
                                OnValidSubmit="@OnCompleteFormSubmit">
                        
                        <RFormSection Title="Personal Information" 
                                    Description="Your basic personal details" 
                                    Icon="person" 
                                    FieldColumns="2">
                            <RTextInput @bind-Value="completeFormModel.FirstName" 
                                      Label="First Name *" 
                                      Required="true" />
                            <RTextInput @bind-Value="completeFormModel.LastName" 
                                      Label="Last Name *" 
                                      Required="true" />
                            <RTextInput @bind-Value="completeFormModel.Email" 
                                      Label="Email Address *" 
                                      Type="FieldType.Email" 
                                      Required="true" />
                            <RDatePicker @bind-value="completeFormModel.BirthDate" 
                                        Label="Date of Birth" 
                                        Icon="cake" 
                                        MaxDate="@DateTime.Today.AddYears(-13)" 
                                        Placeholder="Select your birth date..." />
                        </RFormSection>

                        <RFormSection Title="Contact Information" 
                                    Description="How we can reach you" 
                                    Icon="contact_phone" 
                                    FieldColumns="2">
                            <RTextInput @bind-Value="completeFormModel.Phone" 
                                      Label="Phone Number" 
                                      Type="FieldType.Tel" />
                            <RChoice SelectedValue="@completeFormModel.PreferredContact" 
                                   SelectedValueChanged="@((object value) => completeFormModel.PreferredContact = value?.ToString() ?? "")"
                                   Label="Preferred Contact Method" 
                                   Items="@contactMethodOptions" 
                                   Variant="ChoiceVariant.Dropdown" 
                                   Placeholder="How would you like to be contacted?" />
                        </RFormSection>

                        <RFormSection Title="Employment Details" 
                                    Description="Your work information" 
                                    Icon="work" 
                                    FieldColumns="2">
                            <RTextInput @bind-Value="completeFormModel.JobTitle" 
                                      Label="Job Title" />
                            <RChoice SelectedValue="@completeFormModel.Department" 
                                   SelectedValueChanged="@((object value) => completeFormModel.Department = value?.ToString() ?? "")"
                                   Label="Department" 
                                   Items="@departmentOptions" 
                                   Variant="ChoiceVariant.Dropdown" 
                                   Required="true" 
                                   Placeholder="Select your department..." />
                            <RDatePicker @bind-Value="completeFormModel.StartDate" 
                                       Label="Start Date" 
                                       Icon="event" />
                            <RTextInput @bind-Value="completeFormModel.Salary" 
                                      Label="Annual Salary" 
                                      Type="FieldType.Number" />
                        </RFormSection>

                        <RFormSection Title="Preferences" 
                                    Description="Your personal preferences" 
                                    Icon="tune" 
                                    FieldColumns="1">
                            <div class="space-y-3">
                                <div class="text-lg font-semibold">Work Schedule</div>
                                <div class="space-y-2">
                                    <RRadio @bind-SelectedValue="completeFormModel.WorkSchedule" 
                                          Value="full-time" 
                                          Text="Full-time (40 hours/week)" 
                                          Icon="schedule" />
                                    <RRadio @bind-SelectedValue="completeFormModel.WorkSchedule" 
                                          Value="part-time" 
                                          Text="Part-time (20-30 hours/week)" 
                                          Icon="access_time" />
                                    <RRadio @bind-SelectedValue="completeFormModel.WorkSchedule" 
                                          Value="contract" 
                                          Text="Contract/Freelance" 
                                          Icon="assignment" />
                                </div>
                            </div>
                            
                            <div class="space-y-3">
                                <div class="text-lg font-semibold">Settings</div>
                                <RToggleGeneric TValue="bool" @bind-Value="completeFormModel.NewsletterSubscription" 
                                              Text="Subscribe to company newsletter" 
                                              Icon="mail" />
                                <RToggleGeneric TValue="bool" @bind-Value="completeFormModel.RemoteWorkEnabled" 
                                              Text="Enable remote work options" 
                                              Icon="home" />
                            </div>

                            <div class="space-y-3">
                                <div class="text-lg font-semibold">Agreement</div>
                                <RCheckbox @bind-Value="completeFormModel.TermsAccepted" 
                                         Text="I agree to the Terms of Service and Privacy Policy *" 
                                         Required="true" />
                                <RCheckbox @bind-Value="completeFormModel.DataProcessing" 
                                         Text="I consent to data processing for employment purposes *" 
                                         Required="true" />
                            </div>
                        </RFormSection>

                        <RFormSection Title="Documents" 
                                    Description="Upload required documents" 
                                    Icon="upload_file" 
                                    FieldColumns="1">
                            <div class="space-y-4">
                                <div>
                                    <div class="text-lg font-semibold">Resume/CV</div>
                                    <RFileUpload ComponentId="resume-upload-complete" 
                                               DisplayMode="RFileUploadDisplayMode.DropZone"
                                               AllowedTypes="@(new string[] { ".pdf", ".doc", ".docx" })"
                                               MaxSize="5242880" />
                                </div>
                                
                                <div>
                                    <div class="text-lg font-semibold">Profile Photo</div>
                                    <RFileUpload ComponentId="photo-upload-complete" 
                                               DisplayMode="RFileUploadDisplayMode.Button"
                                               AllowedTypes="@(new string[] { ".jpg", ".jpeg", ".png" })"
                                               MaxSize="2097152" />
                                </div>
                            </div>
                        </RFormSection>

                        <RActionGroup Pattern="ActionGroupPattern.CancelSave" />
                    </RFormGeneric>
                </ChildContent>
            </RCard>

        </div>

        <!-- Form Validation Summary -->
        <RCard Variant="CardVariant.Glass" class="mt-8">
            <ChildContent>
                <RSectionDivider Text="Form Component Summary" Icon="summarize" />
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4">
                    <RCard Text="11 Form Components" 
                           Content="Complete set of professional form input controls"
                           Icon="dynamic_form" 
                           Variant="CardVariant.Outlined" />
                    <RCard Text="Validation Support" 
                           Content="Built-in validation with DataAnnotations integration"
                           Icon="verified" 
                           Variant="CardVariant.Outlined" />
                    <RCard Text="Accessibility First" 
                           Content="Full ARIA support and keyboard navigation"
                           Icon="accessibility" 
                           Variant="CardVariant.Outlined" />
                    <RCard Text="Responsive Design" 
                           Content="Mobile-friendly layouts with adaptive spacing"
                           Icon="responsive_layout" 
                           Variant="CardVariant.Outlined" />
                    <RCard Text="Professional Styling" 
                           Content="Enterprise-grade design with theme support"
                           Icon="palette" 
                           Variant="CardVariant.Outlined" />
                    <RCard Text="Smart Defaults" 
                           Content="Intelligent field types and auto-complete support"
                           Icon="psychology" 
                           Variant="CardVariant.Outlined" />
                </div>
            </ChildContent>
        </RCard>

    </div>
</RThemeProvider>

@code {
    // Form Models for Demonstrations
    private CheckboxFormModel checkboxModel = new();
    private DateFormModel dateModel = new();
    private UserRegistrationModel userRegistrationModel = new();
    private ProfileUpdateModel profileUpdateModel = new();
    private FormSectionModel sectionModel = new();
    private RadioFormModel radioModel = new();
    private SelectFormModel selectModel = new();
    private SwitcherFormModel switcherModel = new();
    private TextInputFormModel textInputModel = new();
    private ToggleFormModel toggleModel = new();
    private CompleteFormModel completeFormModel = new();

    // State for sections
    private bool advancedSectionExpanded = false;

    // Choice Options Data
    private List<string> viewModeOptions = new() { "List", "Grid", "Card" };
    private List<string> themeModeOptions = new() { "Light", "Dark", "Auto" };
    private List<string> layoutStyleOptions = new() { "Comfortable", "Compact", "Dense" };
    private List<string> displaySizeOptions = new() { "Small", "Medium", "Large" };
    private List<string> tabOptions = new() { "Overview", "Details", "Settings", "History" };
    
    // Enhanced RChoice Options
    private List<string> roleOptions = new() { "Admin", "Manager", "Employee", "Contractor", "Intern" };
    private List<string> themeOptions = new() { "Light", "Dark", "Auto", "High Contrast" };
    private List<string> languageOptions = new() { "English", "Spanish", "French", "German", "Japanese" };
    private List<string> countryOptions = new() { "United States", "Canada", "United Kingdom", "Germany", "France", "Japan", "Australia" };
    private List<string> departmentOptions = new() { "Engineering", "Marketing", "Sales", "HR", "Finance", "Operations" };
    private List<string> priorityOptions = new() { "Low", "Medium", "High", "Critical" };
    private List<string> statusOptionsWithIcons = new() { "Draft", "In Progress", "Review", "Approved", "Rejected" };
    private List<string> categoryOptions = new() { "Bug", "Feature", "Enhancement", "Documentation", "Question" };
    private List<string> sizeOptions = new() { "Small", "Medium", "Large" };
    private List<string> contactMethodOptions = new() { "Email", "Phone", "SMS", "Slack", "Teams" };
    
    // US States for dropdown demo
    private List<string> usStates = new() 
    { 
        "Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", 
        "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", 
        "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", 
        "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire",
        "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", 
        "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota",
        "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", 
        "Wisconsin", "Wyoming" 
    };
    
    // State for interactive demos
    private bool roleChoiceLoading = false;
    private bool categoryHasError = false;

    // Event Handlers
    private void OnUserRegistrationChanged(UserRegistrationModel model)
    {
        // Handle model changes
    }

    private async Task OnUserRegistrationSubmit(object args)
    {
        // Handle valid form submission
    }

    private async Task OnUserRegistrationInvalid(object args)
    {
        // Handle invalid form submission
    }

    private void OnProfileUpdateChanged(ProfileUpdateModel model)
    {
        // Handle model changes
    }

    private async Task OnProfileUpdateSubmit(object args)
    {
        // Handle form submission
    }

    private void OnCompleteFormChanged(CompleteFormModel model)
    {
        // Handle complete form changes
    }

    private async Task OnCompleteFormSubmit(object args)
    {
        // Handle complete form submission
    }
    
    // Helper methods for RChoice demos
    private string GetStatusIcon(string status)
    {
        return status switch
        {
            "Draft" => "draft",
            "In Progress" => "schedule",
            "Review" => "rate_review",
            "Approved" => "check_circle",
            "Rejected" => "cancel",
            _ => "help"
        };
    }
    
    private void ToggleRoleLoading()
    {
        roleChoiceLoading = !roleChoiceLoading;
        StateHasChanged();
    }
    
    private void ToggleCategoryError()
    {
        categoryHasError = !categoryHasError;
        StateHasChanged();
    }
    
    private string GetTabContent(string tabName)
    {
        return tabName switch
        {
            "Overview" => "This is the overview tab content with general information and summaries.",
            "Details" => "Detailed information and specifications are shown in this section.",
            "Settings" => "Configuration options and preferences can be managed here.",
            "History" => "Historical data and activity logs are displayed in this area.",
            _ => "Select a tab to view its content."
        };
    }

    // Form Model Classes
    public class CheckboxFormModel
    {
        public bool BasicChecked { get; set; }
        public bool WithIcon { get; set; }
        public bool Required { get; set; }
        public bool Disabled { get; set; } = true;
        public bool Default { get; set; }
        public bool Primary { get; set; }
        public bool Success { get; set; }
        public bool Warning { get; set; }
        public bool Error { get; set; }
        public bool Small { get; set; }
        public bool Medium { get; set; } = true;
        public bool Large { get; set; }
        public bool Terms { get; set; }
        public bool Newsletter { get; set; }
        public bool Notifications { get; set; }
        public bool TwoFactor { get; set; }
    }

    public class DateFormModel
    {
        public DateTime? BasicDate { get; set; }
        public DateTime? DateTime { get; set; }
        public DateTime? StartDate { get; set; }
        public DateTime? EndDate { get; set; }
        public DateTime? ConstrainedDate { get; set; }
        public DateTime? SmallDate { get; set; }
        public DateTime? LargeDate { get; set; }
        public DateTime? Time24Hour { get; set; }
        public DateTime? DisabledDate { get; set; } = System.DateTime.Now;
    }


    public class UserRegistrationModel
    {
        [Required]
        public string FirstName { get; set; } = "";
        
        [Required]
        public string LastName { get; set; } = "";
        
        [Required, EmailAddress]
        public string Email { get; set; } = "";
        
        public string Phone { get; set; } = "";
        
        [Required]
        public string Username { get; set; } = "";
        
        [Required, MinLength(8)]
        public string Password { get; set; } = "";
        
        public string Role { get; set; } = "";
        
        public bool NewsletterSubscription { get; set; }
        
        [Required]
        public bool TermsAccepted { get; set; }
    }

    public class ProfileUpdateModel
    {
        public string DisplayName { get; set; } = "";
        public string JobTitle { get; set; } = "";
        public string Department { get; set; } = "";
        public string Location { get; set; } = "";
        public string Bio { get; set; } = "";
    }

    public class FormSectionModel
    {
        public string FirstName { get; set; } = "";
        public string LastName { get; set; } = "";
        public string Email { get; set; } = "";
        public string Phone { get; set; } = "";
        public string Street { get; set; } = "";
        public string City { get; set; } = "";
        public string State { get; set; } = "";
        public string ZipCode { get; set; } = "";
        public bool NotificationsEnabled { get; set; }
        public bool AutoBackup { get; set; }
        public string Theme { get; set; } = "";
        public string Language { get; set; } = "";
        public string Field1 { get; set; } = "";
        public string Field2 { get; set; } = "";
        public string Field3 { get; set; } = "";
        public string FullWidthField { get; set; } = "";
    }

    public class RadioFormModel
    {
        public string SizePreference { get; set; } = "medium";
        public string VariantChoice { get; set; } = "default";
        public string PaymentMethod { get; set; } = "credit_card";
        public string NotificationFrequency { get; set; } = "daily";
        public string SubscriptionPlan { get; set; } = "free";
    }

    public class SelectFormModel
    {
        public string Country { get; set; } = "";
        public string Department { get; set; } = "";
        public string Priority { get; set; } = "";
        public string Status { get; set; } = "";
        public string Role { get; set; } = "";
        public string Category { get; set; } = "";
        public string Size { get; set; } = "";
        public string State { get; set; } = "";
    }

    public class SwitcherFormModel
    {
        public string ViewMode { get; set; } = "List";
        public string ThemeMode { get; set; } = "Auto";
        public string LayoutStyle { get; set; } = "Comfortable";
        public string DisplaySize { get; set; } = "Medium";
        public string ActiveTab { get; set; } = "Overview";
    }

    public class TextInputFormModel
    {
        public string BasicText { get; set; } = "";
        public string Email { get; set; } = "";
        public string Password { get; set; } = "";
        public string Phone { get; set; } = "";
        public string Age { get; set; } = "";
        public string Website { get; set; } = "";
        public string SearchTerm { get; set; } = "";
        public string Username { get; set; } = "";
        public string Description { get; set; } = "";
        public string Bio { get; set; } = "";
        public string Comments { get; set; } = "";
    }

    public class ToggleFormModel
    {
        public bool NotificationsEnabled { get; set; }
        public bool DarkModeEnabled { get; set; }
        public bool AutoSaveEnabled { get; set; } = true;
        public bool BackupEnabled { get; set; } = true;
        public bool CompactOption { get; set; }
        public bool LargeOption { get; set; }
        public bool DisabledOption { get; set; }
        public bool TwoFactorAuth { get; set; } = true;
        public bool LoginAlerts { get; set; } = true;
        public bool SessionTimeout { get; set; }
        public bool PublicProfile { get; set; }
        public bool DataSharing { get; set; }
        public bool MarketingEmails { get; set; }
        public bool AdvancedFeatures { get; set; }
        public bool BetaFeatures { get; set; }
        public bool CrashReporting { get; set; } = true;
    }

    public class CompleteFormModel
    {
        [Required]
        public string FirstName { get; set; } = "";
        
        [Required]
        public string LastName { get; set; } = "";
        
        [Required, EmailAddress]
        public string Email { get; set; } = "";
        
        public DateTime? BirthDate { get; set; }
        public string Phone { get; set; } = "";
        public string PreferredContact { get; set; } = "";
        public string JobTitle { get; set; } = "";
        public string Department { get; set; } = "";
        public DateTime? StartDate { get; set; }
        public string Salary { get; set; } = "";
        public string WorkSchedule { get; set; } = "full-time";
        public bool NewsletterSubscription { get; set; }
        public bool RemoteWorkEnabled { get; set; }
        
        [Required]
        public bool TermsAccepted { get; set; }
        
        [Required]
        public bool DataProcessing { get; set; }
    }
}