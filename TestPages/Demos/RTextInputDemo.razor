@using RR.Blazor.Components.Core
@using RR.Blazor.Components.Form
@using RR.Blazor.Components.Feedback
@using RR.Blazor.Enums
@using System.Text.RegularExpressions
@using RR.Blazor.TestPages.Demos.Components

<div class="relative">
    <GitHubLinkButton FileName="RTextInputDemo.razor" />
    <RCard Variant="CardVariant.Outlined" Text="Input Components">
    <ChildContent>
        <RDivider Text="Comprehensive Input Demo" 
                         Subtitle="RTextInput, RInput smart wrapper, and all input variants" 
                         Icon="text_fields" />
        
        <div class="space-y-6">
            <!-- Basic Usage -->
            <div class="space-y-2">
                <div class="text-h6 font-semibold">Basic Usage</div>
                <RTextInput @bind-Value="@_basicText" 
                            Label="Basic Input" 
                            Placeholder="Enter some text..." />
            </div>

            <!-- Input Types -->
            <div class="space-y-2">
                <div class="text-h6 font-semibold">Input Types</div>
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                    <RTextInput @bind-Value="@_email" 
                                Label="Email" 
                                Type="FieldType.Email"
                                Placeholder="user@example.com"
                                StartIcon="email" />
                    <RTextInput @bind-Value="@_phone" 
                                Label="Phone" 
                                Type="FieldType.Tel"
                                Placeholder="+1 (555) 123-4567"
                                StartIcon="phone" />
                    <RTextInput @bind-Value="@_password" 
                                Label="Password" 
                                Type="FieldType.Password"
                                Placeholder="Enter password" />
                </div>
            </div>

            <!-- Visual Variants -->
            <div class="space-y-2">
                <div class="text-h6 font-semibold">Visual Variants</div>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <RTextInput @bind-Value="@_withStartIcon" 
                                Label="Start Icon" 
                                Placeholder="Search..."
                                StartIcon="search" />
                    <RTextInput @bind-Value="@_withEndIcon" 
                                Label="End Icon" 
                                Placeholder="Clear input"
                                EndIcon="clear" />
                    <RTextInput @bind-Value="@_multiline" 
                                Label="Multiline" 
                                Placeholder="Enter description..."
                                IsMultiLine="true"
                                Rows="3" />
                </div>
            </div>

            <!-- Sizes -->
            <div class="space-y-2">
                <div class="text-h6 font-semibold">Sizes</div>
                <div class="space-y-3">
                    <RTextInput @bind-Value="@_sizeExample" 
                                Label="Small" 
                                Size="SizeType.Small"
                                Placeholder="Small input" />
                    <RTextInput @bind-Value="@_sizeExample" 
                                Label="Medium (Default)" 
                                Size="SizeType.Medium"
                                Placeholder="Medium input" />
                    <RTextInput @bind-Value="@_sizeExample" 
                                Label="Large" 
                                Size="SizeType.Large"
                                Placeholder="Large input" />
                </div>
            </div>

            <!-- States -->
            <div class="space-y-2">
                <div class="text-h6 font-semibold">Input States</div>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <RTextInput @bind-Value="@_disabledText" 
                                Label="Disabled" 
                                Placeholder="This input is disabled"
                                Disabled="true" />
                    <RTextInput @bind-Value="@_readOnlyText" 
                                Label="Read-only" 
                                Placeholder="This input is read-only"
                                ReadOnly="true" />
                    <RTextInput @bind-Value="@_errorText" 
                                Label="Error State" 
                                Placeholder="Invalid input"
                                HasError="true"
                                ErrorMessage="This field contains an error" />
                    <RTextInput @bind-Value="@_validText" 
                                Label="Valid State" 
                                Placeholder="Valid input"
                                StartIcon="check_circle"
                                HelpText="This input is valid" />
                </div>
            </div>

            <!-- Smart Input Wrapper -->
            <div class="space-y-2">
                <div class="text-h6 font-semibold">RInput Smart Wrapper</div>
                <p class="text-sm text-secondary mb-3">Automatically detects input type based on value</p>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <RInput Value="@_smartText" 
                            ValueChanged="@((object value) => _smartText = value?.ToString() ?? "")"
                            Label="Auto-Text" 
                            Placeholder="Type text..." />
                    <RInput Value="@_smartNumber" 
                            ValueChanged="@((object value) => _smartNumber = Convert.ToInt32(value ?? 0))"
                            Label="Auto-Number" 
                            Placeholder="Enter number..." />
                    <RInput Value="@_smartDate" 
                            ValueChanged="@((object value) => _smartDate = value is DateTime dt ? dt : DateTime.Today)"
                            Label="Auto-Date" 
                            Placeholder="Select date..." />
                </div>
            </div>

            <!-- Advanced Features -->
            <div class="space-y-2">
                <div class="text-h6 font-semibold">Advanced Features</div>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <RTextInput @bind-Value="@_withCharCount" 
                                Label="Character Limit" 
                                Placeholder="Max 100 characters..."
                                IsMultiLine="true"
                                Rows="3"
                                MaxLength="100"
                                ShowCharacterCount="true" />
                    <RTextInput @bind-Value="@_validatedEmail" 
                                Label="Email Validation" 
                                Type="FieldType.Email"
                                Placeholder="Enter valid email"
                                StartIcon="email"
                                HasError="@_hasEmailError"
                                ErrorMessage="@_emailErrorMessage"
                                @onblur="ValidateEmail" />
                </div>
            </div>

            <!-- Real-world Form -->
            <div class="space-y-2">
                <div class="text-h6 font-semibold">Complete Form Example</div>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <RTextInput @bind-Value="@_userForm.FirstName" 
                                Label="First Name" 
                                Placeholder="John"
                                Required="true"
                                StartIcon="person" />
                    <RTextInput @bind-Value="@_userForm.LastName" 
                                Label="Last Name" 
                                Placeholder="Doe"
                                Required="true"
                                StartIcon="person" />
                    <RTextInput @bind-Value="@_userForm.Email" 
                                Label="Email Address" 
                                Type="FieldType.Email"
                                Placeholder="john@company.com"
                                StartIcon="email"
                                Required="true" />
                    <RTextInput @bind-Value="@_userForm.Phone" 
                                Label="Phone Number" 
                                Type="FieldType.Tel"
                                Placeholder="+1 (555) 123-4567"
                                StartIcon="phone" />
                </div>
                <RTextInput @bind-Value="@_userForm.Comments" 
                            Label="Additional Comments" 
                            Placeholder="Any additional information..."
                            IsMultiLine="true"
                            Rows="3"
                            MaxLength="500"
                            ShowCharacterCount="true" />
            </div>
        </div>
    </ChildContent>
</RCard>

@code {
    // Basic usage
    private string _basicText = "";

    // Input types
    private string _email = "";
    private string _phone = "";
    private string _password = "";

    // Visual variants
    private string _withStartIcon = "";
    private string _withEndIcon = "";
    private string _multiline = "";

    // Sizes (shared variable for demonstration)
    private string _sizeExample = "";

    // States
    private string _disabledText = "Disabled value";
    private string _readOnlyText = "Read-only value";
    private string _errorText = "Invalid input";
    private string _validText = "Valid input";

    // Smart wrapper examples
    private string _smartText = "";
    private int _smartNumber = 0;
    private DateTime _smartDate = DateTime.Today;

    // Advanced features
    private string _withCharCount = "";
    private string _validatedEmail = "";
    private bool _hasEmailError = false;
    private string _emailErrorMessage = "";

    // Real-world form
    private UserFormModel _userForm = new();

    private static readonly Regex EmailRegex = new(
        @"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$",
        RegexOptions.Compiled | RegexOptions.IgnoreCase);

    private void ValidateEmail()
    {
        if (string.IsNullOrWhiteSpace(_validatedEmail))
        {
            _hasEmailError = true;
            _emailErrorMessage = "Email address is required";
        }
        else if (!EmailRegex.IsMatch(_validatedEmail))
        {
            _hasEmailError = true;
            _emailErrorMessage = "Please enter a valid email address";
        }
        else
        {
            _hasEmailError = false;
            _emailErrorMessage = "";
        }
    }

    public class UserFormModel
    {
        public string FirstName { get; set; } = "";
        public string LastName { get; set; } = "";
        public string Email { get; set; } = "";
        public string Phone { get; set; } = "";
        public string Comments { get; set; } = "";
    }
}
</div>