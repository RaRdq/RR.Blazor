@page "/test/portal-modal"
@using RR.Blazor.Services
@using RR.Blazor.Models
@using RR.Blazor.Enums
@inject IModalService ModalService

<h3>Portal Modal Test</h3>

<div class="mb-3">
    <button class="btn btn-primary me-2" @onclick="TestConfirmationModal">Test Confirmation Modal</button>
    <button class="btn btn-danger me-2" @onclick="TestDestructiveModal">Test Destructive Modal</button>
</div>

<div class="mt-3">
    <p>Result: @result</p>
</div>

<h4 class="mt-5">Test Direct Component</h4>
<p>This section tests that components outside the modal system still work:</p>
<RR.Blazor.Components.Base.RButton Text="Test Button" Variant="RR.Blazor.Enums.ButtonVariant.Primary" />

@code {
    private string result = "No action taken yet";

    private async Task TestConfirmationModal()
    {
        try
        {
            var confirmed = await ModalService.ConfirmAsync(
                "Are you sure you want to proceed?",
                "Confirmation Required"
            );
            
            result = confirmed ? "User confirmed" : "User cancelled";
        }
        catch (Exception ex)
        {
            result = $"Error: {ex.Message}";
        }
    }

    private async Task TestDestructiveModal()
    {
        try
        {
            var confirmed = await ModalService.ConfirmAsync(
                "This action cannot be undone!",
                "Delete Item",
                true // isDestructive
            );
            
            result = confirmed ? "User confirmed deletion" : "User cancelled deletion";
        }
        catch (Exception ex)
        {
            result = $"Error: {ex.Message}";
        }
    }
}