@** 
<summary>Professional form section container with collapsible header and grid layout</summary>
<category>Form</category>
<complexity>Intermediate</complexity>
<ai-prompt>Create a form section with header and organized field layout</ai-prompt>
<ai-common-use>form organization, grouped fields, collapsible sections, multi-step forms</ai-common-use>
<ai-avoid>Don't use for single fields or when no grouping is needed</ai-avoid>
<ai-pattern name="basic-section">Title="Personal Information" FieldColumns="2"</ai-pattern>
<ai-pattern name="collapsible-section">Title="Advanced Settings" Collapsible="true"</ai-pattern>
<ai-pattern name="elevated-section">Title="Important Details" Elevation="SectionElevation.Medium"</ai-pattern>
<ai-pattern name="icon-section">Title="Contact Info" Icon="contact_mail"</ai-pattern>
**@

@attribute [Component("RFormSection", Category = "Form")]
@attribute [AIOptimized(Prompt = "Create form section with organized layout")]

@using RR.Blazor.Attributes
@using RR.Blazor.Enums
@using RR.Blazor.Models
@inherits ComponentBase

<div class="r-form-section @GetSectionElevationClass() @CssClass" 
     role="group" 
     aria-labelledby="@($"section-{sectionId}")"
     data-section-elevation="@Elevation.ToString().ToLowerInvariant()">
     
    @if (ShowHeader && (!string.IsNullOrEmpty(Title) || !string.IsNullOrEmpty(Description)))
    {
        <div class="r-form-section-header @(Collapsible ? "clickable" : "")" 
             @onclick="@(Collapsible ? ToggleExpanded : null)">
            <div class="flex items-center justify-between">
                <div class="flex items-center gap-3">
                    @if (!string.IsNullOrEmpty(Icon))
                    {
                        <div class="r-form-section-icon">
                            <i class="material-symbols-rounded text-primary">@Icon</i>
                        </div>
                    }
                    <div>
                        @if (!string.IsNullOrEmpty(Title))
                        {
                            <h3 id="section-@sectionId" class="r-form-section-title text-h6 font-semibold ma-0">
                                @Title
                            </h3>
                        }
                        @if (!string.IsNullOrEmpty(Description))
                        {
                            <p class="r-form-section-description text-body-2 text-secondary ma-0 mt-1">
                                @Description
                            </p>
                        }
                    </div>
                </div>
                
                @if (Collapsible)
                {
                    <div class="r-form-section-toggle">
                        <i class="material-symbols-rounded text-secondary transition-transform @(Expanded ? "rotate-180" : "")">
                            expand_more
                        </i>
                    </div>
                }
                
                @if (HeaderActions != null)
                {
                    <div class="r-form-section-actions">
                        @HeaderActions
                    </div>
                }
            </div>
        </div>
    }
    
    @if (Expanded)
    {
        <div class="r-form-section-content @(ShowHeader ? "mt-4" : "")" 
             aria-expanded="@Expanded.ToString().ToLowerInvariant()">
            @if (FieldColumns > 1)
            {
                <div class="form-grid-@FieldColumns">
                    @ChildContent
                </div>
            }
            else
            {
                @ChildContent
            }
        </div>
    }
</div>

@code {
    // Configuration
    [Parameter] [AIParameter("Section title displayed in header", Example = "Personal Information")] public string? Title { get; set; }
    [Parameter] [AIParameter("Section description or instructions", Example = "Please provide your contact details")] public string? Description { get; set; }
    [Parameter] [AIParameter("Icon displayed next to section title", Example = "person")] public string? Icon { get; set; }
    [Parameter] [AIParameter("Visual elevation level (None, Subtle, Medium, High)", Example = "SectionElevation.Medium")] public SectionElevation Elevation { get; set; } = SectionElevation.None;
    
    // Layout
    [Parameter] [AIParameter("Number of columns for field layout (1-4)", Example = "2")] public int FieldColumns { get; set; } = 1;
    [Parameter] [AIParameter("Whether to show the section header", Example = "true")] public bool ShowHeader { get; set; } = true;
    
    // Collapsible behavior
    [Parameter] [AIParameter("Allow section to be collapsed/expanded", Example = "true")] public bool Collapsible { get; set; } = false;
    [Parameter] [AIParameter("Whether section is currently expanded", Example = "true")] public bool Expanded { get; set; } = true;
    [Parameter] [AIParameter("Callback when expanded state changes", Example = "OnExpandedChanged")] public EventCallback<bool> ExpandedChanged { get; set; }
    
    // Content
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public RenderFragment? HeaderActions { get; set; }
    
    // Styling
    [Parameter] public string? CssClass { get; set; }
    
    private readonly string sectionId = Guid.NewGuid().ToString("N")[..8];
    
    protected override void OnParametersSet()
    {
        // Validate field columns
        if (FieldColumns < 1 || FieldColumns > 4)
        {
            FieldColumns = 1;
        }
    }
    
    private async Task ToggleExpanded()
    {
        if (!Collapsible) return;
        
        Expanded = !Expanded;
        
        if (ExpandedChanged.HasDelegate)
        {
            await ExpandedChanged.InvokeAsync(Expanded);
        }
        
        StateHasChanged();
    }
    
    private string GetSectionElevationClass()
    {
        return Elevation switch
        {
            SectionElevation.Subtle => "r-form-section-subtle",
            SectionElevation.Medium => "r-form-section-medium",
            SectionElevation.High => "r-form-section-high",
            _ => "r-form-section-none"
        };
    }
}