using Microsoft.AspNetCore.Components;
using RR.Blazor.Enums;

namespace RR.Blazor.Components.Navigation;

/// <summary>
/// Non-generic dropdown component that automatically handles object types.
/// This is the default dropdown component that doesn't require explicit TValue specification.
/// </summary>
public class RDropdown : ComponentBase
{
    [Parameter] public IEnumerable<object> Items { get; set; }
    [Parameter] public object SelectedValue { get; set; }
    [Parameter] public EventCallback<object> SelectedValueChanged { get; set; }
    [Parameter] public Func<object, string> ItemLabelSelector { get; set; }
    [Parameter] public Func<object, string> ItemIconSelector { get; set; }
    [Parameter] public Func<object, bool> ItemDisabledSelector { get; set; }
    [Parameter] public Func<object, bool> SeparatorAfterSelector { get; set; }
    [Parameter] public DropdownPosition Position { get; set; } = DropdownPosition.Bottom;
    [Parameter] public string Header { get; set; }
    [Parameter] public string Footer { get; set; }
    [Parameter] public RenderFragment EmptyContent { get; set; }
    [Parameter] public string EmptyText { get; set; } = "No items available";
    [Parameter] public string LoadingText { get; set; } = "Loading...";
    [Parameter] public bool IsLoading { get; set; } = false;
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public bool CloseOnSelect { get; set; } = true;
    [Parameter] public string AriaLabel { get; set; }
    [Parameter] public string Class { get; set; }
    [Parameter] public string AdditionalClass { get; set; }
    [Parameter] public EventCallback OnOpened { get; set; }
    [Parameter] public EventCallback OnClosed { get; set; }
    [Parameter] public RenderFragment TriggerContent { get; set; }

    protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder)
    {
        builder.OpenComponent<RDropdownGeneric<object>>(0);
        builder.AddAttribute(1, nameof(RDropdownGeneric<object>.Items), Items);
        builder.AddAttribute(2, nameof(RDropdownGeneric<object>.SelectedValue), SelectedValue);
        builder.AddAttribute(3, nameof(RDropdownGeneric<object>.SelectedValueChanged), SelectedValueChanged);
        builder.AddAttribute(4, nameof(RDropdownGeneric<object>.ItemLabelSelector), ItemLabelSelector);
        builder.AddAttribute(5, nameof(RDropdownGeneric<object>.ItemIconSelector), ItemIconSelector);
        builder.AddAttribute(6, nameof(RDropdownGeneric<object>.ItemDisabledSelector), ItemDisabledSelector);
        builder.AddAttribute(7, nameof(RDropdownGeneric<object>.SeparatorAfterSelector), SeparatorAfterSelector);
        builder.AddAttribute(8, nameof(RDropdownGeneric<object>.Position), Position);
        builder.AddAttribute(9, nameof(RDropdownGeneric<object>.Header), Header);
        builder.AddAttribute(10, nameof(RDropdownGeneric<object>.Footer), Footer);
        builder.AddAttribute(11, nameof(RDropdownGeneric<object>.EmptyContent), EmptyContent);
        builder.AddAttribute(12, nameof(RDropdownGeneric<object>.EmptyText), EmptyText);
        builder.AddAttribute(13, nameof(RDropdownGeneric<object>.LoadingText), LoadingText);
        builder.AddAttribute(14, nameof(RDropdownGeneric<object>.IsLoading), IsLoading);
        builder.AddAttribute(15, nameof(RDropdownGeneric<object>.Disabled), Disabled);
        builder.AddAttribute(16, nameof(RDropdownGeneric<object>.CloseOnSelect), CloseOnSelect);
        builder.AddAttribute(17, nameof(RDropdownGeneric<object>.AriaLabel), AriaLabel);
        builder.AddAttribute(18, nameof(RDropdownGeneric<object>.Class), Class);
        builder.AddAttribute(19, nameof(RDropdownGeneric<object>.AdditionalClass), AdditionalClass);
        builder.AddAttribute(20, nameof(RDropdownGeneric<object>.OnOpened), OnOpened);
        builder.AddAttribute(21, nameof(RDropdownGeneric<object>.OnClosed), OnClosed);
        builder.AddAttribute(22, nameof(RDropdownGeneric<object>.TriggerContent), TriggerContent);
        builder.CloseComponent();
    }
}