@namespace RR.Blazor.Components
@using RR.Blazor.Enums
@using RR.Blazor.Components.Base
@inherits RForwardingComponentBase

<div class="empty-state d-flex items-center justify-center min-h-100 @GetContainerClasses() text-center @GetBaseClasses()" @attributes="GetSafeAttributes()">
    <div class="content max-w-lg @GetContentSpacingClasses()">
        @if (!string.IsNullOrEmpty(Image))
        {
            <div class="empty-state-image ma-auto @GetImageSpacingClasses()">
                <img src="@Image" alt="@Text" class="@GetImageSizeClasses() h-auto" />
            </div>
        }
        else if (!string.IsNullOrEmpty(Icon))
        {
            <div class="empty-state-icon d-inline-flex items-center justify-center @GetIconContainerClasses() ma-auto @GetIconSpacingClasses() bg-surface-secondary rounded-full text-muted">
                <i class="icon @GetIconSizeClasses()">@Icon</i>
            </div>
        }
        
        <h3 class="empty-state-title ma-0 @GetTitleSpacingClasses() @GetTitleSizeClasses() font-semibold text-primary">@Text</h3>
        
        @if (!string.IsNullOrEmpty(Description))
        {
            <p class="empty-state-description ma-0 @GetDescriptionSpacingClasses()  text-muted leading-relaxed">@Description</p>
        }
        
        @if (ChildContent != null)
        {
            <div class="empty-state-custom @GetCustomContentSpacingClasses()">
                @ChildContent
            </div>
        }
        
        @if (!string.IsNullOrEmpty(ActionText) && OnAction.HasDelegate)
        {
            <div class="empty-state-actions @GetActionSpacingClasses()">
                <RButton Variant="ButtonVariant.Primary" OnClick="@OnAction" Icon="@ButtonIcon" IconPosition="IconPosition.Start">
                    @ActionText
                </RButton>
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public string Icon { get; set; } = "inbox";
    
    /// <summary>
    /// The primary text content to display. Recommended parameter for all text content.
    /// </summary>
    [Parameter] public string Text { get; set; } = "No data available";
    
    [Parameter] public string Description { get; set; }
    [Parameter] public string ActionText { get; set; }
    [Parameter] public string ButtonIcon { get; set; }
    [Parameter] public EventCallback OnAction { get; set; }
    [Parameter] public string Image { get; set; }

    private string GetContainerClasses()
    {
        return Density switch
        {
            DensityType.Compact => "pa-6",
            DensityType.Dense => "pa-8",
            DensityType.Normal => "pa-12",
            DensityType.Spacious => "pa-16",
            _ => "pa-12"
        };
    }

    private string GetContentSpacingClasses()
    {
        return Density switch
        {
            DensityType.Compact => "gap-2",
            DensityType.Dense => "gap-3",
            DensityType.Normal => "gap-4",
            DensityType.Spacious => "gap-6",
            _ => "gap-4"
        };
    }

    private string GetImageSpacingClasses()
    {
        return Density switch
        {
            DensityType.Compact => "mb-3",
            DensityType.Dense => "mb-4",
            DensityType.Normal => "mb-6",
            DensityType.Spacious => "mb-8",
            _ => "mb-6"
        };
    }

    private string GetImageSizeClasses()
    {
        return Density switch
        {
            DensityType.Compact => "max-w-xs",
            DensityType.Dense => "max-w-sm",
            DensityType.Normal => "max-w-sm",
            DensityType.Spacious => "max-w-md",
            _ => "max-w-sm"
        };
    }

    private string GetIconContainerClasses()
    {
        return Density switch
        {
            DensityType.Compact => "w-60 h-60",
            DensityType.Dense => "w-70 h-70",
            DensityType.Normal => "w-80 h-80",
            DensityType.Spacious => "w-96 h-96",
            _ => "w-80 h-80"
        };
    }

    private string GetIconSpacingClasses()
    {
        return Density switch
        {
            DensityType.Compact => "mb-3",
            DensityType.Dense => "mb-4",
            DensityType.Normal => "mb-6",
            DensityType.Spacious => "mb-8",
            _ => "mb-6"
        };
    }

    private string GetIconSizeClasses()
    {
        return Density switch
        {
            DensityType.Compact => "text-3xl",
            DensityType.Dense => "text-4xl",
            DensityType.Normal => "text-5xl",
            DensityType.Spacious => "text-6xl",
            _ => "text-5xl"
        };
    }

    private string GetTitleSpacingClasses()
    {
        return Density switch
        {
            DensityType.Compact => "mb-1",
            DensityType.Dense => "mb-2",
            DensityType.Normal => "mb-2",
            DensityType.Spacious => "mb-3",
            _ => "mb-2"
        };
    }

    private string GetTitleSizeClasses()
    {
        return Density switch
        {
            DensityType.Compact => "text-lg",
            DensityType.Dense => "text-xl",
            DensityType.Normal => "text-xl",
            DensityType.Spacious => "text-2xl",
            _ => "text-xl"
        };
    }

    private string GetDescriptionSpacingClasses()
    {
        return Density switch
        {
            DensityType.Compact => "mb-4",
            DensityType.Dense => "mb-5",
            DensityType.Normal => "mb-6",
            DensityType.Spacious => "mb-8",
            _ => "mb-6"
        };
    }

    private string GetCustomContentSpacingClasses()
    {
        return Density switch
        {
            DensityType.Compact => "mt-2 mb-2",
            DensityType.Dense => "mt-3 mb-3",
            DensityType.Normal => "mt-4 mb-4",
            DensityType.Spacious => "mt-6 mb-6",
            _ => "mt-4 mb-4"
        };
    }

    private string GetActionSpacingClasses()
    {
        return Density switch
        {
            DensityType.Compact => "mt-4",
            DensityType.Dense => "mt-5",
            DensityType.Normal => "mt-6",
            DensityType.Spacious => "mt-8",
            _ => "mt-6"
        };
    }
}


