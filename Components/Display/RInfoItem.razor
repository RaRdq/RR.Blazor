@* RInfoItem - Reusable component for displaying label-value pairs with optional icons *@
@using RR.Blazor.Components.Base
@inherits RForwardingComponentBase

<div class="info-item @GetInfoItemClasses()" @attributes="GetSafeAttributes()">
    <div class="info-item-label @GetLabelClasses()">
        @if (!string.IsNullOrEmpty(Icon))
        {
            <i class="material-symbols-rounded @GetIconClasses()">@Icon</i>
        }
        <span>@Text</span>
        @if (Required)
        {
            <span class="text-error ml-1">*</span>
        }
    </div>
    <div class="info-item-value @GetValueClasses()">
        @if (!string.IsNullOrEmpty(Value))
        {
            @Value
        }
        @ChildContent
    </div>
</div>

@code {
    /// <summary>Label text for the info item</summary>
    [Parameter] public string Text { get; set; } = "";
    
    /// <summary>Value text for the info item</summary>
    [Parameter] public string Value { get; set; }
    
    /// <summary>Material icon name</summary>
    [Parameter] public string Icon { get; set; }
    
    /// <summary>Whether this field is required</summary>
    [Parameter] public bool Required { get; set; }
    
    /// <summary>Size variant</summary>
    [Parameter] public InfoItemSize Size { get; set; } = InfoItemSize.Medium;
    
    /// <summary>Layout variant</summary>
    [Parameter] public InfoItemLayout Layout { get; set; } = InfoItemLayout.Vertical;
    
    /// <summary>Whether to emphasize the value</summary>
    [Parameter] public bool EmphasizeValue { get; set; }
    
    /// <summary>Additional CSS classes</summary>
    [Parameter] public string Class { get; set; }
    
    /// <summary>Custom content for the value area</summary>
    [Parameter] public RenderFragment ChildContent { get; set; }
    
    private string GetInfoItemClasses()
    {
        var classes = new List<string> { "flex", "gap-2" };
        
        classes.Add(Layout switch
        {
            InfoItemLayout.Horizontal => "items-center justify-between",
            InfoItemLayout.Vertical => "flex-col",
            InfoItemLayout.Inline => "items-center gap-3",
            _ => "flex-col"
        });
        
        if (!string.IsNullOrEmpty(Class))
        {
            classes.Add(Class);
        }
        
        return string.Join(" ", classes);
    }
    
    private string GetLabelClasses()
    {
        var classes = new List<string> { "flex", "items-center", "gap-1" };
        
        classes.Add(Size switch
        {
            InfoItemSize.Small => "text-xs",
            InfoItemSize.Medium => "text-sm",
            InfoItemSize.Large => "text-base",
            _ => "text-sm"
        });
        
        classes.Add("text-secondary font-medium");
        
        return string.Join(" ", classes);
    }
    
    private string GetValueClasses()
    {
        var classes = new List<string>();
        
        classes.Add(Size switch
        {
            InfoItemSize.Small => "text-sm",
            InfoItemSize.Medium => "text-base",
            InfoItemSize.Large => "text-lg",
            _ => "text-base"
        });
        
        if (EmphasizeValue)
        {
            classes.AddRange(new[] { "font-semibold", "text-primary" });
        }
        else
        {
            classes.Add("text-primary");
        }
        
        return string.Join(" ", classes);
    }
    
    private string GetIconClasses()
    {
        return Size switch
        {
            InfoItemSize.Small => "text-sm text-primary",
            InfoItemSize.Medium => "text-base text-primary",
            InfoItemSize.Large => "text-lg text-primary",
            _ => "text-base text-primary"
        };
    }
}

@* 
Usage Examples:

<!-- Basic info item -->
<RInfoItem Text="User ID" Value="USR-12345" Icon="badge" />

<!-- Horizontal layout -->
<RInfoItem Text="Salary" 
           Value="$75,000" 
           Icon="payments" 
           Layout="InfoItemLayout.Horizontal" 
           EmphasizeValue="true" />

<!-- Custom content -->
<RInfoItem Text="Status" Icon="info">
    <span class="pl-2 pr-2 pt-1 pb-1 bg-success-light text-success rounded-full text-xs">Active</span>
</RInfoItem>

<!-- Different sizes -->
<RInfoItem Text="Category" Value="Technology" Size="InfoItemSize.Small" />
<RInfoItem Text="Role" Value="Team Lead" Size="InfoItemSize.Large" />
*@